{"version":3,"sources":["webcomponents-hi-ce-bundle.js","node_modules/@webcomponents/custom-elements/src/Patch/Element.js","node_modules/@webcomponents/custom-elements/src/CustomElementState.js","node_modules/@webcomponents/custom-elements/src/Patch/Interface/ChildNode.js","node_modules/@webcomponents/custom-elements/src/Utilities.js","node_modules/@webcomponents/custom-elements/src/Patch/Node.js","node_modules/@webcomponents/custom-elements/src/Patch/Document.js","node_modules/@webcomponents/custom-elements/src/Patch/Interface/ParentNode.js","node_modules/@webcomponents/custom-elements/src/Patch/HTMLElement.js","node_modules/@webcomponents/custom-elements/src/CustomElementRegistry.js","node_modules/@webcomponents/custom-elements/src/Deferred.js","node_modules/@webcomponents/custom-elements/src/DocumentConstructionObserver.js","node_modules/@webcomponents/custom-elements/src/CustomElementInternals.js","node_modules/@webcomponents/html-imports/src/html-imports.js","node_modules/@webcomponents/custom-elements/src/Patch/Native.js","node_modules/@webcomponents/custom-elements/src/AlreadyConstructedMarker.js","node_modules/@webcomponents/custom-elements/src/custom-elements.js","node_modules/@webcomponents/custom-elements/src/Patch/DocumentFragment.js","src/post-polyfill.js","src/unresolved.js"],"names":["","Utilities.isConnected","Utilities.walkDeepDescendantElements","Utilities.setPropertyUnchecked","AlreadyConstructedMarker","Utilities.isValidCustomElementName"],"mappings":"A;;;;;;;;;;;;;;;;;;;;;;;aAAC,SAAS,EAAG,CCWEA,QAAAA,GAAAA,CAASA,CAATA,CAAoBA,CAgBjCA,QAASA,EAAeA,CAACA,CAADA,CAAcA,CAAdA,CAA8BA,CACpDA,MAAAA,eAAAA,CAAsBA,CAAtBA,CAAmCA,WAAnCA,CAAgDA,CAC9CA,WAAYA,CAAAA,WADkCA,CAE9CA,aAAcA,CAAAA,CAFgCA,CAG9CA,IAAKA,CAAAA,IAHyCA,CAI9CA,IAA4BA,QAAAA,CAASA,CAATA,CAAqBA,CAAAA,IAAAA,EAAAA,IAAAA,CAS3CA,EAAkBA,IAAAA,EARFC,EAAAA,CAAsBD,IAAtBC,CASpBD,GACEA,CACAE,CADkBF,EAClBE,CAAAA,CAAAA,CAAqCF,IAArCE,CAA2CF,QAAAA,CAAAA,CAAAA,CAAWA,CAChDA,CAAJA,GAAgBA,CAAhBA,EACEA,CAAAA,KAAAA,CAAqBA,CAArBA,CAFkDA,CAAtDE,CAFFF,CASAA,EAAAA,IAAAA,KAAAA,CAAwBA,IAAxBA,CAA8BA,CAA9BA,CAEAA,IAAIA,CAAJA,CACEA,IAAKA,IAAIA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA4CA,CAAAA,EAA5CA,CAAiDA,CAC/CA,IAAMA,EAAUA,CAAAA,CAAgBA,CAAhBA,CCnDlBA,EDoDEA,GAAIA,CAAAA,WAAJA,EACEA,CAAAA,qBAAAA,CAA+BA,CAA/BA,CAH6CA,CAU9CA,IAAAA,cAAAA,iBAALA,CAGEA,CAAAA,EAAAA,CAA8BA,IAA9BA,CAHFA,CACEA,CAAAA,EAAAA,CAAoBA,IAApBA,CAIFA,OAAOA,EArCwCA,CAJHA,CAAhDA,CADoDA,CAwKtDA,QAASA,EAA2BA,CAACA,CAADA,CAAcA,CAAdA,CAA0BA,CAC5DG,CAAAA,CAA+BH,CAA/BG,CAA4CH,uBAA5CG,CAOEH,QAAAA,CAASA,CAATA,CAAgBA,CAAhBA,CAAyBA,CACvBA,IAAMA,EAAeC,CAAAA,CAAsBD,CAAtBC,CACfD,EAAAA,CACHA,CAAAA,KAAAA,CAAgBA,IAAhBA,CAAsBA,CAAtBA,CAA6BA,CAA7BA,CAECA,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,CAAzBA,CAGEC;CAAAA,CAAsBD,CAAtBC,CAAJD,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CAEFA,OAAOA,EAZgBA,CAP3BG,CAD4DH,CAvL1DA,CAAJA,EACEG,CAAAA,CAA+BH,OAAAA,UAA/BG,CAAkDH,cAAlDG,CAMEH,QAAAA,CAASA,CAATA,CAAeA,CAGbA,MADAA,KAAAA,gBACAA,CAFMA,CAENA,CAFmBA,CAAAA,KAAAA,CAAiCA,IAAjCA,CAAuCA,CAAvCA,CADNA,CANjBG,CA6DFH,IAAIA,CAAJA,EAAgCA,CAAAA,IAAhCA,CACEA,CAAAA,CAAgBA,OAAAA,UAAhBA,CAAmCA,CAAnCA,CADFA,KAEOA,IAAIA,CAAJA,EAAoCA,CAAAA,IAApCA,CACLA,CAAAA,CAAgBA,WAAAA,UAAhBA,CAAuCA,CAAvCA,CADKA,KAEAA,CAGLA,IAAMA,EAASA,CAAAA,KAAAA,CAAmCA,QAAnCA,CAA6CA,KAA7CA,CAEfA,EAAAA,EAAAA,CAAmBA,QAAAA,CAASA,CAATA,CAAkBA,CACnCA,CAAAA,CAAgBA,CAAhBA,CAAyBA,CACvBA,WAAYA,CAAAA,CADWA,CAEvBA,aAAcA,CAAAA,CAFSA,CAMvBA,IAA4BA,QAAAA,EAAWA,CACrCA,MAAOA,EAAAA,KAAAA,CAA2BA,IAA3BA,CAAiCA,CAAAA,CAAjCA,CAAAA,UAD8BA,CANhBA,CAYvBA,IAA4BA,QAAAA,CAASA,CAATA,CAAwBA,CAKlDA,IAAMA,EAA6BA,UAAnBA,GAAAA,IAAAA,UAAAA,CAAsEA,IAAtCA,QAAhCA,CAAuFA,IAGvGA,KAFAA,CAAAA,UAEAA,CAFmBA,CAEnBA,CAAmCA,CAAnCA,CAAOA,CAAAA,WAAAA,OAAPA,CAAAA,CACEA,CAAAA,KAAAA,CAA6BA,CAA7BA,CAAsCA,CAAAA,WAAAA,CAAmBA,CAAnBA,CAAtCA,CAEFA,KAAAA,CAAkCA,CAAlCA,CAAOA,CAAAA,WAAAA,OAAPA,CAAAA,CACEA,CAAAA,KAAAA,CAA6BA,CAA7BA;AAAsCA,CAAAA,WAAAA,CAAkBA,CAAlBA,CAAtCA,CAZgDA,CAZ7BA,CAAzBA,CADmCA,CAArCA,CALKA,CAsCPG,CAAAA,CAA+BH,OAAAA,UAA/BG,CAAkDH,cAAlDG,CAMEH,QAAAA,CAASA,CAATA,CAAeA,CAAfA,CAAyBA,CAEvBA,GCxHIA,CDwHJA,GAAIA,IAAAA,WAAJA,CACEA,MAAOA,EAAAA,KAAAA,CAAiCA,IAAjCA,CAAuCA,CAAvCA,CAA6CA,CAA7CA,CAGTA,KAAMA,EAAWA,CAAAA,KAAAA,CAAiCA,IAAjCA,CAAuCA,CAAvCA,CACjBA,EAAAA,KAAAA,CAAiCA,IAAjCA,CAAuCA,CAAvCA,CAA6CA,CAA7CA,CACAA,EAAAA,CAAWA,CAAAA,KAAAA,CAAiCA,IAAjCA,CAAuCA,CAAvCA,CACXA,EAAAA,yBAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAA+CA,CAA/CA,CAAyDA,CAAzDA,CAAmEA,IAAnEA,CATuBA,CAN3BG,CAkBAA,EAAAA,CAA+BH,OAAAA,UAA/BG,CAAkDH,gBAAlDG,CAOEH,QAAAA,CAASA,CAATA,CAAoBA,CAApBA,CAA0BA,CAA1BA,CAAoCA,CAElCA,GC3IIA,CD2IJA,GAAIA,IAAAA,WAAJA,CACEA,MAAOA,EAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAAoDA,CAApDA,CAA0DA,CAA1DA,CAGTA,KAAMA,EAAWA,CAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAAoDA,CAApDA,CACjBA,EAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAAoDA,CAApDA,CAA0DA,CAA1DA,CACAA,EAAAA,CAAWA,CAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAAoDA,CAApDA,CACXA,EAAAA,yBAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAA+CA,CAA/CA,CAAyDA,CAAzDA,CAAmEA,CAAnEA,CATkCA,CAPtCG,CAmBAA,EAAAA,CAA+BH,OAAAA,UAA/BG,CAAkDH,iBAAlDG,CAKEH,QAAAA,CAASA,CAATA,CAAeA,CAEbA,GC5JIA,CD4JJA,GAAIA,IAAAA,WAAJA,CACEA,MAAOA,EAAAA,KAAAA,CAAoCA,IAApCA;AAA0CA,CAA1CA,CAGTA,KAAMA,EAAWA,CAAAA,KAAAA,CAAiCA,IAAjCA,CAAuCA,CAAvCA,CACjBA,EAAAA,KAAAA,CAAoCA,IAApCA,CAA0CA,CAA1CA,CACiBA,KAAjBA,GAAIA,CAAJA,EACEA,CAAAA,yBAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAA+CA,CAA/CA,CAAyDA,IAAzDA,CAA+DA,IAA/DA,CATWA,CALjBG,CAkBAA,EAAAA,CAA+BH,OAAAA,UAA/BG,CAAkDH,mBAAlDG,CAMEH,QAAAA,CAASA,CAATA,CAAoBA,CAApBA,CAA0BA,CAExBA,GC/KIA,CD+KJA,GAAIA,IAAAA,WAAJA,CACEA,MAAOA,EAAAA,KAAAA,CAAsCA,IAAtCA,CAA4CA,CAA5CA,CAAuDA,CAAvDA,CAGTA,KAAMA,EAAWA,CAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAAoDA,CAApDA,CACjBA,EAAAA,KAAAA,CAAsCA,IAAtCA,CAA4CA,CAA5CA,CAAuDA,CAAvDA,CAIAA,KAAMA,EAAWA,CAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAAoDA,CAApDA,CACbA,EAAJA,GAAiBA,CAAjBA,EACEA,CAAAA,yBAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CAA+CA,CAA/CA,CAAyDA,CAAzDA,CAAmEA,CAAnEA,CAbsBA,CAN5BG,CAgDIH,EAAJA,CACEA,CAAAA,CAA4BA,WAAAA,UAA5BA,CAAmDA,CAAnDA,CADFA,CAEWA,CAAJA,CACLA,CAAAA,CAA4BA,OAAAA,UAA5BA,CAA+CA,CAA/CA,CADKA,CAGLA,OAAAA,KAAAA,CAAaA,mEAAbA,CAIFA,EAAAA,CAAgBA,CAAhBA,CAA2BA,OAAAA,UAA3BA,CAA8CA,CAC5CA,EAASA,EADmCA,CAE5CA,OAAQA,EAFoCA,CAA9CA,CAKAA,GAAAA,CAAeA,CAAfA,CAA6CA,CAC3CA,EAAQA,EADmCA,CAE3CA,EAAOA,EAFoCA;AAG3CA,YAAaA,EAH8BA,CAI3CA,OAAQA,EAJmCA,CAA7CA,CA9NiCA,CEOpBA,QAAAA,GAAAA,CAASA,CAATA,CAAiCA,CAAjCA,CAA0CA,CFuN7BA,IAAAA,EAAAA,OAAAA,UElN1BA,SAASA,EAAgBA,CAACA,CAADA,CAAgBA,CACvCA,MAAOA,SAAAA,CAASA,CAATA,CAAmBA,CAAVA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,OAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAKRA,EAAAA,CAAiBA,EAQvBA,KAFAA,IAAMA,EAAoBA,EAA1BA,CAESA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAbwBA,CAaJA,OAApBA,CAAkCA,CAAAA,EAAlCA,CAAuCA,CACrCA,IAAMA,EAdgBA,CAcTA,CAAMA,CAANA,CAETA,EAAJA,WAAoBA,QAApBA,EAA+BC,CAAAA,CAAsBD,CAAtBC,CAA/BD,EACEA,CAAAA,KAAAA,CAAuBA,CAAvBA,CAGFA,IAAIA,CAAJA,WAAoBA,iBAApBA,CACEA,IAASA,CAATA,CAAiBA,CAAAA,WAAjBA,CAAkCA,CAAlCA,CAAyCA,CAAzCA,CAAiDA,CAAAA,YAAjDA,CACEA,CAAAA,KAAAA,CAAoBA,CAApBA,CAFJA,KAKEA,EAAAA,KAAAA,CAAoBA,CAApBA,CAZmCA,CAgBvCA,CAAAA,MAAAA,CAAoBA,IAApBA,CA7BwBA,CA6BxBA,CAEAA,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA8CA,CAAAA,EAA9CA,CACEA,CAAAA,EAAAA,CAAyBA,CAAAA,CAAkBA,CAAlBA,CAAzBA,CAGFA,IAAIC,CAAAA,CAAsBD,IAAtBC,CAAJD,CACEA,IAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA2CA,CAAAA,EAA3CA,CACQA,CACNA,CADaA,CAAAA,CAAeA,CAAfA,CACbA,CAAIA,CAAJA,WAAoBA,QAApBA,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CAvCkBA,CADaA,CA+ClBA,IAAAA,EAAvBA,GAAIA,CAAAA,EAAJA,GACiCA,CCwDjCA,ODzDAA,CACwDA,CAAAA,CAAiBA,CAAAA,EAAjBA,CADxDA,CAIuBA,KAAAA,EAAvBA;AAAIA,CAAAA,EAAJA,GACiCA,CCoDjCA,MDrDAA,CACuDA,CAAAA,CAAiBA,CAAAA,EAAjBA,CADvDA,CAI4BA,KAAAA,EAA5BA,GAAIA,CAAAA,YAAJA,EACEG,CAAAA,CAA+BH,CAA/BG,CAA4CH,aAA5CG,CAIEH,QAAAA,CAASA,CAATA,CAAmBA,CAAVA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,OAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAKDA,EAAAA,CAAiBA,EAQvBA,KAFAA,IAAMA,EAAoBA,EAA1BA,CAESA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAbiBA,CAaGA,OAApBA,CAAkCA,CAAAA,EAAlCA,CAAuCA,CACrCA,IAAMA,EAdSA,CAcFA,CAAMA,CAANA,CAETA,EAAJA,WAAoBA,QAApBA,EAA+BC,CAAAA,CAAsBD,CAAtBC,CAA/BD,EACEA,CAAAA,KAAAA,CAAuBA,CAAvBA,CAGFA,IAAIA,CAAJA,WAAoBA,iBAApBA,CACEA,IAASA,CAATA,CAAiBA,CAAAA,WAAjBA,CAAkCA,CAAlCA,CAAyCA,CAAzCA,CAAiDA,CAAAA,YAAjDA,CACEA,CAAAA,KAAAA,CAAoBA,CAApBA,CAFJA,KAKEA,EAAAA,KAAAA,CAAoBA,CAApBA,CAZmCA,CAgBjCA,CAAAA,CAAeC,CAAAA,CAAsBD,IAAtBC,CAErBD,EAAAA,YAAAA,MAAAA,CAA0BA,IAA1BA,CA/BiBA,CA+BjBA,CAEAA,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA8CA,CAAAA,EAA9CA,CACEA,CAAAA,EAAAA,CAAyBA,CAAAA,CAAkBA,CAAlBA,CAAzBA,CAGFA,IAAIA,CAAJA,CAEEA,IADAA,CAAAA,EAAAA,CAAyBA,IAAzBA,CACSA,CAAAA,CAAAA,CAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA2CA,CAAAA,EAA3CA,CACQA,CACNA,CADaA,CAAAA,CAAeA,CAAfA,CACbA,CAAIA,CAAJA,WAAoBA,QAApBA,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CA1CWA,CAJrBG,CAqDqBH,KAAAA,EAAvBA,GAAIA,CAAAA,OAAJA,EACEG,CAAAA,CAA+BH,CAA/BG,CAA4CH,QAA5CG,CACEH,QAAAA,EAAWA,CACTA,IAAMA;AAAeC,CAAAA,CAAsBD,IAAtBC,CAErBD,EAAAA,OAAAA,KAAAA,CAAoBA,IAApBA,CAEIA,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,IAAzBA,CANOA,CADbG,CAnHqDH,CEX1CA,QAAAA,GAAAA,CAASA,CAATA,CAAoBA,CA+JjCA,QAASA,EAAiBA,CAACA,CAADA,CAAcA,CAAdA,CAA8BA,CACtDA,MAAAA,eAAAA,CAAsBA,CAAtBA,CAAmCA,aAAnCA,CAAkDA,CAChDA,WAAYA,CAAAA,WADoCA,CAEhDA,aAAcA,CAAAA,CAFkCA,CAGhDA,IAAKA,CAAAA,IAH2CA,CAIhDA,IAAyBA,QAAAA,CAASA,CAATA,CAAwBA,CAE/CA,GAAIA,IAAAA,SAAJA,GAAsBA,IAAAA,UAAtBA,CACEA,CAAAA,IAAAA,KAAAA,CAAwBA,IAAxBA,CAA8BA,CAA9BA,CADFA,KAAAA,CAKAA,IAAIA,EAAeA,IAAAA,EAGnBA,IAAIA,IAAAA,WAAJA,CAAqBA,CAGnBA,IAAMA,EAAaA,IAAAA,WAAnBA,CACMA,EAAmBA,CAAAA,OACzBA,IAAuBA,CAAvBA,CAAIA,CAAJA,EAA4BC,CAAAA,CAAsBD,IAAtBC,CAA5BD,CAAyDA,CAEvDA,CAAAA,CAAmBA,KAAJA,CAAUA,CAAVA,CACfA,KAAKA,IAAIA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAApBA,CAAsCA,CAAAA,EAAtCA,CACEA,CAAAA,CAAaA,CAAbA,CAAAA,CAAkBA,CAAAA,CAAWA,CAAXA,CAJmCA,CALtCA,CAcrBA,CAAAA,IAAAA,KAAAA,CAAwBA,IAAxBA,CAA8BA,CAA9BA,CAEAA,IAAIA,CAAJA,CACEA,IAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAyCA,CAAAA,EAAzCA,CACEA,CAAAA,EAAAA,CAAyBA,CAAAA,CAAaA,CAAbA,CAAzBA,CA1BJA,CAF+CA,CAJDA,CAAlDA,CADsDA,CA3JxDG,CAAAA,CAA+BH,IAAAA,UAA/BG,CAA+CH,cAA/CG,CAOEH,QAAAA,CAASA,CAATA,CAAeA,CAAfA,CAAwBA,CACtBA,GAAIA,CAAJA,WAAoBA,iBAApBA,CAAsCA,CACpCA,IAAMA;AAAgBA,KAAAA,UAAAA,MAAAA,MAAAA,CAA4BA,CAAAA,WAA5BA,CAChBA,EAAAA,CAAeA,CAAAA,KAAAA,CAA8BA,IAA9BA,CAAoCA,CAApCA,CAA0CA,CAA1CA,CAKrBA,IAAIC,CAAAA,CAAsBD,IAAtBC,CAAJD,CACEA,IAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA0CA,CAAAA,EAA1CA,CACEA,CAAAA,EAAAA,CAAsBA,CAAAA,CAAcA,CAAdA,CAAtBA,CAIJA,OAAOA,EAb6BA,CAgBhCA,CAAAA,CAAmBC,CAAAA,CAAsBD,CAAtBC,CACnBD,EAAAA,CAAeA,CAAAA,KAAAA,CAA8BA,IAA9BA,CAAoCA,CAApCA,CAA0CA,CAA1CA,CAEjBA,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,CAAzBA,CAGEC,EAAAA,CAAsBD,IAAtBC,CAAJD,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CAGFA,OAAOA,EA5BeA,CAP1BG,CAsCAA,EAAAA,CAA+BH,IAAAA,UAA/BG,CAA+CH,aAA/CG,CAMEH,QAAAA,CAASA,CAATA,CAAeA,CACbA,GAAIA,CAAJA,WAAoBA,iBAApBA,CAAsCA,CACpCA,IAAMA,EAAgBA,KAAAA,UAAAA,MAAAA,MAAAA,CAA4BA,CAAAA,WAA5BA,CAChBA,EAAAA,CAAeA,CAAAA,KAAAA,CAA6BA,IAA7BA,CAAmCA,CAAnCA,CAKrBA,IAAIC,CAAAA,CAAsBD,IAAtBC,CAAJD,CACEA,IAAKA,IAAIA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA0CA,CAAAA,EAA1CA,CACEA,CAAAA,EAAAA,CAAsBA,CAAAA,CAAcA,CAAdA,CAAtBA,CAIJA,OAAOA,EAb6BA,CAgBhCA,CAAAA,CAAmBC,CAAAA,CAAsBD,CAAtBC,CACnBD,EAAAA,CAAeA,CAAAA,KAAAA,CAA6BA,IAA7BA,CAAmCA,CAAnCA,CAEjBA,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,CAAzBA,CAGEC,EAAAA,CAAsBD,IAAtBC,CAAJD,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CAGFA,OAAOA,EA5BMA,CANjBG,CAqCAA,EAAAA,CAA+BH,IAAAA,UAA/BG,CAA+CH,WAA/CG,CAMEH,QAAAA,CAASA,CAATA,CAAeA,CACPA,CAAAA,CAAQA,CAAAA,KAAAA,CAA2BA,IAA3BA,CAAiCA,CAAjCA,CAGTA,KAAAA,cAAAA,iBAALA;AAGEA,CAAAA,EAAAA,CAA8BA,CAA9BA,CAHFA,CACEA,CAAAA,EAAAA,CAAoBA,CAApBA,CAIFA,OAAOA,EATMA,CANjBG,CAkBAA,EAAAA,CAA+BH,IAAAA,UAA/BG,CAA+CH,aAA/CG,CAMEH,QAAAA,CAASA,CAATA,CAAeA,CACbA,IAAMA,EAAmBC,CAAAA,CAAsBD,CAAtBC,CAAzBD,CACMA,EAAeA,CAAAA,KAAAA,CAA6BA,IAA7BA,CAAmCA,CAAnCA,CAEjBA,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,CAAzBA,CAGFA,OAAOA,EARMA,CANjBG,CAiBAA,EAAAA,CAA+BH,IAAAA,UAA/BG,CAA+CH,cAA/CG,CAOEH,QAAAA,CAASA,CAATA,CAAuBA,CAAvBA,CAAqCA,CACnCA,GAAIA,CAAJA,WAA4BA,iBAA5BA,CAA8CA,CAC5CA,IAAMA,EAAgBA,KAAAA,UAAAA,MAAAA,MAAAA,CAA4BA,CAAAA,WAA5BA,CAChBA,EAAAA,CAAeA,CAAAA,KAAAA,CAA8BA,IAA9BA,CAAoCA,CAApCA,CAAkDA,CAAlDA,CAKrBA,IAAIC,CAAAA,CAAsBD,IAAtBC,CAAJD,CAEEA,IADAA,CAAAA,EAAAA,CAAyBA,CAAzBA,CACSA,CAAAA,CAAAA,CAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA0CA,CAAAA,EAA1CA,CACEA,CAAAA,EAAAA,CAAsBA,CAAAA,CAAcA,CAAdA,CAAtBA,CAIJA,OAAOA,EAdqCA,CAiBxCA,CAAAA,CAA2BC,CAAAA,CAAsBD,CAAtBC,CACjCD,KAAMA,EAAeA,CAAAA,KAAAA,CAA8BA,IAA9BA,CAAoCA,CAApCA,CAAkDA,CAAlDA,CAArBA,CACMA,EAAkBC,CAAAA,CAAsBD,IAAtBC,CAEpBD,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,CAAzBA,CAGEA,EAAJA,EACEA,CAAAA,EAAAA,CAAyBA,CAAzBA,CAGEA,EAAJA,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CAGFA,OAAOA,EAlC4BA,CAPvCG,CAqFIH,EAAJA,EAA+BA,CAAAA,IAA/BA,CACEA,CAAAA,CAAkBA,IAAAA,UAAlBA,CAAkCA,CAAlCA,CADFA,CAGEA,CAAAA,EAAAA,CAAmBA,QAAAA,CAASA,CAATA,CAAkBA,CACnCA,CAAAA,CAAkBA,CAAlBA,CAA2BA,CACzBA,WAAYA,CAAAA,CADaA,CAEzBA,aAAcA,CAAAA,CAFWA,CAKzBA,IAAyBA,QAAAA,EAAWA,CAIlCA,IAFAA,IAAMA;AAAQA,EAAdA,CAESA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,IAAAA,WAAAA,OAApBA,CAA4CA,CAAAA,EAA5CA,CACEA,CAAAA,KAAAA,CAAWA,IAAAA,WAAAA,CAAgBA,CAAhBA,CAAAA,YAAXA,CAGFA,OAAOA,EAAAA,KAAAA,CAAWA,EAAXA,CAR2BA,CALXA,CAezBA,IAAyBA,QAAAA,CAASA,CAATA,CAAwBA,CAC/CA,IAAAA,CAAOA,IAAAA,WAAPA,CAAAA,CACEA,CAAAA,KAAAA,CAA6BA,IAA7BA,CAAmCA,IAAAA,WAAnCA,CAEFA,EAAAA,KAAAA,CAA6BA,IAA7BA,CAAmCA,QAAAA,eAAAA,CAAwBA,CAAxBA,CAAnCA,CAJ+CA,CAfxBA,CAA3BA,CADmCA,CAArCA,CA1M+BA,CCEpBA,QAAAA,GAAAA,CAASA,CAATA,CAAoBA,CACjCG,CAAAA,CAA+BH,QAAAA,UAA/BG,CAAmDH,eAAnDG,CAMEH,QAAAA,CAASA,CAATA,CAAoBA,CAElBA,GAAIA,IAAAA,iBAAJA,CAA2BA,CACzBA,IAAMA,EAAaA,CAAAA,EAAAA,CAAgCA,CAAhCA,CACnBA,IAAIA,CAAJA,CACEA,MAAOA,KAAKA,CAAAA,YAHWA,CAOrBA,CAAAA,CACHA,CAAAA,KAAAA,CAAmCA,IAAnCA,CAAyCA,CAAzCA,CACHA,EAAAA,EAAAA,CAAgBA,CAAhBA,CACAA,OAAOA,EAZWA,CANtBG,CAqBAA,EAAAA,CAA+BH,QAAAA,UAA/BG,CAAmDH,YAAnDG,CAOEH,QAAAA,CAASA,CAATA,CAAeA,CAAfA,CAAqBA,CACbA,CAAAA,CAAQA,EAAAA,KAAAA,CAAgCA,IAAhCA,CAAsCA,CAAtCA,CAA4CA,CAA5CA,CAETA,KAAAA,iBAALA,CAGEA,CAAAA,EAAAA,CAA8BA,CAA9BA,CAHFA,CACEA,CAAAA,EAAAA,CAAoBA,CAApBA,CAIFA,OAAOA,EARYA,CAPvBG,CAoBAA,EAAAA,CAA+BH,QAAAA,UAA/BG;AAAmDH,iBAAnDG,CAOEH,QAAAA,CAASA,CAATA,CAAoBA,CAApBA,CAA+BA,CAE7BA,GAAIA,IAAAA,iBAAJA,GAA4CA,IAA5CA,GAA8BA,CAA9BA,EAXYA,8BAWZA,GAAoDA,CAApDA,EAA4EA,CAC1EA,IAAMA,EAAaA,CAAAA,EAAAA,CAAgCA,CAAhCA,CACnBA,IAAIA,CAAJA,CACEA,MAAOA,KAAKA,CAAAA,YAH4DA,CAOtEA,CAAAA,CACHA,EAAAA,KAAAA,CAAqCA,IAArCA,CAA2CA,CAA3CA,CAAsDA,CAAtDA,CACHA,EAAAA,EAAAA,CAAgBA,CAAhBA,CACAA,OAAOA,EAZsBA,CAPjCG,CAsBAH,EAAAA,CAAgBA,CAAhBA,CAA2BA,QAAAA,UAA3BA,CAA+CA,CAC7CA,EAASA,EADoCA,CAE7CA,OAAQA,EAFqCA,CAA/CA,CAhEiCA,CCOpBA,QAAAA,EAAAA,CAASA,CAATA,CAAoBA,CAApBA,CAAiCA,CAAjCA,CAA0CA,CAKvDA,QAASA,EAAkBA,CAACA,CAADA,CAAgBA,CACzCA,MAAOA,SAAAA,CAASA,CAATA,CAAmBA,CAAVA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,OAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAKRA,EAAAA,CAAiBA,EAQvBA,KAFAA,IAAMA,EAAoBA,EAA1BA,CAESA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAbwBA,CAaJA,OAApBA,CAAkCA,CAAAA,EAAlCA,CAAuCA,CACrCA,IAAMA,EAdgBA,CAcTA,CAAMA,CAANA,CAETA,EAAJA,WAAoBA,QAApBA,EAA+BC,CAAAA,CAAsBD,CAAtBC,CAA/BD,EACEA,CAAAA,KAAAA,CAAuBA,CAAvBA,CAGFA,IAAIA,CAAJA,WAAoBA,iBAApBA,CACEA,IAASA,CAATA,CAAiBA,CAAAA,WAAjBA,CAAkCA,CAAlCA,CAAyCA,CAAzCA,CAAiDA,CAAAA,YAAjDA,CACEA,CAAAA,KAAAA,CAAoBA,CAApBA,CAFJA;IAKEA,EAAAA,KAAAA,CAAoBA,CAApBA,CAZmCA,CAgBvCA,CAAAA,MAAAA,CAAoBA,IAApBA,CA7BwBA,CA6BxBA,CAEAA,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA8CA,CAAAA,EAA9CA,CACEA,CAAAA,EAAAA,CAAyBA,CAAAA,CAAkBA,CAAlBA,CAAzBA,CAGFA,IAAIC,CAAAA,CAAsBD,IAAtBC,CAAJD,CACEA,IAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA2CA,CAAAA,EAA3CA,CACQA,CACNA,CADaA,CAAAA,CAAeA,CAAfA,CACbA,CAAIA,CAAJA,WAAoBA,QAApBA,EACEA,CAAAA,EAAAA,CAAsBA,CAAtBA,CAvCkBA,CADeA,CA+CnBA,IAAAA,EAAxBA,GAAIA,CAAAA,EAAJA,GACiCA,CH0DjCA,QG3DAA,CACyDA,CAAAA,CAAmBA,CAAAA,EAAnBA,CADzDA,CAIuBA,KAAAA,EAAvBA,GAAIA,CAAAA,OAAJA,GACiCA,CHsDjCA,OGvDAA,CACwDA,CAAAA,CAAmBA,CAAAA,OAAnBA,CADxDA,CAxDuDA,CCR1CA,QAAAA,GAAAA,CAASA,CAATA,CAAoBA,CACjCA,MAAAA,YAAAA,CAAyBA,QAAAA,EAAWA,CAIlCA,QAASA,EAAWA,EAAGA,CAKrBA,IAAMA,EAAcA,IAAAA,YAApBA,CAEMA,EAAaA,CAAAA,EAAAA,CAAkCA,CAAlCA,CACnBA,IAAIA,CAACA,CAALA,CACEA,KAAUA,MAAJA,CAAUA,gFAAVA,CAANA,CAGFA,IAAMA,EAAoBA,CAAAA,kBAE1BA,IAAiCA,CAAjCA,GAAIA,CAAAA,OAAJA,CAMEA,MALMA,EAKCA,CALSA,CAAAA,KAAAA,CAAmCA,QAAnCA,CAA6CA,CAAAA,UAA7CA,CAKTA,CAJPA,MAAAA,eAAAA,CAAsBA,CAAtBA;AAA+BA,CAAAA,UAA/BA,CAIOA,CAHPA,CAAAA,WAGOA,CN7BLA,CM6BKA,CAFPA,CAAAA,gBAEOA,CAFmBA,CAEnBA,CADPA,CAAAA,EAAAA,CAAgBA,CAAhBA,CACOA,CAAAA,CAGHA,EAAAA,CAAYA,CAAAA,OAAZA,CAAuCA,CAC7CA,KAAMA,EAAUA,CAAAA,CAAkBA,CAAlBA,CAChBA,IAAIA,CAAJA,GAAgBI,CAAhBJ,CACEA,KAAUA,MAAJA,CAAUA,0GAAVA,CAANA,CAEFA,CAAAA,CAAkBA,CAAlBA,CAAAA,CAA+BI,CAE/BJ,OAAAA,eAAAA,CAAsBA,CAAtBA,CAA+BA,CAAAA,UAA/BA,CACAA,EAAAA,EAAAA,CAA6CA,CAA7CA,CAEAA,OAAOA,EAjCcA,CAoCvBA,CAAAA,UAAAA,CAAwBA,EAAAA,UAExBA,OAAOA,EA1C2BA,CAAZA,EADSA,CCKjCA,QALmBA,EAKRA,CAACA,CAADA,CAAYA,CAKrBA,IAAAA,EAAAA,CAAmCA,CAAAA,CAMnCA,KAAAA,EAAAA,CAAkBA,CAMlBA,KAAAA,EAAAA,CAA4BA,IAAIA,GAOhCA,KAAAA,EAAAA,CAAsBA,QAAAA,CAAAA,CAAAA,CAAMA,CAAAA,MAAAA,EAAAA,EAAAA,CAM5BA,KAAAA,EAAAA,CAAqBA,CAAAA,CAMrBA,KAAAA,EAAAA,CAA2BA,EAM3BA,KAAAA,EAAAA,CAAqCA,IAAIA,CAAJA,CAAiCA,CAAjCA,CAA4CA,QAA5CA,CA1ChBA,CCTvBA,QADmBA,EACRA,EAAGA,CAAAA,IAAAA,EAAAA,IAWZA,KAAAA,EAAAA,CANAA,IAAAA,EAMAA,CANcA,IAAAA,EAYdA,KAAAA,EAAAA,CAAgBA,IAAIA,OAAJA,CAAYA,QAAAA,CAAAA,CAAAA,CAAWA,CACrCA,CAAAA,EAAAA;AAAgBA,CAEZA,EAAAA,EAAJA,EACEA,CAAAA,CAAQA,CAAAA,EAARA,CAJmCA,CAAvBA,CAjBJA,CCDdA,QADmBA,EACRA,CAACA,CAADA,CAAYA,CAAZA,CAAiBA,CAI1BA,IAAAA,EAAAA,CAAkBA,CAKlBA,KAAAA,EAAAA,CAAiBA,CAKjBA,KAAAA,EAAAA,CAAiBA,IAAAA,EAKjBA,KAAAA,EAAAA,EAAAA,CAAoCA,IAAAA,EAApCA,CAEkCA,UAAlCA,GAAIA,IAAAA,EAAAA,WAAJA,GACEA,IAAAA,EAMAA,CANiBA,IAAIA,gBAAJA,CAAqBA,IAAAA,EAAAA,KAAAA,CAA2BA,IAA3BA,CAArBA,CAMjBA,CAAAA,IAAAA,EAAAA,QAAAA,CAAuBA,IAAAA,EAAvBA,CAAuCA,CACrCA,UAAWA,CAAAA,CAD0BA,CAErCA,QAASA,CAAAA,CAF4BA,CAAvCA,CAPFA,CArB0BA,CCC5BA,QADmBA,EACRA,EAAGA,CAEZA,IAAAA,EAAAA,CAA8BA,IAAIA,GAGlCA,KAAAA,EAAAA,CAAgCA,IAAIA,GAGpCA,KAAAA,EAAAA,CAAgBA,EAGhBA,KAAAA,EAAAA,CAAmBA,CAAAA,CAXPA,CRWTA,QAASA,EAAwBA,CAACA,CAADA,CAAYA,CAClDA,IAAMA,EAAWA,EAAAA,IAAAA,CAAoBA,CAApBA,CACXA,EAAAA,CAAYA,kCAAAA,KAAAA,CAAwCA,CAAxCA,CAClBA,OAAOA,CAACA,CAARA,EAAoBA,CAH8BA,CAW7CA,QAASA,EAAWA,CAACA,CAADA,CAAOA,CAEhCA,IAAMA,EAAcA,CAAAA,YACpBA,IAAoBA,IAAAA,EAApBA,GAAIA,CAAJA,CACEA,MAAOA,EAKTA,KAAAA,CAAOA,CAAPA,EAAkBA,EAAEA,CAAAA,sBAAFA,EAAmCA,CAAnCA,WAAsDA,SAAtDA,CAAlBA,CAAAA,CACEA,CAAAA,CAAUA,CAAAA,WAAVA,GAAiCA,MAAAA,WAAAA;AAAqBA,CAArBA,WAAwCA,WAAxCA,CAAqDA,CAAAA,KAArDA,CAAoEA,IAAAA,EAArGA,CAEFA,OAAOA,EAAGA,CAAAA,CAAHA,EAAeA,EAAAA,CAAAA,sBAAAA,EAAiCA,CAAjCA,WAAoDA,SAApDA,CAAfA,CAZyBA,CAoBlCA,QAASA,EAA4BA,CAACA,CAADA,CAAOA,CAAPA,CAAcA,CAEjDA,IAAAA,CAAOA,CAAPA,EAAeA,CAAfA,GAAwBA,CAAxBA,EAAgCA,CAACA,CAAAA,YAAjCA,CAAAA,CACEA,CAAAA,CAAOA,CAAAA,WAETA,OAASA,EAAFA,EAAUA,CAAVA,GAAmBA,CAAnBA,CAAkCA,CAAAA,YAAlCA,CAA2BA,IALeA,CAsB5CA,QAASA,EAA0BA,CAACA,CAADA,CAAOA,CAAPA,CAAiBA,CAAjBA,CAA6CA,CAA5BA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAiBA,IAAIA,GAE9EA,KADAA,IAAIA,EAAOA,CACXA,CAAOA,CAAPA,CAAAA,CAAaA,CACXA,GAAIA,CAAAA,SAAJA,GAAsBA,IAAAA,aAAtBA,CAAyCA,CACvCA,IAAMA,EAAkCA,CAExCA,EAAAA,CAASA,CAATA,CAEAA,KAAMA,EAAYA,CAAAA,UAClBA,IAAkBA,MAAlBA,GAAIA,CAAJA,EAA4DA,QAA5DA,GAA4BA,CAAAA,aAAAA,CAAqBA,KAArBA,CAA5BA,CAAsEA,CAG9DA,CAAAA,CAAmCA,CAAAA,OACzCA,IAAIA,CAAJA,WAA0BA,KAA1BA,EAAkCA,CAACA,CAAAA,IAAAA,CAAmBA,CAAnBA,CAAnCA,CAIEA,IAFAA,CAAAA,IAAAA,CAAmBA,CAAnBA,CAESA,CAAAA,CAAAA,CAAQA,CAAAA,WAAjBA,CAAwCA,CAAxCA,CAA+CA,CAA/CA,CAAuDA,CAAAA,YAAvDA,CACEA,CAAAA,CAA2BA,CAA3BA,CAAkCA,CAAlCA,CAA4CA,CAA5CA,CAOJA,EAAAA,CAAOA,CAAAA,CAA6BA,CAA7BA,CAAmCA,CAAnCA,CACPA,SAjBoEA,CAAtEA,IAkBOA,IAAkBA,UAAlBA,GAAIA,CAAJA,CAA8BA,CAKnCA,CAAAA;AAAOA,CAAAA,CAA6BA,CAA7BA,CAAmCA,CAAnCA,CACPA,SANmCA,CAWrCA,GADMA,CACNA,CADmBA,CAAAA,gBACnBA,CACEA,IAASA,CAATA,CAAiBA,CAAAA,WAAjBA,CAAwCA,CAAxCA,CAA+CA,CAA/CA,CAAuDA,CAAAA,YAAvDA,CACEA,CAAAA,CAA2BA,CAA3BA,CAAkCA,CAAlCA,CAA4CA,CAA5CA,CArCmCA,CA0CzCA,CAAAA,CAAsBA,CArDjBA,WAAAA,CAqDiBA,CArDEA,WAAnBA,CAAsCA,CAAAA,CAqD3BA,CArD2BA,CAqDrBA,CArDqBA,CAUhCA,CAFwEA,CA0DvFA,QAAgBA,EAAoBA,CAACA,CAADA,CAAcA,CAAdA,CAAoBA,CAApBA,CAA2BA,CAC7DA,CAAAA,CAAYA,CAAZA,CAAAA,CAAoBA,CADyCA,CSrH9DA,SAAAA,CAAAA,CAAAA,CAASA,CAwnBeA,QAAAA,EAAAA,CAACA,CAADA,CAAOA,CAAPA,CAAkBA,CACvCA,GAAkCA,UAAlCA,GAAIA,MAAOA,OAAAA,YAAXA,CACEA,MAAOA,KAAIA,WAAJA,CAAgBA,CAAhBA,CAAsBA,CAAtBA,CAETA,KAAMA,EAAqCA,QAAAA,YAAAA,CAAqBA,aAArBA,CAC3CA,EAAAA,gBAAAA,CAAsBA,CAAtBA,CAA4BA,CAAAA,CAAQA,CAAAA,QAApCA,CAAqDA,CAAAA,CAAQA,CAAAA,WAA7DA,CAAiFA,CAAAA,OAAjFA,CACAA,OAAOA,EANgCA,CArBhBA,QAAAA,EAAAA,CAAAA,CAAAA,CAAWA,CAClCA,GAAIA,CAAJA,CAEEA,MAAOA,EAAAA,cAAAA,GAA0BA,QAA1BA,CAAqCA,CAAAA,cAArCA,CAA6DA,IAEtEA,KAAIA,EAAMA,CAAAA,YACVA,IAAIA,CAACA,CAALA,EAAYA,CAAAA,WAAZA,CAAgCA,CAC9BA,CAAAA,CAA+BA,CAAAA,WAC/BA,IAA2BA,UAA3BA,GAAIA,MAAOA,EAAAA,QAAXA,CAGEA,CAAAA;AAAMA,CAAAA,QAAAA,CAjdWA,kBAidXA,CAHRA,KAMEA,KAAAA,CAAOA,CAACA,CAAAA,CAAaA,CAAbA,CAARA,GAA8BA,CAA9BA,CAAoCA,CAAAA,WAApCA,EAAAA,EAEFA,CAAAA,YAAAA,CAAyBA,CAVKA,CAYhCA,MAAOA,EAlB2BA,CApBXA,QAAAA,EAAAA,CAAAA,CAAAA,CAAYA,CACnCA,IAAIA,EACDA,QAAAA,iBAAAA,CAtasBA,2CAsatBA,CADHA,CAEIA,EAAUA,CAAAA,OACTA,EAALA,CAIAA,CAAAA,CAAQA,CAARA,CAAiBA,QAAAA,CAAAA,CAAAA,CAAOA,CAAAA,MAAAA,EAAAA,CAAkBA,CAAlBA,CAAuBA,QAAAA,EAAMA,CACjCA,CAAlBA,GAAIA,EAAEA,CAANA,EACEA,CAAAA,EAFiDA,CAA7BA,CAAAA,CAAxBA,CAJAA,CACEA,CAAAA,EALiCA,CAlBXA,QAAAA,EAAAA,CAAAA,CAAAA,CAAYA,CACfA,QAAAA,EAAAA,EAAMA,CAGGA,SAA5BA,GAAIA,QAAAA,WAAJA,EAA2CA,QAAAA,KAA3CA,GACEA,QAAAA,oBAAAA,CAA6BA,kBAA7BA,CAAiDA,CAAjDA,CACAA,CAAAA,CAAAA,EAFFA,CAHyBA,CAQ3BA,QAAAA,iBAAAA,CAA0BA,kBAA1BA,CAA8CA,CAA9CA,CACAA,EAAAA,EAVoCA,CAXpBA,QAAAA,EAAAA,CAAAA,CAAAA,CAAYA,CAG5BA,CAAAA,CAAkBA,QAAAA,EAAMA,CAAAA,MAAAA,EAAAA,CAAiBA,QAAAA,EAAMA,CAAAA,MAAAA,EAAAA,EAAYA,CAAAA,EAAZA,CAAvBA,CAAAA,CAAxBA,CAH4BA;AAhCJA,QAAAA,EAAAA,CAACA,CAADA,CAAUA,CAAVA,CAAuBA,CAC/CA,GAAIA,CAAAA,SAAJA,CACEA,CAAAA,EAAYA,CAAAA,EADdA,KAEOA,IAA2BA,QAA3BA,GAAKA,CAAAA,UAALA,EAAuCA,CAACA,CAAAA,IAAxCA,EACkBA,OADlBA,GACJA,CAAAA,UADIA,EAC6BA,CAACA,CAAAA,WAD9BA,CAILA,CAAAA,SACAA,CADsBA,CAAAA,CACtBA,CAAAA,CAAAA,EAAYA,CAAAA,EALPA,KAMAA,CACLA,IAAMA,EAAgBA,QAAAA,CAAAA,CAAAA,CAASA,CAC7BA,CAAAA,oBAAAA,CAA4BA,CAAAA,KAA5BA,CAAwCA,CAAxCA,CACAA,EAAAA,SAAAA,CAAsBA,CAAAA,CACtBA,EAAAA,EAAYA,CAAAA,EAHiBA,CAK/BA,EAAAA,iBAAAA,CAAyBA,MAAzBA,CAAiCA,CAAjCA,CAKKA,EAALA,EAAmCA,OAAnCA,GAAaA,CAAAA,UAAbA,EACEA,CAAAA,iBAAAA,CAAyBA,OAAzBA,CAAkCA,CAAlCA,CAZGA,CATwCA,CAX5BA,QAAAA,EAAAA,CAAAA,CAAAA,CAAQA,CAC3BA,MAAOA,EAAAA,SAAPA,GAAyBA,IAAAA,aAAzBA,EAAiEA,MAAjEA,GAA8CA,CAAAA,UAA9CA,EACmDA,QADnDA,GACqCA,CAADA,IAFTA,CA7U3BA,QADIA,EACOA,EAAGA,CAAAA,IAAAA,EAAAA,IACZA,KAAAA,EAAAA,CAAiBA,EAGjBA,KAAAA,EAAAA,CAAgBA,CAChBA,KAAAA,EAAAA,CAAwBA,IAAIA,gBAAJA,CAAqBA,QAAAA,CAAAA,CAAAA,CAAKA,CAAAA,MAAAA,EAAAA,EAAAA,CAAqBA,CAArBA,CAAAA,CAA1BA,CAExBA,KAAAA,EAAAA,QAAAA,CAA8BA,QAAAA,KAA9BA;AAA6CA,CAC3CA,UAAWA,CAAAA,CADgCA,CAE3CA,QAASA,CAAAA,CAFkCA,CAA7CA,CAQAA,KAAAA,EAAAA,CAAiBA,QAAjBA,CAfYA,CA/JAA,QAAAA,EAAAA,CAACA,CAADA,CAAOA,CAAPA,CAAiBA,CAAjBA,CAAkCA,CAChDA,IAAMA,EAASA,CAAAA,CAAOA,CAAAA,OAAPA,CAAqBA,CAApCA,CACMA,EAAYA,CAAAA,CAAgBA,EAAhBA,CAAoBA,CAEtCA,KADIA,CACJA,CADQA,CAAAA,CAAeA,CAAfA,CAAwBA,CAAxBA,CAA4BA,CACpCA,CAAOA,CAAPA,CAAWA,CAAXA,EAA0BA,CAA1BA,EAAqBA,CAArBA,CAAiCA,CAAjCA,EAAqCA,CAArCA,CACEA,CAAAA,CAASA,CAAAA,CAAKA,CAALA,CAATA,CAAkBA,CAAlBA,CAL8CA,CAxBlDA,IAAMA,EAAoBA,QAApBA,EAAgCA,SAAAA,cAAAA,CAAuBA,MAAvBA,CAAtCA,CAGIA,EAAgBA,IACgBA,EAAAA,CAApCA,GAAIA,eAAJA,EAAuBA,SAAvBA,EACEA,MAAAA,eAAAA,CAAsBA,QAAtBA,CAAgCA,eAAhCA,CAAiDA,CAC/CA,IAAAA,QAAGA,EAAGA,CACJA,MAAOA,EAAPA,GAK2BA,UAAxBA,GAAAA,QAAAA,WAAAA,CACCA,QAAAA,QAAAA,CAAiBA,QAAAA,QAAAA,OAAjBA,CAA2CA,CAA3CA,CADDA,CACiDA,IANpDA,CADIA,CADyCA,CAU/CA,aAAcA,CAAAA,CAViCA,CAAjDA,CA6BFA,KAAMA,EAAiBA,qBAAvBA,CACMA,EAAoBA,oCAD1BA,CAEMA,EAAoBA,iDAF1BA;AAMMA,EAAOA,CAEXA,EAAAA,QAAOA,CAACA,CAADA,CAAUA,CAAVA,CAAgBA,CACjBA,CAAAA,KAAJA,EACEA,CAAAA,aAAAA,CAAqBA,MAArBA,CACEA,CAAAA,EAAAA,CAAgBA,CAAAA,aAAAA,CAAqBA,MAArBA,CAAhBA,CAA8CA,CAA9CA,CADFA,CAGEA,EAAAA,IAAJA,EACEA,CAAAA,aAAAA,CAAqBA,KAArBA,CACEA,CAAAA,EAAAA,CAAgBA,CAAAA,aAAAA,CAAqBA,KAArBA,CAAhBA,CAA6CA,CAA7CA,CADFA,CAGFA,IAA0BA,OAA1BA,GAAIA,CAAAA,UAAJA,CAAmCA,CACjCA,IAAMA,EAAIA,CAAAA,EAAAA,CAAiBA,CAAAA,YAAjBA,CAAsCA,CAAtCA,CAA4CA,CAA5CA,CACVA,EAAAA,YAAAA,CAAsBA,CAAAA,EAAAA,CAAiBA,CAAjBA,CAAoBA,CAApBA,CAA0BA,CAA1BA,CAFWA,CATdA,CAFZA,CAiBXA,EAAAA,QAAWA,CAACA,CAADA,CAAOA,CAAPA,CAAgBA,CAAhBA,CAAwBA,CACjCA,MAAOA,EAAAA,QAAAA,CAAaA,CAAbA,CAAqBA,QAAAA,CAACA,CAADA,CAAIA,CAAJA,CAASA,CAATA,CAAcA,CAAdA,CAAuBA,CAC7CA,CAAAA,CAAUA,CAAAA,QAAAA,CAAYA,OAAZA,CAAqBA,EAArBA,CACVA,EAAJA,GACEA,CADFA,CACYA,CAAAA,EAAAA,CAAgBA,CAAhBA,CAAyBA,CAAzBA,CADZA,CAGAA,OAAOA,EAAPA,CAAaA,GAAbA,CAAoBA,CAApBA,CAA8BA,GAA9BA,CAAqCA,CALYA,CAA5CA,CAD0BA,CAjBxBA,CA2BXA,EAAAA,QAAUA,CAACA,CAADA,CAAMA,CAANA,CAAYA,CAEpBA,GAA0BA,IAAAA,EAA1BA,GAAIA,CAAAA,EAAJA,CAAqCA,CACnCA,CAAAA,EAAAA,CAAoBA,CAAAA,CACpBA,IAAIA,CACFA,IAAMA,EAAIA,IAAIA,GAAJA,CAAQA,GAARA,CAAaA,UAAbA,CACVA,EAAAA,SAAAA,CAAaA,OACbA,EAAAA,EAAAA,CAAgCA,gBAAhCA,GAAqBA,CAAAA,KAHnBA,CAIFA,MAAOA,EAAPA,CAAUA,EANuBA,CASrCA,GAAIA,CAAAA,EAAJA,CACEA,MAAOA,CAACA,IAAIA,GAAJA,CAAQA,CAARA,CAAaA,CAAbA,CAADA,MAILA;CAAAA,CAAMA,CAAAA,EACLA,EAALA,GACEA,CAIAA,CAJMA,QAAAA,eAAAA,mBAAAA,CAA2CA,MAA3CA,CAINA,CAHAA,CAAAA,EAGAA,CAHiBA,CAGjBA,CAFAA,CAAAA,EAEAA,CAFaA,CAAAA,cAAAA,CAAkBA,MAAlBA,CAEbA,CADAA,CAAAA,KAAAA,YAAAA,CAAqBA,CAAAA,EAArBA,CACAA,CAAAA,CAAAA,EAAAA,CAAeA,CAAAA,cAAAA,CAAkBA,GAAlBA,CALjBA,CAOAA,EAAAA,EAAAA,KAAAA,CAAkBA,CAClBA,EAAAA,EAAAA,KAAAA,CAAoBA,CACpBA,OAAOA,EAAAA,EAAAA,KAAPA,EAA4BA,CA1BRA,CA3BXA,CANbA,CAgEMA,EAAMA,CAEVA,MAAOA,CAAAA,CAFGA,CASVA,KAAAA,QAAIA,CAACA,CAADA,CAAMA,CAANA,CAAeA,CAAfA,CAAqBA,CACvBA,GAAKA,CAALA,CAEOA,GAAIA,CAAAA,MAAAA,CAAUA,QAAVA,CAAJA,CAAyBA,CAExBA,CAAAA,CAASA,CAAAA,MAAAA,CAAUA,GAAVA,CAEfA,KAAIA,EAAWA,CAAAA,CAAOA,CAAPA,CAEbA,EAAAA,CAD+BA,EAAjCA,CAFeA,CAAAA,CAAOA,CAAPA,CAEXA,QAAAA,CAAeA,SAAfA,CAAJA,CACaA,IAAAA,CAAKA,CAALA,CADbA,CAGaA,kBAAAA,CAAmBA,CAAnBA,CAEbA,EAAAA,CAAQA,CAARA,CAV8BA,CAAzBA,IAWAA,CACLA,IAAMA,EAAUA,IAAIA,cACpBA,EAAAA,KAAAA,CAAaA,KAAbA,CAAoBA,CAApBA,CAAyBA,CAAAA,MAAzBA,CACAA,EAAAA,OAAAA,CAAiBA,QAAAA,EAAMA,CAKrBA,IAAIA,EAAgBA,CAAAA,YAAhBA,EAAuCA,CAAAA,kBAAAA,CAA0BA,UAA1BA,CACvCA,EAAJA,EAAoDA,CAApDA,GAAqBA,CAAAA,QAAAA,CAAsBA,GAAtBA,CAArBA,GAIEA,CAJFA,EAGkBA,QAAAA,OAHlBA;AAGqCA,QAAAA,SAHrCA,CAGyDA,IAHzDA,CAGgEA,QAAAA,KAHhEA,EAI2BA,CAJ3BA,CAMAA,KAAMA,EAAkCA,CAAAA,SAAlCA,EAAsDA,CAAAA,aACrCA,IAAvBA,GAAIA,CAAAA,OAAJA,EAAiDA,CAAjDA,GAA8BA,CAAAA,OAA9BA,EACoBA,GADpBA,EACEA,CAAAA,OADFA,EAC4CA,GAD5CA,CAC2BA,CAAAA,OAD3BA,CAEEA,CAAAA,CAAQA,CAARA,CAAkBA,CAAlBA,CAFFA,CAIEA,CAAAA,CAAKA,CAALA,CAjBmBA,CAoBvBA,EAAAA,KAAAA,EAvBKA,CAbPA,IACEA,EAAAA,CAAKA,+BAALA,CAFqBA,CATfA,CAhEZA,CAqHMA,EAAOA,SAAAA,KAAAA,CAAeA,SAAAA,UAAfA,CAAPA,EACJA,YAAAA,KAAAA,CAAkBA,SAAAA,UAAlBA,CAoDAA,EAAAA,UAAAA,EAAAA,CAAAA,QAAWA,CAACA,CAADA,CAAMA,CAAAA,IAAAA,EAAAA,IAGfA,EAAAA,CADGA,CAAAA,iBAAAA,CApDgBA,kBAoDhBA,CACHA,CAAeA,QAAAA,CAAAA,CAAAA,CAAQA,CAAAA,MAAAA,EAAAA,EAAAA,CAAgBA,CAAhBA,CAAAA,CAAvBA,CAHeA,CASjBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAUA,CAACA,CAADA,CAAOA,CAAAA,IAAAA,EAAAA,IAAAA,CACTA,EAAMA,CAAAA,KAEZA,IAA4BA,IAAAA,EAA5BA,GAAIA,IAAAA,EAAAA,CAAeA,CAAfA,CAAJA,CAAuCA,CAGrCA,IAAMA,EAAMA,IAAAA,EAAAA,CAAeA,CAAfA,CACRA,EAAJA,EAAWA,CAAAA,SAAXA,GACEA,CAAAA,OACAA,CADcA,CACdA,CAAAA,IAAAA,EAAAA,CAAuBA,CAAvBA,CAFFA,CAJqCA,CAAvCA,IAUAA,KAAAA,EAAAA,EAGAA;AADAA,IAAAA,EAAAA,CAAeA,CAAfA,CACAA,CADsBA,SACtBA,CAAAA,CAAAA,KAAAA,CAASA,CAATA,CAAcA,QAAAA,CAACA,CAADA,CAAWA,CAAXA,CAA6BA,CACnCA,CAAAA,CAAMA,CAAAA,EAAAA,CAAkBA,CAAlBA,CAA4BA,CAA5BA,EAA6CA,CAA7CA,CACZA,EAAAA,EAAAA,CAAeA,CAAfA,CAAAA,CAAsBA,CACtBA,EAAAA,EAAAA,EAEAA,EAAAA,EAAAA,CAAiBA,CAAjBA,CACAA,EAAAA,EAAAA,EANyCA,CAA3CA,CAOGA,QAAAA,EAAMA,CAEPA,CAAAA,EAAAA,CAAeA,CAAfA,CAAAA,CAAsBA,IACtBA,EAAAA,EAAAA,EACAA,EAAAA,EAAAA,EAJOA,CAPTA,CAhBeA,CAqCjBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAYA,CAACA,CAADA,CAAWA,CAAXA,CAAgBA,CAC1BA,GAAIA,CAACA,CAALA,CACEA,MAAOA,SAAAA,uBAAAA,EAGLA,EAAJA,GAKEA,CALFA,CAKaA,CAAAA,QAAAA,CAAiBA,CAAjBA,CAAoCA,QAAAA,CAACA,CAADA,CAAQA,CAARA,CAAYA,CAAZA,CAAmBA,CAChEA,MAAgCA,EAAhCA,GAAIA,CAAAA,QAAAA,CAAcA,OAAdA,CAAJA,CACYA,CADZA,CACwCA,uBADxCA,CAC4CA,CAD5CA,CAGOA,CAJyDA,CAAvDA,CALbA,CAcAA,KAAMA,EACHA,QAAAA,cAAAA,CAAuBA,UAAvBA,CACHA,EAAAA,UAAAA,CAAqBA,CACrBA,IAAIA,CAAAA,QAAJA,CAEEA,CAAAA,CAAUA,CAAAA,QAFZA,KAMEA,KADAA,CACAA,CADUA,QAAAA,uBAAAA,EACVA,CAAOA,CAAAA,WAAPA,CAAAA,CACEA,CAAAA,YAAAA,CAAoBA,CAAAA,WAApBA,CAMJA,IADMA,CACNA,CADeA,CAAAA,cAAAA,CAAsBA,MAAtBA,CACfA,CACEA,CACAA,CADMA,CAAAA,EAAAA,CAAgBA,CAAAA,aAAAA,CAAoBA,MAApBA,CAAhBA;AAA6CA,CAA7CA,CACNA,CAAAA,CAAAA,gBAAAA,CAAuBA,MAAvBA,CAMFA,KAAIA,EAAoBA,CACxBA,EAAAA,CAHGA,CAAAA,iBAAAA,CAlI4BA,wOAkI5BA,CAGHA,CAAYA,QAAAA,CAAAA,CAAAA,CAAKA,CAEfA,CAAAA,CAAkBA,CAAlBA,CACAA,EAAAA,EAAAA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAEAA,EAAAA,aAAAA,CArIuBA,mBAqIvBA,CAAqCA,EAArCA,CAEoBA,SAApBA,GAAIA,CAAAA,UAAJA,EAAgCA,CAACA,CAAAA,IAAjCA,EAA0CA,CAAAA,YAA1CA,GAKEA,CAAAA,aAAAA,CAAeA,KAAfA,CAAsBA,qCAAtBA,CAA8DA,kBAAAA,CAH9CA,CAAAA,YAG8CA,EAH9BA,kBAG8BA;AAHXA,CAGWA,EAJlDA,CAAAA,CAAoBA,GAApBA,CAAwBA,CAAxBA,CAA8CA,EAIIA,EAHFA,OAGEA,EAA9DA,CAEAA,CADAA,CAAAA,YACAA,CADgBA,EAChBA,CAAAA,CAAAA,EAPFA,CAPeA,CAAjBA,CAiBAA,OAAOA,EA7DmBA,CAoE5BA,EAAAA,UAAAA,EAAAA,CAAAA,QAA2BA,EAAGA,CAAAA,IAAAA,EAAAA,IAE5BA,IAAIA,CAAAA,IAAAA,EAAJA,CAAAA,CAGAA,IAAAA,EAAAA,WAAAA,EACAA,KAAAA,QAAAA,CAAaA,QAAbA,CAN4BA,KAcxBA,EAAYA,CAAAA,CAdYA,CAe1BA,EAAWA,CAAAA,CAfeA,CAgBtBA,EAAgBA,QAAAA,EAAMA,CACtBA,CAAJA,EAAgBA,CAAhBA,GAGEA,CAAAA,EAAAA,CAAiBA,QAAjBA,CACAA,CAAIA,CAAAA,EAAJA,GAGAA,CAAAA,EAAAA,QAAAA,CAA8BA,QAAAA,KAA9BA,CAA6CA,CAC3CA,UAAWA,CAAAA,CADgCA,CAE3CA,QAASA,CAAAA,CAFkCA,CAA7CA,CAIAA,CAAAA,CAAAA,EAAAA,EAPAA,CAJFA,CAD0BA,CAe5BA,KAAAA,EAAAA,CAAmBA,QAAAA,EAAMA,CACvBA,CAAAA,CAAWA,CAAAA,CACXA,EAAAA,EAFuBA,CAAzBA,CAIAA,KAAAA,EAAAA,CAAgBA,QAAAA,EAAMA,CACpBA,CAAAA,CAAYA,CAAAA,CACZA,EAAAA,EAFoBA,CAAtBA,CAjCAA,CAF4BA,CA4C9BA,EAAAA,UAAAA,QAAAA,CAAAA,QAAOA,CAACA,CAADA,CAAMA,CAAAA,IAAAA,EAAAA,IAGXA,EAAAA,CADGA,CAAAA,iBAAAA,CAlNgBA,kBAkNhBA,CACHA,CAAYA,QAAAA,CAAAA,CAAAA,CAAKA,CACfA,IAAMA,EAAMA,CAAAA,EAAAA,CAAeA,CAAAA,KAAfA,CAEZA,EADAA,CAAAA,OACAA,CADqCA,CACrCA,GAAWA,CAAAA,SAAXA,GAA4BA,IAAAA,uBAA5BA,GAGEA,CAAAA,EAAAA,CAAeA,CAAAA,KAAfA,CAKAA;AALyBA,CAKzBA,CAJAA,CAAAA,WAIAA,CAJeA,SAIfA,CAF+BA,CAADA,OAE9BA,CAF2CA,CAE3CA,CADAA,CAAAA,QAAAA,CAAaA,CAAbA,CACAA,CAAAA,CAAAA,YAAAA,CAAcA,CAAdA,CARFA,CAHeA,CAAjBA,CAHWA,CAwBbA,EAAAA,UAAAA,EAAAA,CAAAA,QAAUA,CAACA,CAADA,CAAWA,CAGCA,QAAAA,EAAAA,CAAAA,CAAAA,CAAKA,CACvBA,GAAIA,CAAJA,CAAQA,CAARA,CAAWA,CAKTA,IAAMA,EAAIA,CAAAA,CAAGA,CAAHA,CAAVA,CACMA,EACHA,QAAAA,cAAAA,CAAuBA,QAAvBA,CAEHA,EAAAA,gBAAAA,CAzOqBA,mBAyOrBA,CACAA,EAAAA,CAAQA,CAAAA,WAARA,CAAsBA,QAAAA,CAAAA,CAAAA,CAAQA,CAAAA,MAAAA,EAAAA,aAAAA,CAAmBA,CAAAA,KAAnBA,CAA8BA,CAAAA,MAA9BA,CAAAA,CAA9BA,CAEAA,EAAAA,CAAgBA,CAChBA,EAAAA,WAAAA,aAAAA,CAA0BA,CAA1BA,CAAiCA,CAAjCA,CACAA,EAAAA,CAAkBA,CAAlBA,CAAyBA,QAAAA,EAAMA,CAC7BA,CAAAA,CAAgBA,IAChBA,EAAAA,CAAYA,CAAZA,CAAgBA,CAAhBA,CAF6BA,CAA/BA,CAdSA,CAAXA,IAmBEA,EAAAA,EApBqBA,CAFzBA,IAAMA,EAAKA,QAAAA,iBAAAA,CAzNgBA,2BAyNhBA,CAAXA,CACMA,EAAIA,CAAAA,OAwBVA,EAAAA,CAAYA,CAAZA,CA1BmBA,CAiCrBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAaA,CAACA,CAADA,CAAWA,CACtBA,IAAMA,EACHA,QAAAA,iBAAAA,CAzPuBA,wEAyPvBA,CADHA;AAEIA,EAAUA,CAAAA,OACdA,IAAKA,CAALA,CAAAA,CASAA,IAAMA,EAAYA,CAAZA,EAAoBA,CAACA,CAACA,QAAAA,cAAAA,CAjRHA,iDAiRGA,CAC5BA,EAAAA,CAAQA,CAARA,CAAYA,QAAAA,CAAAA,CAAAA,CAAKA,CAEfA,CAAAA,CAAkBA,CAAlBA,CAAqBA,QAAAA,EAAMA,CACzBA,CAAAA,gBAAAA,CA9QqBA,mBA8QrBA,CACkBA,EAAlBA,GAAIA,EAAEA,CAANA,EACEA,CAAAA,EAHuBA,CAA3BA,CAQAA,IAAIA,CAAJA,EAAiBA,CAAAA,WAAjBA,GAAkCA,QAAAA,KAAlCA,CAAiDA,CAE/CA,IAAMA,EAAcA,QAAAA,cAAAA,CAAuBA,CAAAA,UAAvBA,CAEpBA,EAAAA,iBAAAA,CAAkCA,CAElCA,EAAAA,aAAAA,CAAyBA,MAAzBA,CAAiCA,oBAAjCA,CAEAA,EAAAA,WAAAA,aAAAA,CAA0BA,CAA1BA,CAAuCA,CAAAA,YAAvCA,CAEAA,KADIA,CACJA,CADiBA,CAAAA,CAAiBA,CAAjBA,CACjBA,CAAOA,CAAPA,EAAqBA,CAAAA,CAAiBA,CAAjBA,CAArBA,CAAAA,CACEA,CAAAA,CAAaA,CAAAA,CAAiBA,CAAjBA,CAEXA,EAAAA,WAAJA,GAA8BA,QAAAA,KAA9BA,GACEA,CADFA,CACeA,IADfA,CAGAA,SAAAA,KAAAA,aAAAA,CAA2BA,CAA3BA,CAA8BA,CAA9BA,CAEAA,EAAAA,gBAAAA,CAAkBA,MAAlBA,CAlB+CA,CAVlCA,CAAjBA,CAVAA,CAAAA,IACEA,EAAAA,EALoBA,CAkDxBA;CAAAA,UAAAA,EAAAA,CAAAA,QAAUA,EAAGA,CAAAA,IAAAA,EAAAA,IAIXA,EAAAA,CAFGA,QAAAA,iBAAAA,CA7TgBA,kBA6ThBA,CAEHA,CAAYA,QAAAA,CAAAA,CAAAA,CAAKA,CAAAA,MAAAA,EAAAA,EAAAA,CAAuBA,CAAvBA,CAAAA,CAAjBA,CAA4CA,CAAAA,CAA5CA,CAJWA,CAWbA,EAAAA,UAAAA,EAAAA,CAAAA,QAAiBA,CAACA,CAADA,CAAOA,CAEjBA,CAAAA,SAALA,GACEA,CAAAA,SAIAA,CAJmBA,CAAAA,CAInBA,CAFAA,CAAAA,OAEAA,GAFgBA,CAAAA,OAAAA,WAEhBA,CAFyCA,UAEzCA,EAAAA,CAAAA,cAAAA,CAAmBA,CAAAA,CADDA,CAAAA,OAAAA,CAAcA,MAAdA,CAAuBA,OACtBA,CAA0BA,CAC3CA,QAASA,CAAAA,CADkCA,CAE3CA,WAAYA,CAAAA,CAF+BA,CAG3CA,OAAQA,IAAAA,EAHmCA,CAA1BA,CAAnBA,CALFA,CAFsBA,CAkBxBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAeA,CAACA,CAADA,CAAYA,CAAAA,IAAAA,EAAAA,IACzBA,EAAAA,CAAQA,CAARA,CAAmBA,QAAAA,CAAAA,CAAAA,CAAKA,CAAAA,MAAAA,EAAAA,CAAQA,CAAAA,WAARA,CAAsBA,QAAAA,CAAAA,CAAAA,CAAQA,CAChDA,CAAJA,EAAYA,CAAAA,SAAZA,GAA8BA,IAAAA,aAA9BA,GAEMA,CAAAA,CAAaA,CAAbA,CAAJA,CACEA,CAAAA,EAAAA,CAAkDA,CAAlDA,CADFA,CAGEA,CAAAA,EAAAA,CAA2CA,CAA3CA,CALJA,CADoDA,CAA9BA,CAAAA,CAAxBA,CADyBA,CA4I7BA,IAAIA,CAAJA,CAAeA,CAObA,CAAAA,CADGA,QAAAA,iBAAAA,CA1ekBA,kBA0elBA,CACHA;AAAcA,QAAAA,CAAAA,CAAAA,CAAOA,CACdA,CAAAA,OAALA,EAA6CA,SAA7CA,GAAmBA,CAAAA,OAAAA,WAAnBA,GACEA,CAAAA,SADFA,CACoBA,CAAAA,CADpBA,CADmBA,CAArBA,CASAA,KAAMA,EAAgBA,QAAAA,CAAAA,CAAAA,CAASA,CACvBA,CAAAA,CAAgCA,CAAAA,OAClCA,EAAAA,CAAaA,CAAbA,CAAJA,GACEA,CAAAA,SADFA,CACqBA,CAAAA,CADrBA,CAF6BA,CAM/BA,SAAAA,iBAAAA,CAA0BA,MAA1BA,CAAkCA,CAAlCA,CAAiDA,CAAAA,CAAjDA,CACAA,SAAAA,iBAAAA,CAA0BA,OAA1BA,CAAmCA,CAAnCA,CAAkDA,CAAAA,CAAlDA,CAvBaA,CAAfA,IAwBOA,CAMLA,IAAMA,EAAiBA,MAAAA,yBAAAA,CAAgCA,IAAAA,UAAhCA,CAAgDA,SAAhDA,CAGvBA,OAAAA,eAAAA,CAAsBA,CADRA,CAACA,CAADA,EAAmBA,CAAAA,aAAnBA,CAAiDA,IAAjDA,CAAwDA,OAChDA,WAAtBA,CAAuCA,SAAvCA,CAAkDA,CAChDA,IAAAA,QAAGA,EAAGA,CACJA,IAAMA,EAA2CA,CAAAA,CAAaA,IAAbA,CAAAA,CAAqBA,IAArBA,CAA4BA,CAAAA,CAAiBA,IAAjBA,CAC7EA,OAAIA,EAAJA,CAAqBA,CAAAA,KAArBA,CAEIA,CAAJA,EAAsBA,CAAAA,IAAtBA,CAAiDA,CAAAA,IAAAA,KAAAA,CAAwBA,IAAxBA,CAAjDA,CAGOA,CADsCA,QAAAA,cAAAA,CAAuBA,MAAvBA,CACtCA,EAASA,MAAAA,SAATA,MAPHA,CAD0CA,CAUhDA,aAAcA,CAAAA,CAVkCA;AAWhDA,WAAYA,CAAAA,CAXoCA,CAAlDA,CAcAA,EAAAA,CAAkBA,QAAAA,EAAMA,CAAAA,MAAAA,KAAIA,CAAJA,CAAxBA,CAvBKA,CAqCPA,CAAAA,CAAUA,QAAAA,EAAMA,CAAAA,MAAAA,SAAAA,cAAAA,CAAuBA,CAAAA,CAAeA,mBAAfA,CAAoCA,CACzEA,WAAYA,CAAAA,CAD6DA,CAEzEA,QAASA,CAAAA,CAFgEA,CAGzEA,OAAQA,IAAAA,EAHiEA,CAApCA,CAAvBA,CAAAA,CAAhBA,CAOAA,EAAAA,UAAAA,CAAkBA,CAClBA,EAAAA,UAAAA,CAAkBA,CAClBA,EAAAA,iBAAAA,CAAyBA,CAvsBjBA,CAATA,CAADA,CAysBGA,MAAAA,YAzsBHA,CAysByBA,MAAAA,YAzsBzBA,EAysB+CA,EAzsB/CA,CTTAA,KAAMA,GAAkBA,IAAIA,GAAJA,CAAQA,kHAAAA,MAAAA,CAAAA,GAAAA,CAARA,CQsBtBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAaA,CAACA,CAADA,CAAYA,CAAZA,CAAwBA,CACnCA,IAAAA,EAAAA,IAAAA,CAAgCA,CAAhCA,CAA2CA,CAA3CA,CACAA,KAAAA,EAAAA,IAAAA,CAAkCA,CAAAA,YAAlCA,CAA0DA,CAA1DA,CAFmCA,CASrCA,EAAAA,UAAAA,EAAAA,CAAAA,QAAqBA,CAACA,CAADA,CAAYA,CAC/BA,MAAOA,KAAAA,EAAAA,IAAAA,CAAgCA,CAAhCA,CADwBA,CAQjCA;CAAAA,UAAAA,EAAAA,CAAAA,QAAuBA,CAACA,CAADA,CAAcA,CACnCA,MAAOA,KAAAA,EAAAA,IAAAA,CAAkCA,CAAlCA,CAD4BA,CAOrCA,EAAAA,UAAAA,EAAAA,CAAAA,QAAQA,CAACA,CAADA,CAAWA,CACjBA,IAAAA,EAAAA,CAAmBA,CAAAA,CACnBA,KAAAA,EAAAA,KAAAA,CAAmBA,CAAnBA,CAFiBA,CAQnBA,EAAAA,UAAAA,EAAAA,CAAAA,QAASA,CAACA,CAADA,CAAOA,CAAAA,IAAAA,EAAAA,IACTA,KAAAA,EAALA,EAEAE,CAAAA,CAAqCF,CAArCE,CAA2CF,QAAAA,CAAAA,CAAAA,CAAWA,CAAAA,MAAAA,EAAAA,EAAAA,CAAWA,CAAXA,CAAAA,CAAtDE,CAHcF,CAShBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAKA,CAACA,CAADA,CAAOA,CACVA,GAAKA,IAAAA,EAALA,EAEIA,CAAAA,CAAAA,aAFJA,CAEAA,CACAA,CAAAA,aAAAA,CAAoBA,CAAAA,CAEpBA,KAAKA,IAAIA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,IAAAA,EAAAA,OAApBA,CAA0CA,CAAAA,EAA1CA,CACEA,IAAAA,EAAAA,CAAcA,CAAdA,CAAAA,CAAiBA,CAAjBA,CAJFA,CAHUA,CAcZA,EAAAA,UAAAA,EAAAA,CAAAA,QAAWA,CAACA,CAADA,CAAOA,CAChBA,IAAMA,EAAWA,EAEjBE,EAAAA,CAAqCF,CAArCE,CAA2CF,QAAAA,CAAAA,CAAAA,CAAWA,CAAAA,MAAAA,EAAAA,KAAAA,CAAcA,CAAdA,CAAAA,CAAtDE,CAEAF,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAqCA,CAAAA,EAArCA,CAA0CA,CACxCA,IAAMA,EAAUA,CAAAA,CAASA,CAATA,CV/EZA,EUgFJA,GAAIA,CAAAA,WAAJA,CACEA,IAAAA,kBAAAA,CAAuBA,CAAvBA,CADFA,CAGEA,IAAAA,EAAAA,CAAoBA,CAApBA,CALsCA,CAL1BA,CAkBlBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAcA,CAACA,CAADA,CAAOA,CACnBA,IAAMA,EAAWA,EAEjBE,EAAAA,CAAqCF,CAArCE,CAA2CF,QAAAA,CAAAA,CAAAA,CAAWA,CAAAA,MAAAA,EAAAA,KAAAA,CAAcA,CAAdA,CAAAA,CAAtDE,CAEAF;IAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAqCA,CAAAA,EAArCA,CAA0CA,CACxCA,IAAMA,EAAUA,CAAAA,CAASA,CAATA,CVjGZA,EUkGJA,GAAIA,CAAAA,WAAJA,EACEA,IAAAA,qBAAAA,CAA0BA,CAA1BA,CAHsCA,CALvBA,CA+ErBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAmBA,CAACA,CAADA,CAAOA,CAAPA,CAAqBA,CAAAA,IAAAA,EAAAA,IAAdA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAUA,EAClCA,KAAMA,EAAiBA,CAAAA,EAAjBA,EAA2CA,IAAIA,GAArDA,CACMA,EAAUA,CAAAA,EAAVA,EAA8BA,QAAAA,CAAAA,CAAAA,CAAWA,CAAAA,MAAAA,EAAAA,EAAAA,CAAoBA,CAApBA,CAAAA,CAD/CA,CAGMA,EAAWA,EA6CjBE,EAAAA,CAAqCF,CAArCE,CA3CuBF,QAAAA,CAAAA,CAAAA,CAAWA,CAChCA,GAA0BA,MAA1BA,GAAIA,CAAAA,UAAJA,EAAoEA,QAApEA,GAAoCA,CAAAA,aAAAA,CAAqBA,KAArBA,CAApCA,CAA8EA,CAG5EA,IAAMA,EAAmCA,CAAAA,OAErCA,EAAJA,WAA0BA,KAA1BA,EAA4DA,UAA5DA,GAAkCA,CAAAA,WAAlCA,EACEA,CAAAA,sBAGAA,CAHmCA,CAAAA,CAGnCA,CAAAA,CAAAA,iBAAAA,CAA8BA,CAAAA,CAJhCA,EAQEA,CAAAA,iBAAAA,CAAyBA,MAAzBA,CAAiCA,QAAAA,EAAMA,CACrCA,IAAMA,EAAmCA,CAAAA,OAEzCA,IAAIA,CAAAA,CAAAA,yBAAJA,CAAAA,CACAA,CAAAA,yBAAAA,CAAsCA,CAAAA,CAEtCA,EAAAA,sBAAAA;AAAmCA,CAAAA,CAGnCA,EAAAA,iBAAAA,CAA8BA,CAAAA,CAO9BA,KAAMA,EAAuBA,IAAIA,GAAJA,CAAQA,CAARA,CAC7BA,EAAAA,OAAAA,CAA4BA,CAA5BA,CAEAA,EAAAA,EAAAA,CAAyBA,CAAzBA,CAAqCA,CAACA,EAAgBA,CAAjBA,CAAuCA,EAAAA,CAAvCA,CAArCA,CAhBAA,CAHqCA,CAAvCA,CAb0EA,CAA9EA,IAoCEA,EAAAA,KAAAA,CAAcA,CAAdA,CArC8BA,CA2ClCE,CAA2DF,CAA3DE,CAEAF,IAAIA,IAAAA,EAAJA,CACEA,IAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAqCA,CAAAA,EAArCA,CACEA,IAAAA,EAAAA,CAAWA,CAAAA,CAASA,CAATA,CAAXA,CAIJA,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAqCA,CAAAA,EAArCA,CACEA,CAAAA,CAAQA,CAAAA,CAASA,CAATA,CAARA,CA1DoCA,CAiExCA,EAAAA,UAAAA,EAAAA,CAAAA,QAAcA,CAACA,CAADA,CAAUA,CAEtBA,GAAqBA,IAAAA,EAArBA,GADqBA,CAAAA,WACrBA,CAAAA,CAEAA,IAAMA,EAAaA,IAAAA,EAAAA,CAA2BA,CAAAA,UAA3BA,CACnBA,IAAKA,CAALA,CAAAA,CAEAA,CAAAA,kBAAAA,KAAAA,CAAkCA,CAAlCA,CAEAA,KAAMA,EAAcA,CAAAA,YACpBA,IAAIA,CACFA,GAAIA,CAEFA,GADaA,IAAKA,CAClBA,GAAeA,CAAfA,CACEA,KAAUA,MAAJA,CAAUA,4EAAVA,CAANA,CAHAA,CAAJA,OAKUA,CACRA,CAAAA,kBAAAA,IAAAA,EADQA,CANRA,CASFA,MAAOA,CAAPA,CAAUA,CAEVA,KADAA,EAAAA,WACMA,CV/PFA,CU+PEA,CAAAA,CAANA,CAFUA,CAKZA,CAAAA,WAAAA,CVnQMA,CUoQNA,EAAAA,gBAAAA;AAA0BA,CAE1BA,IAAIA,CAAAA,yBAAJA,CAEEA,IADMA,CACGA,CADkBA,CAAAA,mBAClBA,CAAAA,CAAAA,CAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA+CA,CAAAA,EAA/CA,CAAoDA,CAClDA,IAAMA,EAAOA,CAAAA,CAAmBA,CAAnBA,CAAbA,CACMA,EAAQA,CAAAA,aAAAA,CAAqBA,CAArBA,CACAA,KAAdA,GAAIA,CAAJA,EACEA,IAAAA,yBAAAA,CAA8BA,CAA9BA,CAAuCA,CAAvCA,CAA6CA,IAA7CA,CAAmDA,CAAnDA,CAA0DA,IAA1DA,CAJgDA,CASlDC,CAAAA,CAAsBD,CAAtBC,CAAJD,EACEA,IAAAA,kBAAAA,CAAuBA,CAAvBA,CAlCFA,CAHAA,CAFsBA,CA8CxBA,EAAAA,UAAAA,kBAAAA,CAAAA,QAAiBA,CAACA,CAADA,CAAUA,CACzBA,IAAMA,EAAaA,CAAAA,gBACfA,EAAAA,kBAAJA,EACEA,CAAAA,kBAAAA,KAAAA,CAAkCA,CAAlCA,CAHuBA,CAU3BA,EAAAA,UAAAA,qBAAAA,CAAAA,QAAoBA,CAACA,CAADA,CAAUA,CAC5BA,IAAMA,EAAaA,CAAAA,gBACfA,EAAAA,qBAAJA,EACEA,CAAAA,qBAAAA,KAAAA,CAAqCA,CAArCA,CAH0BA,CAc9BA,EAAAA,UAAAA,yBAAAA,CAAAA,QAAwBA,CAACA,CAADA,CAAUA,CAAVA,CAAgBA,CAAhBA,CAA0BA,CAA1BA,CAAoCA,CAApCA,CAA+CA,CACrEA,IAAMA;AAAaA,CAAAA,gBAEjBA,EAAAA,yBADFA,EAEiDA,EAFjDA,CAEEA,CAAAA,mBAAAA,QAAAA,CAAsCA,CAAtCA,CAFFA,EAIEA,CAAAA,yBAAAA,KAAAA,CAAyCA,CAAzCA,CAAkDA,CAAlDA,CAAwDA,CAAxDA,CAAkEA,CAAlEA,CAA4EA,CAA5EA,CANmEA,CD/QvEA,EAAAA,UAAAA,EAAAA,CAAAA,QAAUA,EAAGA,CACPA,IAAAA,EAAJA,EACEA,IAAAA,EAAAA,WAAAA,EAFSA,CASbA,EAAAA,UAAAA,EAAAA,CAAAA,QAAgBA,CAACA,CAADA,CAAYA,CAI1BA,IAAMA,EAAaA,IAAAA,EAAAA,WACAA,cAAnBA,GAAIA,CAAJA,EAAmDA,UAAnDA,GAAoCA,CAApCA,EACEA,IAAAA,EAAAA,EAGFA,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAsCA,CAAAA,EAAtCA,CAEEA,IADAA,IAAMA,EAAaA,CAAAA,CAAUA,CAAVA,CAAAA,WAAnBA,CACSA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAuCA,CAAAA,EAAvCA,CAEEA,IAAAA,EAAAA,EAAAA,CADaA,CAAAA,CAAWA,CAAXA,CACbA,CAbsBA,CDd5BA,EAAAA,UAAAA,EAAAA,CAAAA,QAAOA,EAAQA,CACbA,GAAIA,IAAAA,EAAJA,CACEA,KAAUA,MAAJA,CAAUA,mBAAVA,CAANA,CAGFA,IAAAA,EAAAA,CDgKqBA,IAAAA,EC9JjBA,KAAAA,EAAJA,EACEA,IAAAA,EAAAA,CD6JmBA,IAAAA,EC7JnBA,CARWA,CD6BfA,EAAAA,UAAAA,OAAAA,CAAAA,QAAMA,CAACA,CAADA,CAAYA,CAAZA,CAAyBA,CAAAA,IAAAA;AAAAA,IAC7BA,IAAIA,EAAEA,CAAFA,WAAyBA,SAAzBA,CAAJA,CACEA,KAAMA,KAAIA,SAAJA,CAAcA,gDAAdA,CAANA,CAGFA,GAAIA,CAACK,CAAAA,CAAmCL,CAAnCK,CAALL,CACEA,KAAMA,KAAIA,WAAJA,CAAgBA,oBAAhBA,CAAqCA,CAArCA,CAA8CA,iBAA9CA,CAANA,CAGFA,GAAIA,IAAAA,EAAAA,EAAAA,CAAsCA,CAAtCA,CAAJA,CACEA,KAAUA,MAAJA,CAAUA,8BAAVA,CAAyCA,CAAzCA,CAAkDA,6BAAlDA,CAANA,CAGFA,GAAIA,IAAAA,EAAJA,CACEA,KAAUA,MAAJA,CAAUA,4CAAVA,CAANA,CAEFA,IAAAA,EAAAA,CAAmCA,CAAAA,CAOnCA,IAAIA,CAOFA,IAASA,EAATA,QAAoBA,CAACA,CAADA,CAAOA,CACzBA,IAAMA,EAAgBA,CAAAA,CAAUA,CAAVA,CACtBA,IAAsBA,IAAAA,EAAtBA,GAAIA,CAAJA,EAAmCA,EAAEA,CAAFA,WAA2BA,SAA3BA,CAAnCA,CACEA,KAAUA,MAAJA,CAAUA,OAAVA,CAAkBA,CAAlBA,CAAsBA,gCAAtBA,CAANA,CAEFA,MAAOA,EALkBA,CAA3BA,CALMA,EAAYA,CAAAA,UAClBA,IAAIA,EAAEA,CAAFA;AAAuBA,MAAvBA,CAAJA,CACEA,KAAMA,KAAIA,SAAJA,CAAcA,8DAAdA,CAANA,CAWFA,IAAAA,EAAoBA,CAAAA,CAAYA,mBAAZA,CACpBA,KAAAA,EAAuBA,CAAAA,CAAYA,sBAAZA,CACvBA,KAAAA,EAAkBA,CAAAA,CAAYA,iBAAZA,CAClBA,KAAAA,EAA2BA,CAAAA,CAAYA,0BAAZA,CAC3BA,KAAAA,EAAqBA,CAAAA,mBAArBA,EAA0DA,EAnBxDA,CAoBFA,MAAOA,CAAPA,CAAUA,CACVA,MADUA,CApBZA,OAsBUA,CACRA,IAAAA,EAAAA,CAAmCA,CAAAA,CAD3BA,CAIJA,CAAAA,CAAaA,CACjBA,UAAAA,CADiBA,CAEjBA,YAAAA,CAFiBA,CAGjBA,kBAAAA,CAHiBA,CAIjBA,qBAAAA,CAJiBA,CAKjBA,gBAAAA,CALiBA,CAMjBA,yBAAAA,CANiBA,CAOjBA,mBAAAA,CAPiBA,CAQjBA,kBAAmBA,EARFA,CAWnBA,KAAAA,EAAAA,EAAAA,CAA8BA,CAA9BA,CAAyCA,CAAzCA,CACAA,KAAAA,EAAAA,KAAAA,CAA8BA,CAA9BA,CAIKA,KAAAA,EAALA,GACEA,IAAAA,EACAA,CADqBA,CAAAA,CACrBA,CAAAA,IAAAA,EAAAA,CAAoBA,QAAAA,EAAMA,CAAAA,MAAAA,EAAAA,EAAAA,EAAAA,CAA1BA,CAFFA,CAjE6BA,CAuE/BA;CAAAA,UAAAA,EAAAA,CAAAA,QAAMA,EAAGA,CAAAA,IAAAA,EAAAA,IAIPA,IAA2BA,CAAAA,CAA3BA,GAAIA,IAAAA,EAAJA,CAAAA,CACAA,IAAAA,EAAAA,CAAqBA,CAAAA,CAiBrBA,KAfAA,IAAMA,EAAqBA,IAAAA,EAA3BA,CAOMA,EAAgCA,EAPtCA,CAcMA,EAAiCA,IAAIA,GAd3CA,CAeSA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA+CA,CAAAA,EAA/CA,CACEA,CAAAA,IAAAA,CAAmCA,CAAAA,CAAmBA,CAAnBA,CAAAA,UAAnCA,CAAoEA,EAApEA,CAGFA,KAAAA,EAAAA,EAAAA,CAAoCA,QAApCA,CAA8CA,CAC5CA,EAASA,QAAAA,CAAAA,CAAAA,CAAWA,CAElBA,GAA2BA,IAAAA,EAA3BA,GAAIA,CAAAA,WAAJA,CAAAA,CAEAA,IAAMA,EAAYA,CAAAA,UAAlBA,CAIMA,EAAkBA,CAAAA,IAAAA,CAAmCA,CAAnCA,CACpBA,EAAJA,CACEA,CAAAA,KAAAA,CAAqBA,CAArBA,CADFA,CAIWA,CAAAA,EAAAA,EAAAA,CAAsCA,CAAtCA,CAJXA,EAKEA,CAAAA,KAAAA,CAAmCA,CAAnCA,CAZFA,CAFkBA,CADwBA,CAA9CA,CAqBAA,KAASA,CAATA,CAAaA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAA0DA,CAAAA,EAA1DA,CACEA,IAAAA,EAAAA,EAAAA,CAA+BA,CAAAA,CAA8BA,CAA9BA,CAA/BA,CAIFA,KAAAA,CAAmCA,CAAnCA,CAAOA,CAAAA,OAAPA,CAAAA,CAAsCA,CACpCA,IAAMA,EAAaA,CAAAA,MAAAA,EACbA,EAAAA,CAAYA,CAAAA,UAGZA,EAAAA,CAA4BA,CAAAA,IAAAA,CAAmCA,CAAAA,UAAnCA,CAClCA,KAAKA,IAAIA,EAAIA,CAAbA,CAAgBA,CAAhBA,CAAoBA,CAAAA,OAApBA,CAAsDA,CAAAA,EAAtDA,CACEA,IAAAA,EAAAA,EAAAA,CAA+BA,CAAAA,CAA0BA,CAA1BA,CAA/BA,CAKFA,EADMA,CACNA,CADiBA,IAAAA,EAAAA,IAAAA,CAA8BA,CAA9BA,CACjBA,GACEA,CAAAA,EAAAA,EAbkCA,CAhDtCA,CAJOA,CA0ETA,EAAAA,UAAAA,IAAAA,CAAAA,QAAGA,CAACA,CAADA,CAAYA,CAEbA,GADMA,CACNA,CADmBA,IAAAA,EAAAA,EAAAA,CAAsCA,CAAtCA,CACnBA,CACEA,MAAOA,EAAAA,YAHIA,CAafA;CAAAA,UAAAA,YAAAA,CAAAA,QAAWA,CAACA,CAADA,CAAYA,CACrBA,GAAIA,CAACK,CAAAA,CAAmCL,CAAnCK,CAALL,CACEA,MAAOA,QAAAA,OAAAA,CAAeA,IAAIA,WAAJA,CAAgBA,GAAhBA,CAAoBA,CAApBA,CAA6BA,uCAA7BA,CAAfA,CAGTA,KAAMA,EAAQA,IAAAA,EAAAA,IAAAA,CAA8BA,CAA9BA,CACdA,IAAIA,CAAJA,CACEA,MAAOA,EClLFA,EDqLDA,EAAAA,CAAWA,IAAIA,CACrBA,KAAAA,EAAAA,IAAAA,CAA8BA,CAA9BA,CAAyCA,CAAzCA,CAEmBA,KAAAA,EAAAA,EAAAA,CAAsCA,CAAtCA,CAInBA,EAAkBA,CAACA,IAAAA,EAAAA,KAAAA,CAA8BA,QAAAA,CAAAA,CAAAA,CAAKA,CAAAA,MAAAA,EAAAA,UAAAA,GAAgBA,CAAhBA,CAAnCA,CAAnBA,EACEA,CAAAA,EAAAA,EAGFA,OAAOA,EChMAA,ED2KcA,CAwBvBA,EAAAA,UAAAA,EAAAA,CAAAA,QAAyBA,CAACA,CAADA,CAAQA,CAC/BA,IAAAA,EAAAA,EAAAA,EACAA,KAAMA,EAAQA,IAAAA,EACdA,KAAAA,EAAAA,CAAsBA,QAAAA,CAAAA,CAAAA,CAASA,CAAAA,MAAAA,EAAAA,CAAMA,QAAAA,EAAMA,CAAAA,MAAAA,EAAAA,CAAMA,CAANA,CAAAA,CAAZA,CAAAA,CAHAA,CAQnCA,OAAAA,sBAAAA,CAAkCA,CAClCA,EAAAA,UAAAA,OAAAA,CAA4CA,CAAAA,UAAAA,OAC5CA,EAAAA,UAAAA,IAAAA,CAAyCA,CAAAA,UAAAA,IACzCA,EAAAA,UAAAA,YAAAA;AAAiDA,CAAAA,UAAAA,YACjDA,EAAAA,UAAAA,0BAAAA,CAA+DA,CAAAA,UAAAA,EK/PrCA,KAAAA,EAAAA,MAAAA,SAAAA,UAAAA,cAAAA,CACEA,GAAAA,MAAAA,SAAAA,UAAAA,gBADFA,CAEHA,GAAAA,MAAAA,SAAAA,UAAAA,WAFGA,CAGNA,GAAAA,MAAAA,SAAAA,UAAAA,QAHMA,CAIPA,GAAAA,MAAAA,SAAAA,UAAAA,OAJOA,CAKEA,EAAAA,MAAAA,iBAAAA,UAAAA,QALFA,CAMCA,EAAAA,MAAAA,iBAAAA,UAAAA,OANDA,CAORA,EAAAA,MAAAA,KAAAA,UAAAA,UAPQA,CAQNA,EAAAA,MAAAA,KAAAA,UAAAA,YARMA,CASLA,EAAAA,MAAAA,KAAAA,UAAAA,aATKA,CAUNA,EAAAA,MAAAA,KAAAA,UAAAA,YAVMA;AAWLA,EAAAA,MAAAA,KAAAA,UAAAA,aAXKA,CAYNA,EAAAA,MAAAA,yBAAAA,CAAgCA,MAAAA,KAAAA,UAAhCA,CAAuDA,aAAvDA,CAZMA,CAaFA,EAAAA,MAAAA,QAAAA,UAAAA,aAbEA,CAcLA,EAAAA,MAAAA,yBAAAA,CAAgCA,MAAAA,QAAAA,UAAhCA,CAA0DA,WAA1DA,CAdKA,CAeFA,EAAAA,MAAAA,QAAAA,UAAAA,aAfEA,CAgBFA,EAAAA,MAAAA,QAAAA,UAAAA,aAhBEA,CAiBCA,EAAAA,MAAAA,QAAAA,UAAAA,gBAjBDA,CAkBAA,EAAAA,MAAAA,QAAAA,UAAAA,eAlBAA,CAmBAA,EAAAA,MAAAA,QAAAA,UAAAA,eAnBAA,CAoBGA,EAAAA,MAAAA,QAAAA,UAAAA,kBApBHA,CAqBOA,EAAAA,MAAAA,QAAAA,UAAAA,sBArBPA;AAsBPA,GAAAA,MAAAA,QAAAA,UAAAA,QAtBOA,CAuBRA,GAAAA,MAAAA,QAAAA,UAAAA,OAvBQA,CAwBRA,GAAAA,MAAAA,QAAAA,UAAAA,OAxBQA,CAyBTA,GAAAA,MAAAA,QAAAA,UAAAA,MAzBSA,CA0BHA,GAAAA,MAAAA,QAAAA,UAAAA,YA1BGA,CA2BRA,GAAAA,MAAAA,QAAAA,UAAAA,OA3BQA,CA4BXA,GAAAA,MAAAA,YA5BWA,CA6BDA,EAAAA,MAAAA,yBAAAA,CAAgCA,MAAAA,YAAAA,UAAhCA,CAA8DA,WAA9DA,CA7BCA,CA8BWA,EAAAA,MAAAA,YAAAA,UAAAA,sBA9BXA,CCQ1BA,EAAeA,IAFfA,QAAAA,EAAAA,EDN0BA,CEkBpBA,EAAsBA,MAAAA,eAE5BA,IAAIA,CAACA,CAALA,EACKA,CAAAA,cADLA,EAE8CA,UAF9CA,EAEMA,MAAOA,EAAAA,OAFbA,EAG2CA,UAH3CA,EAGMA,MAAOA,EAAAA,IAHbA,CAKQA,CAcNA,CAdkBA,IAAIA,CActBA,CAZAA,EAAAA,CAAiBA,CAAjBA,CAYAA;AAXAA,EAAAA,CAAcA,CAAdA,CAWAA,CChCAA,CAAAA,CDsBsBA,CCtBtBA,CAA2BA,gBAAAA,UAA3BA,CAAuDA,CACrDA,EAASA,CAD4CA,CAErDA,OAAQA,CAF6CA,CAAvDA,CDgCAA,CATAA,EAAAA,CAAUA,CAAVA,CASAA,CARAA,EAAAA,CAAaA,CAAbA,CAQAA,CALAA,QAAAA,iBAKAA,CAL4BA,CAAAA,CAK5BA,CAFMA,CAENA,CAFuBA,IAAIA,CAAJA,CAA0BA,CAA1BA,CAEvBA,CAAAA,MAAAA,eAAAA,CAAsBA,MAAtBA,CAA8BA,gBAA9BA,CAAgDA,CAC9CA,aAAcA,CAAAA,CADgCA,CAE9CA,WAAYA,CAAAA,CAFkCA,CAG9CA,MAAOA,CAHuCA,CAAhDA,CE5BEA,EAAAA,CAAiBA,MAAAA,eACrBA,KAAIA,EAAcA,MAAAA,YAAlBA,CACIA,EAAWA,MAAAA,oBAIfA,OAAAA,cAAAA,CAAuBA,MAAAA,cAAvBA,EAA+CA,EAE/CA,IAAIA,CAAJA,EAAsBA,CAAAA,0BAAtBA,CAAmEA,CAGjEA,IAAIA,CAAJA,CACIA,GAAsBA,QAA4BA,EAAGA,CACvDA,GAAIA,CAAJA,CAAmBA,CAEbA,CAAAA,EAAJA,EACEA,CAAAA,EAAAA,CAAmBA,MAAAA,SAAnBA,CAEFA,KAAIA,EAAKA,CACTA,EAAAA,CAAgBA,IAChBA,EAAAA,EACAA,OAAOA,CAAAA,CARUA,CADoCA,CADzDA,CAaIA,GAAgBA,CAAAA,UACpBA,EAAAA,0BAAAA,CAA4CA,QAAAA,CAASA,CAATA,CAAaA,CACvDA,CAAAA,CAAgBA,CAChBA,GAAAA,CAAcA,EAAdA,CAFuDA,CAAzDA,CAKAA;CAAAA,UAAAA,CAA2BA,QAAAA,CAASA,CAATA,CAAaA,CACtCA,EAAAA,CAAcA,QAAAA,EAAWA,CAInBA,EAAAA,EAAJA,CACEA,CAAAA,UAAAA,CAAyBA,CAAzBA,CADFA,CAGEA,CAAAA,EAPqBA,CAAzBA,CADsCA,CAtByBA,CAqCnEA,CAAAA,UAAAA,CAAyBA,QAAAA,EAAWA,CAClCA,qBAAAA,CAAsBA,QAAAA,EAAWA,CAC/BA,MAAAA,cAAAA,MAAAA,CAA6BA,CAAAA,CAC7BA,SAAAA,cAAAA,CAAuBA,IAAIA,WAAJA,CAAgBA,oBAAhBA,CAAsCA,CAACA,QAASA,CAAAA,CAAVA,CAAtCA,CAAvBA,CAF+BA,CAAjCA,CADkCA,CAApCA,CCrCIA,EAAAA,CAAQA,QAAAA,cAAAA,CAAuBA,OAAvBA,CACZA,EAAAA,YAAAA,CAAoBA,sIAQhBA,EAAAA,CAAOA,QAAAA,cAAAA,CAAuBA,MAAvBA,CACXA,EAAAA,aAAAA,CAAkBA,CAAlBA,CAAyBA,CAAAA,WAAzBA,CnB9Ba,CAAZ,CAAA","file":"webcomponents-hi-ce.js","sourcesContent":[null,"import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!Element>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!Element>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /**\n   * @param {Array|NodeList|NamedNodeMap} list\n   * @param {!Function} callback\n   * @param {boolean=} inverseOrder\n   */\n  const forEach = (list, callback, inverseOrder) => {\n    const length = list ? list.length : 0;\n    const increment = inverseOrder ? -1 : 1;\n    let i = inverseOrder ? length - 1 : 0;\n    for (; i < length && i >= 0; i = i + increment) {\n      callback(list[i], i);\n    }\n  };\n\n  /********************* path fixup *********************/\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.resolveUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.resolveUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        const r = Path.replaceUrls(element.textContent, base, CSS_URL_REGEXP);\n        element.textContent = Path.replaceUrls(r, base, CSS_IMPORT_REGEXP);\n      }\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          // Prefer responseURL which already resolves redirects\n          // https://xhr.spec.whatwg.org/#the-responseurl-attribute\n          let redirectedUrl = request.responseURL || request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not([${importDependencyAttr}])`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // Observe changes on <head>.\n      this.dynamicImportsMO.observe(document.head, {\n        childList: true,\n        subtree: true\n      });\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      this.loadImports(document);\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      forEach(links, link => this.loadImport(link));\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n        this.processImportsIfLoadingDone();\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.resolveUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      forEach(n$, n => {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      });\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) return;\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Catch any imports that might have been added while we\n          // weren't looking, wait for them as well.\n          this.loadImports(document);\n          if (this.inflight) return;\n\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      }\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      forEach(n$, n => {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      });\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          forEach(s.attributes, attr => clone.setAttribute(attr.name, attr.value));\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      forEach(s$, s => {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      });\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      forEach(n$, n => this.fireEventIfNeeded(n), true);\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      forEach(mutations, m => forEach(m.addedNodes, elem => {\n        if (elem && elem.nodeType === Node.ELEMENT_NODE) {\n          // NOTE: added scripts are not updating currentScript in IE.\n          if (isImportLink(elem)) {\n            this.loadImport( /** @type {!HTMLLinkElement} */ (elem));\n          } else {\n            this.loadImports( /** @type {!Element} */ (elem));\n          }\n        }\n      }));\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if ((element.localName === 'script' && !element.src) ||\n      (element.localName === 'style' && !element.firstChild)) {\n      // Inline scripts and empty styles don't trigger load/error events,\n      // consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    const stateChanged = () => {\n      // NOTE: Firefox can hit readystate interactive without document.body existing.\n      // This is anti-spec, but we handle it here anyways by waiting for next change.\n      if (document.readyState !== 'loading' && !!document.body) {\n        document.removeEventListener('readystatechange', stateChanged);\n        callback();\n      }\n    }\n    document.addEventListener('readystatechange', stateChanged);\n    stateChanged();\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    forEach(imports, imp => whenElementLoaded(imp, () => {\n      if (--pending === 0) {\n        callback();\n      }\n    }));\n  }\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  }\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    forEach(imps, imp => {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    });\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    // Override baseURI so that imported elements' baseURI can be used seemlessly\n    // on native or polyfilled html-imports.\n    // NOTE: a <link rel=import> will have `link.baseURI === link.href`, as the link\n    // itself is used as the `import` document.\n    /** @type {Object|undefined} */\n    const native_baseURI = Object.getOwnPropertyDescriptor(Node.prototype, 'baseURI');\n    // NOTE: if not configurable (e.g. safari9), set it on the Element prototype. \n    const klass = !native_baseURI || native_baseURI.configurable ? Node : Element;\n    Object.defineProperty(klass.prototype, 'baseURI', {\n      get() {\n        const ownerDoc = /** @type {HTMLLinkElement} */ (isImportLink(this) ? this : importForElement(this));\n        if (ownerDoc) return ownerDoc.href;\n        // Use native baseURI if possible.\n        if (native_baseURI && native_baseURI.get) return native_baseURI.get.call(this);\n        // Polyfill it if not available.\n        const base = /** @type {HTMLBaseElement} */ (document.querySelector('base'));\n        return (base || window.location).href;\n      },\n      configurable: true,\n      enumerable: true\n    });\n\n    whenDocumentReady(() => new Importer());\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n'use strict';\n\nlet customElements = window['customElements'];\nlet HTMLImports = window['HTMLImports'];\nlet Template = window['HTMLTemplateElement'];\n\n// global for (1) existence means `WebComponentsReady` will file,\n// (2) WebComponents.ready == true means event has fired.\nwindow.WebComponents = window.WebComponents || {};\n\nif (customElements && customElements['polyfillWrapFlushCallback']) {\n  // Here we ensure that the public `HTMLImports.whenReady`\n  // always comes *after* custom elements have upgraded.\n  let flushCallback;\n  let runAndClearCallback = function runAndClearCallback() {\n    if (flushCallback) {\n      // make sure to run the HTMLTemplateElement polyfill before custom elements upgrade\n      if (Template.bootstrap) {\n        Template.bootstrap(window.document);\n      }\n      let cb = flushCallback;\n      flushCallback = null;\n      cb();\n      return true;\n    }\n  }\n  let origWhenReady = HTMLImports['whenReady'];\n  customElements['polyfillWrapFlushCallback'](function(cb) {\n    flushCallback = cb;\n    origWhenReady(runAndClearCallback);\n  });\n\n  HTMLImports['whenReady'] = function(cb) {\n    origWhenReady(function() {\n      // custom element code may add dynamic imports\n      // to match processing of native custom elements before\n      // domContentLoaded, we wait for these imports to resolve first.\n      if (runAndClearCallback()) {\n        HTMLImports['whenReady'](cb);\n      } else {\n        cb();\n      }\n    });\n  }\n\n}\n\nHTMLImports['whenReady'](function() {\n  requestAnimationFrame(function() {\n    window.WebComponents.ready = true;\n    document.dispatchEvent(new CustomEvent('WebComponentsReady', {bubbles: true}));\n  });\n});","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n'use strict';\n// It's desireable to provide a default stylesheet\n// that's convenient for styling unresolved elements, but\n// it's cumbersome to have to include this manually in every page.\n// It would make sense to put inside some HTMLImport but\n// the HTMLImports polyfill does not allow loading of stylesheets\n// that block rendering. Therefore this injection is tolerated here.\n//\n// NOTE: position: relative fixes IE's failure to inherit opacity\n// when a child is not statically positioned.\nlet style = document.createElement('style');\nstyle.textContent = ''\n    + 'body {'\n    + 'transition: opacity ease-in 0.2s;'\n    + ' } \\n'\n    + 'body[unresolved] {'\n    + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n    + ' } \\n'\n    ;\nlet head = document.querySelector('head');\nhead.insertBefore(style, head.firstChild);"]}