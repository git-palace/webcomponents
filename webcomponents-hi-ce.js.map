{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/shadycss/src/custom-style-element.js","bower_components/html-imports/src/html-imports.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","bower_components/shadycss/src/style-cache.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","shimcssproperties","nativeShadow","shimshadow","toCssText","callback","forEachRule","rulesForStyle","style","__cssRules","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","ShadyDOM","nativeMethods","call","addToBitMask","bits","o","parseInt","enqueueDocumentValidation","enqueued","HTMLImports","whenReady","validateDocument","readyState","addEventListener","requestAnimationFrame","ShadyCSS","_elementsHaveApplied","updateStyles","useNative","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","replaceAttrUrl","getAttribute","src","localName","replaceUrls","linkUrl","regexp","m","pre","url","post","urlPath","resolveUrl","test","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","success","fail","pieces","header","resource","atob","decodeURIComponent","request","XMLHttpRequest","open","onload","redirectedUrl","getResponseHeader","origin","location","protocol","host","response","responseText","status","send","isIE","navigator","userAgent","importSelector","importDisableType","disabledLinkSelector","importDependenciesSelector","importDependencyAttr","rootImportSelector","pendingScriptsSelector","pendingStylesSelector","isImportLink","nodeType","Node","ELEMENT_NODE","rel","whenElementLoaded","onLoadingDone","event","removeEventListener","whenDocumentReady","whenImportsReady","stateChanged","imports","querySelectorAll","pending","imp","importForElement","ownerDocument","parentNode","closest","newCustomEvent","params","CustomEvent","createEvent","initCustomEvent","bubbles","cancelable","detail","imps","import","elem","constructor","documents","inflight","dynamicImportsMO","MutationObserver","handleMutations","observe","childList","subtree","loadImports","links","loadImport","processImportsIfLoadingDone","link","fireEventIfNeeded","makeDocument","createDocumentFragment","p1","p2","content","template","innerHTML","baseEl","querySelector","removeAttribute","n$","inlineScriptIndex","num","encodeURIComponent","disconnect","flatten","scriptsOk","stylesOk","fireEvents","waitForStyles","runScripts","DOCUMENT_FRAGMENT_NODE","enumerable","s$","cloneScript","clone","j","ll","attributes","name","replaceChild","needsMove","placeholder","newSibling","eventType","dispatchEvent","mutations","addedNodes","ii","iii","k","b","a","aa","has","isConnected","__CE_isImportDocument","Document","ShadowRoot","Set","c","d","h","add","__CE_shadowRoot","q","Map","f","ba","set","v","w","__CE_patched","x","__CE_state","connectedCallback","y","z","disconnectedCallback","A","__CE_hasRegistry","__CE_documentLoadHandled","delete","constructionStack","Error","__CE_definition","attributeChangedCallback","observedAttributes","B","bind","C","ca","Promise","D","E","g","oa","Y","HTMLElement","F","setPrototypeOf","prototype","na","pa","prepend","filter","apply","Element","append","qa","ea","da","fa","ga","ra","TEXT_NODE","childNodes","Array","DocumentFragment","slice","I","H","G","J","K","L","join","createTextNode","sa","before","ja","ka","replaceWith","la","remove","ma","ta","M","console","warn","N","W","Q","O","T","S","R","U","X","V","ha","ia","Function","TypeError","SyntaxError","P","va","adoptedCallback","shift","reject","CustomElementRegistry","define","whenDefined","polyfillWrapFlushCallback","createElementNS","importNode","cloneNode","removeChild","getOwnPropertyDescriptor","attachShadow","getAttributeNS","setAttributeNS","removeAttributeNS","insertAdjacentElement","Z","customElements","forcePolyfill","ua","self","inUse","CSS","supports","WebComponents","flags","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","c$","_content","children","classList","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","templateMap","promise","resolve","StyleInfo","__styleInfo","styleInfo","invalidate","elementName","_applyShimInvalid","startValidating","_validating","then","ast","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","StyleUtil.rx","any","exec","assign","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","lastIndex","colon","pp","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","_useCount","StyleUtil.applyCss","shadowRoot","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","ce","origDefine","clazz","options","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","detectMixin","transformStyle","transformRules","transformRule","transformCssText","_consumeCssProperties","_getInitialValueForProperty","all","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","applyShim","flush","elementNeedsScoping","contains","SVGElement","hasAttribute","handler","mxns","mxn","documentElement","getRootNode","removedNodes","classes","from","classIdx","observer","nativeCustomElements","delayedStart","body","listener","takeRecords","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","list","fetch","entry","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","nativeCss","nativeCssApply","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","prepareTemplate","_prepared","hasMixins","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","hasApplied","_isRootOwner","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","_updateNativeProperties","_applyStyleProperties","_applyToDescendants","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","customStyles","hookFn","_customStyles","processHook","fn","__appliedElement","attr","runAndClearCallback","flushCallback","cb","origWhenReady"],"mappings":"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","file":"webcomponents-hi-ce.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        let r = Path.replaceUrls(element.textContent, base, CSS_URL_REGEXP);\n        r = Path.replaceUrls(r, base, CSS_IMPORT_REGEXP);\n        element.textContent = r;\n      }\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        this.dynamicImportsMO.observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n      this.processImportsIfLoadingDone();\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      };\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          // Override baseURI so that link.import.baseURI can be used seemlessly\n          // on native or polyfilled html-imports.\n          Object.defineProperty(n, 'baseURI', {\n            get: () => n.href,\n            configurable: true,\n            enumerable: true\n          });\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          const links = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < links.length; iii++) {\n            this.loadImport(links[iii]);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  };\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  };\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      };\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  };\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  };\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  };\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n(function(){\n'use strict';var g=new function(){};var aa=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function k(b){var a=aa.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function l(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(window.ShadowRoot&&b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction m(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}\nfunction n(b,a,e){e=e?e:new Set;for(var c=b;c;){if(c.nodeType===Node.ELEMENT_NODE){var d=c;a(d);var h=d.localName;if(\"link\"===h&&\"import\"===d.getAttribute(\"rel\")){c=d.import;if(c instanceof Node&&!e.has(c))for(e.add(c),c=c.firstChild;c;c=c.nextSibling)n(c,a,e);c=m(b,d);continue}else if(\"template\"===h){c=m(b,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)n(d,a,e);}c=c.firstChild?c.firstChild:m(b,c);}}function q(b,a,e){b[a]=e;}function r(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1;}function ba(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e);}function t(b,a){b.b=!0;b.c.push(a);}function v(b,a){b.b&&n(a,function(a){return w(b,a)});}function w(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a);}}function x(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state?b.connectedCallback(c):y(b,c);}}\nfunction z(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state&&b.disconnectedCallback(c);}}\nfunction A(b,a,e){e=e?e:new Set;var c=[];n(a,function(d){if(\"link\"===d.localName&&\"import\"===d.getAttribute(\"rel\")){var a=d.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):d.addEventListener(\"load\",function(){var a=d.import;a.__CE_documentLoadHandled||(a.__CE_documentLoadHandled=!0,a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0,new Set(e),e.delete(a),A(b,a,e));});}else c.push(d);},e);if(b.b)for(a=0;a<c.length;a++)w(b,c[a]);for(a=0;a<c.length;a++)y(b,\nc[a]);}\nfunction y(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var c=e.constructor;try{try{if(new c!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop();}}catch(f){throw a.__CE_state=2,f;}a.__CE_state=1;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,c=0;c<e.length;c++){var d=e[c],h=a.getAttribute(d);null!==h&&b.attributeChangedCallback(a,d,null,h,null);}l(a)&&b.connectedCallback(a);}}}\nr.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b);};r.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b);};r.prototype.attributeChangedCallback=function(b,a,e,c,d){var h=b.__CE_definition;h.attributeChangedCallback&&-1<h.observedAttributes.indexOf(a)&&h.attributeChangedCallback.call(b,a,e,c,d);};function B(b,a){this.c=b;this.a=a;this.b=void 0;A(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}));}function C(b){b.b&&b.b.disconnect();}B.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||C(this);for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,c=0;c<e.length;c++)A(this.c,e[c]);};function ca(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a);});}function D(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0);}function E(b){this.f=!1;this.a=b;this.h=new Map;this.g=function(b){return b()};this.b=!1;this.c=[];this.j=new B(b,document);}\nE.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!k(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.f)throw Error(\"A custom element is already being defined.\");this.f=!0;var c,d,h,f,u;try{var p=function(b){var a=P[b];if(void 0!==a&&!(a instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn a},P=a.prototype;if(!(P instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");c=p(\"connectedCallback\");d=p(\"disconnectedCallback\");h=p(\"adoptedCallback\");f=p(\"attributeChangedCallback\");u=a.observedAttributes||[];}catch(va){return}finally{this.f=!1;}ba(this.a,b,{localName:b,constructor:a,connectedCallback:c,disconnectedCallback:d,adoptedCallback:h,attributeChangedCallback:f,observedAttributes:u,constructionStack:[]});this.c.push(b);this.b||(this.b=\n!0,this.g(function(){if(!1!==e.b)for(e.b=!1,A(e.a,document);0<e.c.length;){var b=e.c.shift();(b=e.h.get(b))&&D(b);}}));};E.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};E.prototype.o=function(b){if(!k(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ca;this.h.set(b,a);this.a.a.get(b)&&-1===this.c.indexOf(b)&&D(a);return a.c};E.prototype.m=function(b){C(this.j);var a=this.g;this.g=function(e){return b(function(){return a(e)})};};\nwindow.CustomElementRegistry=E;E.prototype.define=E.prototype.l;E.prototype.get=E.prototype.get;E.prototype.whenDefined=E.prototype.o;E.prototype.polyfillWrapFlushCallback=E.prototype.m;var F=window.Document.prototype.createElement,da=window.Document.prototype.createElementNS,ea=window.Document.prototype.importNode,fa=window.Document.prototype.prepend,ga=window.Document.prototype.append,G=window.Node.prototype.cloneNode,H=window.Node.prototype.appendChild,I=window.Node.prototype.insertBefore,J=window.Node.prototype.removeChild,K=window.Node.prototype.replaceChild,L=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),M=window.Element.prototype.attachShadow,N=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),O=window.Element.prototype.getAttribute,Q=window.Element.prototype.setAttribute,R=window.Element.prototype.removeAttribute,S=window.Element.prototype.getAttributeNS,T=window.Element.prototype.setAttributeNS,U=window.Element.prototype.removeAttributeNS,V=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,W=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\"),X=window.HTMLElement.prototype.insertAdjacentElement;function oa(){var b=Y;window.HTMLElement=function(){function a(){var a=this.constructor,c=b.f.get(a);if(!c)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var d=c.constructionStack;if(!d.length)return d=F.call(document,c.localName),Object.setPrototypeOf(d,a.prototype),d.__CE_state=1,d.__CE_definition=c,w(b,d),d;var c=d.length-1,h=d[c];if(h===g)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nd[c]=g;Object.setPrototypeOf(h,a.prototype);w(b,h);return h}a.prototype=na.prototype;return a}();}function pa(b,a,e){a.prepend=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.i.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<d.length;c++)f=d[c],f instanceof Element&&x(b,f);};a.append=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.append.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<\nd.length;c++)f=d[c],f instanceof Element&&x(b,f);};}function qa(){var b=Y;q(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=F.call(this,a);w(b,a);return a});q(Document.prototype,\"importNode\",function(a,e){a=ea.call(this,a,e);this.__CE_hasRegistry?A(b,a):v(b,a);return a});q(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var c=b.a.get(e);if(c)return new c.constructor}a=da.call(this,a,e);w(b,a);return a});\npa(b,Document.prototype,{i:fa,append:ga});}function ra(){var b=Y;function a(a,c){Object.defineProperty(a,\"textContent\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)c.set.call(this,a);else{var d=void 0;if(this.firstChild){var e=this.childNodes,u=e.length;if(0<u&&l(this))for(var d=Array(u),p=0;p<u;p++)d[p]=e[p];}c.set.call(this,a);if(d)for(a=0;a<d.length;a++)z(b,d[a]);}}});}q(Node.prototype,\"insertBefore\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);\na=I.call(this,a,c);if(l(this))for(c=0;c<d.length;c++)x(b,d[c]);return a}d=l(a);c=I.call(this,a,c);d&&z(b,a);l(this)&&x(b,a);return c});q(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=H.call(this,a);if(l(this))for(var d=0;d<c.length;d++)x(b,c[d]);return a}c=l(a);d=H.call(this,a);c&&z(b,a);l(this)&&x(b,a);return d});q(Node.prototype,\"cloneNode\",function(a){a=G.call(this,a);this.ownerDocument.__CE_hasRegistry?A(b,a):v(b,a);\nreturn a});q(Node.prototype,\"removeChild\",function(a){var c=l(a),d=J.call(this,a);c&&z(b,a);return d});q(Node.prototype,\"replaceChild\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=K.call(this,a,c);if(l(this))for(z(b,c),c=0;c<d.length;c++)x(b,d[c]);return a}var d=l(a),e=K.call(this,a,c),f=l(this);f&&z(b,c);d&&z(b,a);f&&x(b,a);return e});L&&L.get?a(Node.prototype,L):t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)J.call(this,this.firstChild);H.call(this,document.createTextNode(a));}});});}function sa(b){var a=Element.prototype;a.before=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ja.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e);};a.after=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ka.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=\n0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e);};a.replaceWith=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];var d=c.filter(function(a){return a instanceof Node&&l(a)}),e=l(this);la.apply(this,c);for(var f=0;f<d.length;f++)z(b,d[f]);if(e)for(z(b,this),d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e);};a.remove=function(){var a=l(this);ma.call(this);a&&z(b,this);};}function ta(){var b=Y;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=this,e=void 0;l(this)&&(e=[],n(this,function(a){a!==d&&e.push(a);}));c.set.call(this,a);if(e)for(var f=0;f<e.length;f++){var h=e[f];1===h.__CE_state&&b.disconnectedCallback(h);}this.ownerDocument.__CE_hasRegistry?A(b,this):v(b,this);return a}});}function e(a,c){q(a,\"insertAdjacentElement\",function(a,d){var e=l(d);a=c.call(this,a,d);e&&z(b,d);l(a)&&x(b,d);\nreturn a});}M?q(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=a=M.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(N&&N.get)a(Element.prototype,N);else if(W&&W.get)a(HTMLElement.prototype,W);else{var c=F.call(document,\"div\");t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return G.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(c.innerHTML=a;0<b.childNodes.length;)J.call(b,\nb.childNodes[0]);for(;0<c.childNodes.length;)H.call(b,c.childNodes[0]);}});});}q(Element.prototype,\"setAttribute\",function(a,c){if(1!==this.__CE_state)return Q.call(this,a,c);var d=O.call(this,a);Q.call(this,a,c);c=O.call(this,a);d!==c&&b.attributeChangedCallback(this,a,d,c,null);});q(Element.prototype,\"setAttributeNS\",function(a,c,e){if(1!==this.__CE_state)return T.call(this,a,c,e);var d=S.call(this,a,c);T.call(this,a,c,e);e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a);});q(Element.prototype,\n\"removeAttribute\",function(a){if(1!==this.__CE_state)return R.call(this,a);var c=O.call(this,a);R.call(this,a);null!==c&&b.attributeChangedCallback(this,a,c,null,null);});q(Element.prototype,\"removeAttributeNS\",function(a,c){if(1!==this.__CE_state)return U.call(this,a,c);var d=S.call(this,a,c);U.call(this,a,c);var e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a);});X?e(HTMLElement.prototype,X):V?e(Element.prototype,V):console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\npa(b,Element.prototype,{i:ha,append:ia});sa(b);}/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var Y=new r;oa();qa();ra();ta();document.__CE_hasRegistry=!0;var ua=new E(Y);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:ua});}\n}).call(self);\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n// given a string of css, return a simple rule tree\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nfunction stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nlet types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nlet nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nfunction rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nfunction isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\n\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nlet rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar templateMap = {};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst promise = Promise.resolve();\n\nclass StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx$$1 = rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx$$1.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(rx.BRACKETED, '')\n      .replace(rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        rx.MIXIN_MATCH.lastIndex = 0;\n        m = rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer$1._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(rx.HOST_PREFIX + rxHostSelector +\n      rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(style);\n    let self = this;\n    style.textContent = toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    };\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO(dfreedm): consider spliting into separate global\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = applyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      applyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          applyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    // note: fallback to childNodes to support recursing into SVG which\n    // does not support children in some browsers (Edge/IE)\n    let c$ = root.children || root.childNodes;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        applyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = rulesForStyle(style);\n      applyShim.transformRules(ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties$1.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\nlet ShadyCSS$1 = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS$1._elementsHaveApplied) {\n      ShadyCSS$1.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS$1._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n        return true;\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        // custom element code may add dynamic imports\n        // to match processing of native custom elements before\n        // domContentLoaded, we wait for these imports to resolve first.\n        if (runAndClearCallback()) {\n          HTMLImports.whenReady(cb);\n        } else {\n          cb();\n        }\n      });\n    };\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * Polyfills loaded: HTML Imports, Custom Elements\n * Used in: Safari 10, Firefox once SD is shipped\n */\n\n// TODO(notwaldorf): Remove after this is addressed:\n// https://github.com/webcomponents/shadycss/issues/46\n\n}());\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\n'use strict';\n\nlet ShadyCSS = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS._elementsHaveApplied) {\n      ShadyCSS.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        let r = Path.replaceUrls(element.textContent, base, CSS_URL_REGEXP);\n        r = Path.replaceUrls(r, base, CSS_IMPORT_REGEXP);\n        element.textContent = r;\n      }\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        this.dynamicImportsMO.observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n      this.processImportsIfLoadingDone();\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      }\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          // Override baseURI so that link.import.baseURI can be used seemlessly\n          // on native or polyfilled html-imports.\n          Object.defineProperty(n, 'baseURI', {\n            get: () => n.href,\n            configurable: true,\n            enumerable: true\n          });\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          const links = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < links.length; iii++) {\n            this.loadImport(links[iii]);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  }\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));","(function(){\n'use strict';var g=new function(){};var aa=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function k(b){var a=aa.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function l(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(window.ShadowRoot&&b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction m(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}\nfunction n(b,a,e){e=e?e:new Set;for(var c=b;c;){if(c.nodeType===Node.ELEMENT_NODE){var d=c;a(d);var h=d.localName;if(\"link\"===h&&\"import\"===d.getAttribute(\"rel\")){c=d.import;if(c instanceof Node&&!e.has(c))for(e.add(c),c=c.firstChild;c;c=c.nextSibling)n(c,a,e);c=m(b,d);continue}else if(\"template\"===h){c=m(b,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)n(d,a,e)}c=c.firstChild?c.firstChild:m(b,c)}}function q(b,a,e){b[a]=e};function r(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1}function ba(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e)}function t(b,a){b.b=!0;b.c.push(a)}function v(b,a){b.b&&n(a,function(a){return w(b,a)})}function w(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a)}}function x(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state?b.connectedCallback(c):y(b,c)}}\nfunction z(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state&&b.disconnectedCallback(c)}}\nfunction A(b,a,e){e=e?e:new Set;var c=[];n(a,function(d){if(\"link\"===d.localName&&\"import\"===d.getAttribute(\"rel\")){var a=d.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):d.addEventListener(\"load\",function(){var a=d.import;a.__CE_documentLoadHandled||(a.__CE_documentLoadHandled=!0,a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0,new Set(e),e.delete(a),A(b,a,e))})}else c.push(d)},e);if(b.b)for(a=0;a<c.length;a++)w(b,c[a]);for(a=0;a<c.length;a++)y(b,\nc[a])}\nfunction y(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var c=e.constructor;try{try{if(new c!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop()}}catch(f){throw a.__CE_state=2,f;}a.__CE_state=1;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,c=0;c<e.length;c++){var d=e[c],h=a.getAttribute(d);null!==h&&b.attributeChangedCallback(a,d,null,h,null)}l(a)&&b.connectedCallback(a)}}}\nr.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b)};r.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b)};r.prototype.attributeChangedCallback=function(b,a,e,c,d){var h=b.__CE_definition;h.attributeChangedCallback&&-1<h.observedAttributes.indexOf(a)&&h.attributeChangedCallback.call(b,a,e,c,d)};function B(b,a){this.c=b;this.a=a;this.b=void 0;A(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}))}function C(b){b.b&&b.b.disconnect()}B.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||C(this);for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,c=0;c<e.length;c++)A(this.c,e[c])};function ca(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a)})}function D(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0)};function E(b){this.f=!1;this.a=b;this.h=new Map;this.g=function(b){return b()};this.b=!1;this.c=[];this.j=new B(b,document)}\nE.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!k(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.f)throw Error(\"A custom element is already being defined.\");this.f=!0;var c,d,h,f,u;try{var p=function(b){var a=P[b];if(void 0!==a&&!(a instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn a},P=a.prototype;if(!(P instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");c=p(\"connectedCallback\");d=p(\"disconnectedCallback\");h=p(\"adoptedCallback\");f=p(\"attributeChangedCallback\");u=a.observedAttributes||[]}catch(va){return}finally{this.f=!1}ba(this.a,b,{localName:b,constructor:a,connectedCallback:c,disconnectedCallback:d,adoptedCallback:h,attributeChangedCallback:f,observedAttributes:u,constructionStack:[]});this.c.push(b);this.b||(this.b=\n!0,this.g(function(){if(!1!==e.b)for(e.b=!1,A(e.a,document);0<e.c.length;){var b=e.c.shift();(b=e.h.get(b))&&D(b)}}))};E.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};E.prototype.o=function(b){if(!k(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ca;this.h.set(b,a);this.a.a.get(b)&&-1===this.c.indexOf(b)&&D(a);return a.c};E.prototype.m=function(b){C(this.j);var a=this.g;this.g=function(e){return b(function(){return a(e)})}};\nwindow.CustomElementRegistry=E;E.prototype.define=E.prototype.l;E.prototype.get=E.prototype.get;E.prototype.whenDefined=E.prototype.o;E.prototype.polyfillWrapFlushCallback=E.prototype.m;var F=window.Document.prototype.createElement,da=window.Document.prototype.createElementNS,ea=window.Document.prototype.importNode,fa=window.Document.prototype.prepend,ga=window.Document.prototype.append,G=window.Node.prototype.cloneNode,H=window.Node.prototype.appendChild,I=window.Node.prototype.insertBefore,J=window.Node.prototype.removeChild,K=window.Node.prototype.replaceChild,L=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),M=window.Element.prototype.attachShadow,N=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),O=window.Element.prototype.getAttribute,Q=window.Element.prototype.setAttribute,R=window.Element.prototype.removeAttribute,S=window.Element.prototype.getAttributeNS,T=window.Element.prototype.setAttributeNS,U=window.Element.prototype.removeAttributeNS,V=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,W=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\"),X=window.HTMLElement.prototype.insertAdjacentElement;function oa(){var b=Y;window.HTMLElement=function(){function a(){var a=this.constructor,c=b.f.get(a);if(!c)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var d=c.constructionStack;if(!d.length)return d=F.call(document,c.localName),Object.setPrototypeOf(d,a.prototype),d.__CE_state=1,d.__CE_definition=c,w(b,d),d;var c=d.length-1,h=d[c];if(h===g)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nd[c]=g;Object.setPrototypeOf(h,a.prototype);w(b,h);return h}a.prototype=na.prototype;return a}()};function pa(b,a,e){a.prepend=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.i.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<d.length;c++)f=d[c],f instanceof Element&&x(b,f)};a.append=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.append.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<\nd.length;c++)f=d[c],f instanceof Element&&x(b,f)}};function qa(){var b=Y;q(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=F.call(this,a);w(b,a);return a});q(Document.prototype,\"importNode\",function(a,e){a=ea.call(this,a,e);this.__CE_hasRegistry?A(b,a):v(b,a);return a});q(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var c=b.a.get(e);if(c)return new c.constructor}a=da.call(this,a,e);w(b,a);return a});\npa(b,Document.prototype,{i:fa,append:ga})};function ra(){var b=Y;function a(a,c){Object.defineProperty(a,\"textContent\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)c.set.call(this,a);else{var d=void 0;if(this.firstChild){var e=this.childNodes,u=e.length;if(0<u&&l(this))for(var d=Array(u),p=0;p<u;p++)d[p]=e[p]}c.set.call(this,a);if(d)for(a=0;a<d.length;a++)z(b,d[a])}}})}q(Node.prototype,\"insertBefore\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);\na=I.call(this,a,c);if(l(this))for(c=0;c<d.length;c++)x(b,d[c]);return a}d=l(a);c=I.call(this,a,c);d&&z(b,a);l(this)&&x(b,a);return c});q(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=H.call(this,a);if(l(this))for(var d=0;d<c.length;d++)x(b,c[d]);return a}c=l(a);d=H.call(this,a);c&&z(b,a);l(this)&&x(b,a);return d});q(Node.prototype,\"cloneNode\",function(a){a=G.call(this,a);this.ownerDocument.__CE_hasRegistry?A(b,a):v(b,a);\nreturn a});q(Node.prototype,\"removeChild\",function(a){var c=l(a),d=J.call(this,a);c&&z(b,a);return d});q(Node.prototype,\"replaceChild\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=K.call(this,a,c);if(l(this))for(z(b,c),c=0;c<d.length;c++)x(b,d[c]);return a}var d=l(a),e=K.call(this,a,c),f=l(this);f&&z(b,c);d&&z(b,a);f&&x(b,a);return e});L&&L.get?a(Node.prototype,L):t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)J.call(this,this.firstChild);H.call(this,document.createTextNode(a))}})})};function sa(b){var a=Element.prototype;a.before=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ja.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e)};a.after=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ka.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=\n0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e)};a.replaceWith=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];var d=c.filter(function(a){return a instanceof Node&&l(a)}),e=l(this);la.apply(this,c);for(var f=0;f<d.length;f++)z(b,d[f]);if(e)for(z(b,this),d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e)};a.remove=function(){var a=l(this);ma.call(this);a&&z(b,this)}};function ta(){var b=Y;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=this,e=void 0;l(this)&&(e=[],n(this,function(a){a!==d&&e.push(a)}));c.set.call(this,a);if(e)for(var f=0;f<e.length;f++){var h=e[f];1===h.__CE_state&&b.disconnectedCallback(h)}this.ownerDocument.__CE_hasRegistry?A(b,this):v(b,this);return a}})}function e(a,c){q(a,\"insertAdjacentElement\",function(a,d){var e=l(d);a=c.call(this,a,d);e&&z(b,d);l(a)&&x(b,d);\nreturn a})}M?q(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=a=M.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(N&&N.get)a(Element.prototype,N);else if(W&&W.get)a(HTMLElement.prototype,W);else{var c=F.call(document,\"div\");t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return G.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(c.innerHTML=a;0<b.childNodes.length;)J.call(b,\nb.childNodes[0]);for(;0<c.childNodes.length;)H.call(b,c.childNodes[0])}})})}q(Element.prototype,\"setAttribute\",function(a,c){if(1!==this.__CE_state)return Q.call(this,a,c);var d=O.call(this,a);Q.call(this,a,c);c=O.call(this,a);d!==c&&b.attributeChangedCallback(this,a,d,c,null)});q(Element.prototype,\"setAttributeNS\",function(a,c,e){if(1!==this.__CE_state)return T.call(this,a,c,e);var d=S.call(this,a,c);T.call(this,a,c,e);e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a)});q(Element.prototype,\n\"removeAttribute\",function(a){if(1!==this.__CE_state)return R.call(this,a);var c=O.call(this,a);R.call(this,a);null!==c&&b.attributeChangedCallback(this,a,c,null,null)});q(Element.prototype,\"removeAttributeNS\",function(a,c){if(1!==this.__CE_state)return U.call(this,a,c);var d=S.call(this,a,c);U.call(this,a,c);var e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a)});X?e(HTMLElement.prototype,X):V?e(Element.prototype,V):console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\npa(b,Element.prototype,{i:ha,append:ia});sa(b)};/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var Y=new r;oa();qa();ra();ta();document.__CE_hasRegistry=!0;var ua=new E(Y);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:ua})};\n}).call(self);\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    // note: fallback to childNodes to support recursing into SVG which\n    // does not support children in some browsers (Edge/IE)\n    let c$ = root.children || root.childNodes;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n        return true;\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        // custom element code may add dynamic imports\n        // to match processing of native custom elements before\n        // domContentLoaded, we wait for these imports to resolve first.\n        if (runAndClearCallback()) {\n          HTMLImports.whenReady(cb);\n        } else {\n          cb();\n        }\n      });\n    }\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}