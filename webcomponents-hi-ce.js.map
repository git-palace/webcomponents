{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/shadycss/src/custom-style-element.js","bower_components/html-imports/src/html-imports.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","bower_components/shadycss/src/style-cache.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","shimcssproperties","nativeShadow","shimshadow","toCssText","callback","forEachRule","rulesForStyle","style","__cssRules","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","ShadyDOM","nativeMethods","call","addToBitMask","bits","o","parseInt","enqueueDocumentValidation","enqueued","HTMLImports","whenReady","validateDocument","readyState","addEventListener","requestAnimationFrame","ShadyCSS","_elementsHaveApplied","updateStyles","useNative","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","replaceAttrUrl","getAttribute","src","localName","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","querySelectorAll","fixUrlsInTemplate","template","content","n$","linkUrl","replaceUrls","regexp","m","pre","url","post","urlPath","resolveUrl","test","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","Promise","resolve","reject","resource","pieces","header","atob","decodeURIComponent","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","resp","response","responseText","status","send","isIE","navigator","userAgent","importSelector","importDisableType","disabledLinkSelector","importDependenciesSelector","importDependencyAttr","rootImportSelector","pendingScriptsSelector","pendingStylesSelector","MATCHES","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","isImportLink","nodeType","Node","ELEMENT_NODE","whenElementLoaded","isElementLoaded","then","el","whenDocumentReady","whenImportsReady","stateChanged","removeEventListener","imports","promises","imp","all","importForElement","ownerDocument","owner","parentNode","host","dispatchEvent","CustomEvent","cancelable","bubbles","detail","onLoadingDone","event","elem","constructor","documents","inflight","MutationObserver","handleMutations","observe","childList","link","whenLoadedPromise","whenImportLoaded","whenImportsLoaded","onLoadedAll","links","promise","makeDocument","catch","createDocumentFragment","p1","p2","innerHTML","firstElementChild","baseEl","querySelector","removeAttribute","s$","inlineScriptIndex","num","flatten","waitForStyles","runScripts","fireEvents","import","DOCUMENT_FRAGMENT_NODE","subtree","clone","j","ll","name","replaceChild","needsMove","rootImport","next","placeholder","fireEventIfNeeded","eventType","mutations","addedNodes","c","Map","h","Set","C","D","bind","f","F","enableFlush","g","customElements","Error","b","d","toLowerCase","__$CE_upgraded","A","forcePolyfill","L","TypeError","has","k","set","w","observedAttributes","K","delete","M","N","takeRecords","forEach","childNodes","I","__$CE_observer","add","J","disconnect","removedNodes","H","createTreeWalker","NodeFilter","SHOW_ELEMENT","G","currentNode","nextNode","__$CE_attached","DOCUMENT_NODE","shadowRoot","tagName","rel","B","__proto__","assert","attributeOldValue","attributeFilter","hasAttribute","attributeName","oldValue","attributeNamespace","CustomElementRegistry","define","whenDefined","flush","polyfilled","_observeRoot","_addImport","q","HTMLElement","nativeHTMLElement","createElementNS","attachShadow","importNode","x","enumerable","CustomElements","inUse","CSS","supports","WebComponents","flags","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","c$","_content","children","classList","remove","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","join","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","templateMap","StyleInfo","__styleInfo","styleInfo","invalidate","elementName","_applyShimInvalid","startValidating","_validating","ast","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","StyleUtil.rx","any","exec","assign","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","lastIndex","colon","pp","slice","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","_useCount","removeChild","StyleUtil.applyCss","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","ce","origDefine","clazz","options","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","detectMixin","transformStyle","transformRules","transformRule","transformCssText","_consumeCssProperties","_getInitialValueForProperty","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","applyShim","elementNeedsScoping","contains","SVGElement","handler","mxns","mxn","documentElement","getRootNode","classes","Array","from","classIdx","observer","nativeCustomElements","delayedStart","body","listener","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","list","shift","fetch","entry","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","nativeCss","nativeCssApply","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","prepareTemplate","_prepared","hasMixins","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","hasApplied","_isRootOwner","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","_updateNativeProperties","_applyStyleProperties","_applyToDescendants","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","customStyles","hookFn","_customStyles","processHook","fn","__appliedElement","attr"],"mappings":"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","file":"webcomponents-hi-ce.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n((scope) => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', (e) => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if ((request.status >= 200 && request.status < 300) ||\n                request.status === 304 || request.status === 0) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // Observe only document head\n      new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n        childList: true\n      });\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => this.load());\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     */\n    load(link) {\n      const whenLoadedPromise = link ? this.whenImportLoaded(link) : this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise.then(() => {\n          // Wait until all resources are ready.\n          if (--this.inflight === 0) {\n            this.onLoadedAll();\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then((resp) => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        })\n        .catch(() => this.documents[url] = null)\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move children into it.\n        content = document.createDocumentFragment();\n        while (template.firstElementChild) {\n          content.appendChild(template.firstElementChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          n.textContent += `\\n//# sourceURL=${url}${num}.js\\n`;\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n          // If in the main document, observe for any imports added later.\n          if (doc === document) {\n            new MutationObserver(m => this.handleMutations(m)).observe(n, {\n              childList: true,\n              subtree: true\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes/textContent.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {HTMLLinkElement} */ (m.addedNodes[i]);\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          if (n && isImportLink(n)) {\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, importSelector);\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = (element) => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise((resolve) => {\n        if (isElementLoaded(element)) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  };\n\n  /**\n   * @param {!HTMLElement} el\n   * @return {boolean}\n   */\n  const isElementLoaded = (el) => {\n    el['__loaded'] = el['__loaded'] ||\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      (el.localName === 'script' && !( /** @type {!HTMLScriptElement} */ (el).src));\n    return el['__loaded'];\n  };\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = (callback) => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  };\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = (callback) => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      };\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  };\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = (callback) => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(callback);\n    } else {\n      callback();\n    }\n  };\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = (element) => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  };\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  if (useNative) {\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = (event) => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n(function(){function c(){this.a=new Map;this.j=new Map;this.h=new Map;this.o=new Set;this.C=new MutationObserver(this.D.bind(this));this.f=null;this.F=new Set;this.enableFlush=!0;this.s=!1;this.m=null;}function g(){return h.customElements}function l(a){if(!/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a)||-1!==t.indexOf(a))return Error(\"The element name '\"+a+\"' is not valid.\")}function m(a,b,e,d){var c=g();a=e?n.call(a,b,e):n.call(a,b);(b=c.a.get(b.toLowerCase()))&&c.u(a,b,d);c.b(a);return a}\nfunction p(a,b,e,d){b=b.toLowerCase();var c=a.getAttribute(b);d.call(a,b,e);1==a.__$CE_upgraded&&(d=g().a.get(a.localName),e=d.A,(d=d.i)&&0<=e.indexOf(b)&&(e=a.getAttribute(b),e!==c&&d.call(a,b,c,e,null)));}var f=document,h=window;if(g()&&(g().g=function(){},!g().forcePolyfill))return;var t=\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \");c.prototype.L=function(a,b){function e(a){var b=f[a];if(void 0!==b&&\"function\"!==typeof b)throw Error(c+\n\" '\"+a+\"' is not a Function\");return b}if(\"function\"!==typeof b)throw new TypeError(\"constructor must be a Constructor\");var d=l(a);if(d)throw d;if(this.a.has(a))throw Error(\"An element with name '\"+a+\"' is already defined\");if(this.j.has(b))throw Error(\"Definition failed for '\"+a+\"': The constructor is already used.\");var c=a,f=b.prototype;if(\"object\"!==typeof f)throw new TypeError(\"Definition failed for '\"+a+\"': constructor.prototype must be an object\");var d=e(\"connectedCallback\"),g=e(\"disconnectedCallback\"),\nk=e(\"attributeChangedCallback\");this.a.set(c,{name:a,localName:c,constructor:b,v:d,w:g,i:k,A:k&&b.observedAttributes||[]});this.j.set(b,c);this.K();if(a=this.h.get(c))a.resolve(void 0),this.h.delete(c);};c.prototype.get=function(a){return(a=this.a.get(a))?a.constructor:void 0};c.prototype.M=function(a){var b=l(a);if(b)return Promise.reject(b);if(this.a.has(a))return Promise.resolve();if(b=this.h.get(a))return b.N;var e,d=new Promise(function(a){e=a;}),b={N:d,resolve:e};this.h.set(a,b);return d};c.prototype.g=\nfunction(){this.enableFlush&&(this.l(this.m.takeRecords()),this.D(this.C.takeRecords()),this.o.forEach(function(a){this.l(a.takeRecords());},this));};c.prototype.K=function(){var a=this;if(!this.s){this.s=!0;var b=function(){a.s=!1;a.m||(a.m=a.b(f));a.c(f.childNodes);};window.HTMLImports?window.HTMLImports.whenReady(b):b();}};c.prototype.I=function(a){this.f=a;};c.prototype.b=function(a){if(null!=a.__$CE_observer)return a.__$CE_observer;a.__$CE_observer=new MutationObserver(this.l.bind(this));a.__$CE_observer.observe(a,\n{childList:!0,subtree:!0});this.enableFlush&&this.o.add(a.__$CE_observer);return a.__$CE_observer};c.prototype.J=function(a){null!=a.__$CE_observer&&(a.__$CE_observer.disconnect(),this.enableFlush&&this.o.delete(a.__$CE_observer),a.__$CE_observer=null);};c.prototype.l=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(\"childList\"===e.type){var d=e.removedNodes;this.c(e.addedNodes);this.H(d);}}};c.prototype.c=function(a,b){b=b||new Set;for(var e=0;e<a.length;e++){var d=a[e];if(d.nodeType===Node.ELEMENT_NODE){this.J(d);\nd=f.createTreeWalker(d,NodeFilter.SHOW_ELEMENT,null,!1);do this.G(d.currentNode,b);while(d.nextNode())}}};c.prototype.G=function(a,b){if(!b.has(a)){b.add(a);var e=this.a.get(a.localName);if(e){a.__$CE_upgraded||this.u(a,e,!0);var d;if(d=a.__$CE_upgraded&&!a.__$CE_attached)a:{d=a;do{if(d.__$CE_attached||d.nodeType===Node.DOCUMENT_NODE){d=!0;break a}d=d.parentNode||d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host;}while(d);d=!1;}d&&(a.__$CE_attached=!0,e.v&&e.v.call(a));}a.shadowRoot&&this.c(a.shadowRoot.childNodes,\nb);\"LINK\"===a.tagName&&a.rel&&-1!==a.rel.toLowerCase().split(\" \").indexOf(\"import\")&&this.B(a,b);}};c.prototype.B=function(a,b){var e=a.import;if(e)b.has(e)||(b.add(e),e.__$CE_observer||this.b(e),this.c(e.childNodes,b));else if(b=a.href,!this.F.has(b)){this.F.add(b);var d=this,c=function(){a.removeEventListener(\"load\",c);a.import.__$CE_observer||d.b(a.import);d.c(a.import.childNodes);};a.addEventListener(\"load\",c);}};c.prototype.H=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(e.nodeType===Node.ELEMENT_NODE){this.b(e);\ne=f.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null,!1);do{var d=e.currentNode;if(d.__$CE_upgraded&&d.__$CE_attached){d.__$CE_attached=!1;var c=this.a.get(d.localName);c&&c.w&&c.w.call(d);}}while(e.nextNode())}}};c.prototype.u=function(a,b,e){a.__proto__=b.constructor.prototype;e&&(this.I(a),new b.constructor,a.__$CE_upgraded=!0,console.assert(!this.f));e=b.A;if((b=b.i)&&0<e.length){this.C.observe(a,{attributes:!0,attributeOldValue:!0,attributeFilter:e});for(var d=0;d<e.length;d++){var c=e[d];if(a.hasAttribute(c)){var f=\na.getAttribute(c);b.call(a,c,null,f,null);}}}};c.prototype.D=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(\"attributes\"===c.type){var d=c.target,f=this.a.get(d.localName),g=c.attributeName,h=c.oldValue,k=d.getAttribute(g);k!==h&&f.i.call(d,g,h,k,c.attributeNamespace);}}};window.CustomElementRegistry=c;c.prototype.define=c.prototype.L;c.prototype.get=c.prototype.get;c.prototype.whenDefined=c.prototype.M;c.prototype.flush=c.prototype.g;c.prototype.polyfilled=!0;c.prototype._observeRoot=c.prototype.b;\nc.prototype._addImport=c.prototype.B;var q=h.HTMLElement;c.prototype.nativeHTMLElement=q;h.HTMLElement=function(){var a=g();if(a.f){var b=a.f;a.f=null;return b}if(this.constructor)return a=a.j.get(this.constructor),m(f,a,void 0,!1);throw Error(\"Unknown constructor. Did you call customElements.define()?\");};h.HTMLElement.prototype=q.prototype;var n=f.createElement;f.createElement=function(a,b){return m(f,a,b,!0)};var u=f.createElementNS;f.createElementNS=function(a,b){return\"http://www.w3.org/1999/xhtml\"===\na?f.createElement(b):u.call(f,a,b)};var r=Element.prototype.attachShadow;r&&Object.defineProperty(Element.prototype,\"attachShadow\",{value:function(a){a=r.call(this,a);g().b(a);return a}});var v=f.importNode;f.importNode=function(a,b){a=v.call(f,a,b);g().c(a.nodeType===Node.ELEMENT_NODE?[a]:a.childNodes);return a};var w=Element.prototype.setAttribute;Element.prototype.setAttribute=function(a,b){p(this,a,b,w);};var x=Element.prototype.removeAttribute;Element.prototype.removeAttribute=function(a){p(this,\na,null,x);};Object.defineProperty(window,\"customElements\",{value:new c,configurable:!0,enumerable:!0});window.CustomElements={takeRecords:function(){g().g&&g().g();}};})();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n// given a string of css, return a simple rule tree\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nfunction stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nlet types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nlet nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nfunction rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nfunction isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\n\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nlet rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar templateMap = {};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst promise = Promise.resolve();\n\nclass StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx$$1 = rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx$$1.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(rx.BRACKETED, '')\n      .replace(rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        rx.MIXIN_MATCH.lastIndex = 0;\n        m = rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer$1._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(rx.HOST_PREFIX + rxHostSelector +\n      rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(style);\n    let self = this;\n    style.textContent = toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    };\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO(dfreedm): consider spliting into separate global\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = applyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      applyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          applyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        applyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = rulesForStyle(style);\n      applyShim.transformRules(ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties$1.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\nlet ShadyCSS$1 = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS$1._elementsHaveApplied) {\n      ShadyCSS$1.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS$1._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);\n\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n(function(scope) {\r\n\r\n  'use strict';\r\n\r\n  HTMLImports.whenReady(function() {\r\n    requestAnimationFrame(function() {\r\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\r\n    });\r\n  });\r\n\r\n})(window.WebComponents);\n\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n(function(scope) {\r\n\r\n  // It's desireable to provide a default stylesheet\r\n  // that's convenient for styling unresolved elements, but\r\n  // it's cumbersome to have to include this manually in every page.\r\n  // It would make sense to put inside some HTMLImport but\r\n  // the HTMLImports polyfill does not allow loading of stylesheets\r\n  // that block rendering. Therefore this injection is tolerated here.\r\n  //\r\n  // NOTE: position: relative fixes IE's failure to inherit opacity\r\n  // when a child is not statically positioned.\r\n  var style = document.createElement('style');\r\n  style.textContent = ''\r\n      + 'body {'\r\n      + 'transition: opacity ease-in 0.2s;'\r\n      + ' } \\n'\r\n      + 'body[unresolved] {'\r\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\r\n      + ' } \\n'\r\n      ;\r\n  var head = document.querySelector('head');\r\n  head.insertBefore(style, head.firstChild);\r\n\r\n})(window.WebComponents);\n\n/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n/*\r\n * Polyfills loaded: HTML Imports, Custom Elements\r\n * Used in: Safari 10, Firefox once SD is shipped\r\n */\r\n\r\n//TODO(notwaldorf): this is temporary and should be removed.\n\n}());\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\n'use strict';\n\nlet ShadyCSS = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS._elementsHaveApplied) {\n      ShadyCSS.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n((scope) => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', (e) => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if ((request.status >= 200 && request.status < 300) ||\n                request.status === 304 || request.status === 0) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // Observe only document head\n      new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n        childList: true\n      });\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => this.load());\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     */\n    load(link) {\n      const whenLoadedPromise = link ? this.whenImportLoaded(link) : this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise.then(() => {\n          // Wait until all resources are ready.\n          if (--this.inflight === 0) {\n            this.onLoadedAll();\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then((resp) => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        })\n        .catch(() => this.documents[url] = null)\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move children into it.\n        content = document.createDocumentFragment();\n        while (template.firstElementChild) {\n          content.appendChild(template.firstElementChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          n.textContent += `\\n//# sourceURL=${url}${num}.js\\n`;\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n          // If in the main document, observe for any imports added later.\n          if (doc === document) {\n            new MutationObserver(m => this.handleMutations(m)).observe(n, {\n              childList: true,\n              subtree: true\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes/textContent.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          // Copy attributes and textContent.\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          clone.textContent = s.textContent;\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {HTMLLinkElement} */ (m.addedNodes[i]);\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          if (n && isImportLink(n)) {\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, importSelector);\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = (element) => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise((resolve) => {\n        if (isElementLoaded(element)) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * @param {!HTMLElement} el\n   * @return {boolean}\n   */\n  const isElementLoaded = (el) => {\n    el['__loaded'] = el['__loaded'] ||\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      (el.localName === 'script' && !( /** @type {!HTMLScriptElement} */ (el).src));\n    return el['__loaded'];\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = (callback) => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = (callback) => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = (callback) => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!isElementLoaded(imp)) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(callback);\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = (element) => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  if (useNative) {\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = (event) => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n","/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';(function(){function c(){this.a=new Map;this.j=new Map;this.h=new Map;this.o=new Set;this.C=new MutationObserver(this.D.bind(this));this.f=null;this.F=new Set;this.enableFlush=!0;this.s=!1;this.m=null}function g(){return h.customElements}function l(a){if(!/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a)||-1!==t.indexOf(a))return Error(\"The element name '\"+a+\"' is not valid.\")}function m(a,b,e,d){var c=g();a=e?n.call(a,b,e):n.call(a,b);(b=c.a.get(b.toLowerCase()))&&c.u(a,b,d);c.b(a);return a}\nfunction p(a,b,e,d){b=b.toLowerCase();var c=a.getAttribute(b);d.call(a,b,e);1==a.__$CE_upgraded&&(d=g().a.get(a.localName),e=d.A,(d=d.i)&&0<=e.indexOf(b)&&(e=a.getAttribute(b),e!==c&&d.call(a,b,c,e,null)))}var f=document,h=window;if(g()&&(g().g=function(){},!g().forcePolyfill))return;var t=\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \");c.prototype.L=function(a,b){function e(a){var b=f[a];if(void 0!==b&&\"function\"!==typeof b)throw Error(c+\n\" '\"+a+\"' is not a Function\");return b}if(\"function\"!==typeof b)throw new TypeError(\"constructor must be a Constructor\");var d=l(a);if(d)throw d;if(this.a.has(a))throw Error(\"An element with name '\"+a+\"' is already defined\");if(this.j.has(b))throw Error(\"Definition failed for '\"+a+\"': The constructor is already used.\");var c=a,f=b.prototype;if(\"object\"!==typeof f)throw new TypeError(\"Definition failed for '\"+a+\"': constructor.prototype must be an object\");var d=e(\"connectedCallback\"),g=e(\"disconnectedCallback\"),\nk=e(\"attributeChangedCallback\");this.a.set(c,{name:a,localName:c,constructor:b,v:d,w:g,i:k,A:k&&b.observedAttributes||[]});this.j.set(b,c);this.K();if(a=this.h.get(c))a.resolve(void 0),this.h.delete(c)};c.prototype.get=function(a){return(a=this.a.get(a))?a.constructor:void 0};c.prototype.M=function(a){var b=l(a);if(b)return Promise.reject(b);if(this.a.has(a))return Promise.resolve();if(b=this.h.get(a))return b.N;var e,d=new Promise(function(a){e=a}),b={N:d,resolve:e};this.h.set(a,b);return d};c.prototype.g=\nfunction(){this.enableFlush&&(this.l(this.m.takeRecords()),this.D(this.C.takeRecords()),this.o.forEach(function(a){this.l(a.takeRecords())},this))};c.prototype.K=function(){var a=this;if(!this.s){this.s=!0;var b=function(){a.s=!1;a.m||(a.m=a.b(f));a.c(f.childNodes)};window.HTMLImports?window.HTMLImports.whenReady(b):b()}};c.prototype.I=function(a){this.f=a};c.prototype.b=function(a){if(null!=a.__$CE_observer)return a.__$CE_observer;a.__$CE_observer=new MutationObserver(this.l.bind(this));a.__$CE_observer.observe(a,\n{childList:!0,subtree:!0});this.enableFlush&&this.o.add(a.__$CE_observer);return a.__$CE_observer};c.prototype.J=function(a){null!=a.__$CE_observer&&(a.__$CE_observer.disconnect(),this.enableFlush&&this.o.delete(a.__$CE_observer),a.__$CE_observer=null)};c.prototype.l=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(\"childList\"===e.type){var d=e.removedNodes;this.c(e.addedNodes);this.H(d)}}};c.prototype.c=function(a,b){b=b||new Set;for(var e=0;e<a.length;e++){var d=a[e];if(d.nodeType===Node.ELEMENT_NODE){this.J(d);\nd=f.createTreeWalker(d,NodeFilter.SHOW_ELEMENT,null,!1);do this.G(d.currentNode,b);while(d.nextNode())}}};c.prototype.G=function(a,b){if(!b.has(a)){b.add(a);var e=this.a.get(a.localName);if(e){a.__$CE_upgraded||this.u(a,e,!0);var d;if(d=a.__$CE_upgraded&&!a.__$CE_attached)a:{d=a;do{if(d.__$CE_attached||d.nodeType===Node.DOCUMENT_NODE){d=!0;break a}d=d.parentNode||d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host}while(d);d=!1}d&&(a.__$CE_attached=!0,e.v&&e.v.call(a))}a.shadowRoot&&this.c(a.shadowRoot.childNodes,\nb);\"LINK\"===a.tagName&&a.rel&&-1!==a.rel.toLowerCase().split(\" \").indexOf(\"import\")&&this.B(a,b)}};c.prototype.B=function(a,b){var e=a.import;if(e)b.has(e)||(b.add(e),e.__$CE_observer||this.b(e),this.c(e.childNodes,b));else if(b=a.href,!this.F.has(b)){this.F.add(b);var d=this,c=function(){a.removeEventListener(\"load\",c);a.import.__$CE_observer||d.b(a.import);d.c(a.import.childNodes)};a.addEventListener(\"load\",c)}};c.prototype.H=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(e.nodeType===Node.ELEMENT_NODE){this.b(e);\ne=f.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null,!1);do{var d=e.currentNode;if(d.__$CE_upgraded&&d.__$CE_attached){d.__$CE_attached=!1;var c=this.a.get(d.localName);c&&c.w&&c.w.call(d)}}while(e.nextNode())}}};c.prototype.u=function(a,b,e){a.__proto__=b.constructor.prototype;e&&(this.I(a),new b.constructor,a.__$CE_upgraded=!0,console.assert(!this.f));e=b.A;if((b=b.i)&&0<e.length){this.C.observe(a,{attributes:!0,attributeOldValue:!0,attributeFilter:e});for(var d=0;d<e.length;d++){var c=e[d];if(a.hasAttribute(c)){var f=\na.getAttribute(c);b.call(a,c,null,f,null)}}}};c.prototype.D=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(\"attributes\"===c.type){var d=c.target,f=this.a.get(d.localName),g=c.attributeName,h=c.oldValue,k=d.getAttribute(g);k!==h&&f.i.call(d,g,h,k,c.attributeNamespace)}}};window.CustomElementRegistry=c;c.prototype.define=c.prototype.L;c.prototype.get=c.prototype.get;c.prototype.whenDefined=c.prototype.M;c.prototype.flush=c.prototype.g;c.prototype.polyfilled=!0;c.prototype._observeRoot=c.prototype.b;\nc.prototype._addImport=c.prototype.B;var q=h.HTMLElement;c.prototype.nativeHTMLElement=q;h.HTMLElement=function(){var a=g();if(a.f){var b=a.f;a.f=null;return b}if(this.constructor)return a=a.j.get(this.constructor),m(f,a,void 0,!1);throw Error(\"Unknown constructor. Did you call customElements.define()?\");};h.HTMLElement.prototype=q.prototype;var n=f.createElement;f.createElement=function(a,b){return m(f,a,b,!0)};var u=f.createElementNS;f.createElementNS=function(a,b){return\"http://www.w3.org/1999/xhtml\"===\na?f.createElement(b):u.call(f,a,b)};var r=Element.prototype.attachShadow;r&&Object.defineProperty(Element.prototype,\"attachShadow\",{value:function(a){a=r.call(this,a);g().b(a);return a}});var v=f.importNode;f.importNode=function(a,b){a=v.call(f,a,b);g().c(a.nodeType===Node.ELEMENT_NODE?[a]:a.childNodes);return a};var w=Element.prototype.setAttribute;Element.prototype.setAttribute=function(a,b){p(this,a,b,w)};var x=Element.prototype.removeAttribute;Element.prototype.removeAttribute=function(a){p(this,\na,null,x)};Object.defineProperty(window,\"customElements\",{value:new c,configurable:!0,enumerable:!0});window.CustomElements={takeRecords:function(){g().g&&g().g()}}})();\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n(function(scope) {\r\n\r\n  'use strict';\r\n\r\n  HTMLImports.whenReady(function() {\r\n    requestAnimationFrame(function() {\r\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\r\n    });\r\n  });\r\n\r\n})(window.WebComponents);\r\n","/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n(function(scope) {\r\n\r\n  // It's desireable to provide a default stylesheet\r\n  // that's convenient for styling unresolved elements, but\r\n  // it's cumbersome to have to include this manually in every page.\r\n  // It would make sense to put inside some HTMLImport but\r\n  // the HTMLImports polyfill does not allow loading of stylesheets\r\n  // that block rendering. Therefore this injection is tolerated here.\r\n  //\r\n  // NOTE: position: relative fixes IE's failure to inherit opacity\r\n  // when a child is not statically positioned.\r\n  var style = document.createElement('style');\r\n  style.textContent = ''\r\n      + 'body {'\r\n      + 'transition: opacity ease-in 0.2s;'\r\n      + ' } \\n'\r\n      + 'body[unresolved] {'\r\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\r\n      + ' } \\n'\r\n      ;\r\n  var head = document.querySelector('head');\r\n  head.insertBefore(style, head.firstChild);\r\n\r\n})(window.WebComponents);\r\n"]}