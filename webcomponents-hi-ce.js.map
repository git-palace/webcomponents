{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/shadycss/src/custom-style-element.js","bower_components/html-imports/src/html-imports.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","bower_components/shadycss/src/style-cache.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","shimcssproperties","nativeShadow","shimshadow","toCssText","callback","forEachRule","rulesForStyle","style","__cssRules","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","ShadyDOM","nativeMethods","call","addToBitMask","bits","o","parseInt","enqueueDocumentValidation","enqueued","HTMLImports","whenReady","validateDocument","readyState","addEventListener","requestAnimationFrame","ShadyCSS","_elementsHaveApplied","updateStyles","useNative","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","replaceAttrUrl","getAttribute","src","localName","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","querySelectorAll","fixUrlsInTemplate","template","content","n$","linkUrl","replaceUrls","regexp","m","pre","url","post","urlPath","resolveUrl","test","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","Promise","resolve","reject","resource","pieces","header","atob","decodeURIComponent","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","resp","response","responseText","status","send","isIE","navigator","userAgent","importSelector","importDisableType","disabledLinkSelector","importDependenciesSelector","importDependencyAttr","rootImportSelector","pendingScriptsSelector","pendingStylesSelector","MATCHES","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","isImportLink","nodeType","Node","ELEMENT_NODE","whenElementLoaded","then","whenDocumentReady","whenImportsReady","stateChanged","removeEventListener","imports","promises","imp","all","importForElement","ownerDocument","owner","parentNode","host","prevWhenReady","customElements","cb","imps","import","onLoadingDone","event","elem","constructor","documents","inflight","MutationObserver","handleMutations","observe","childList","subtree","link","whenLoadedPromise","whenImportLoaded","whenImportsLoaded","onLoadedAll","links","promise","makeDocument","createDocumentFragment","p1","p2","innerHTML","firstElementChild","baseEl","querySelector","removeAttribute","s$","inlineScriptIndex","num","encodeURIComponent","flatten","waitForStyles","runScripts","fireEvents","DOCUMENT_FRAGMENT_NODE","clone","j","ll","name","replaceChild","needsMove","rootImport","next","placeholder","fireEventIfNeeded","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","mutations","addedNodes","ii","iii","b","k","has","isConnected","__CE_isImportDocument","Document","ShadowRoot","Set","d","c","add","__CE_shadowRoot","Map","f","aa","set","w","x","y","__CE_patched","z","__CE_state","custom","connectedCallback","A","B","disconnectedCallback","C","__CE_hasRegistry","__CE_documentLoadHandled","delete","constructionStack","Error","g","failed","__CE_definition","attributeChangedCallback","observedAttributes","D","bind","ba","E","F","h","oa","X","HTMLElement","G","setPrototypeOf","na","Y","prepend","filter","apply","append","pa","da","ca","ea","fa","qa","enumerable","TEXT_NODE","childNodes","Array","q","DocumentFragment","slice","J","I","H","K","L","M","join","createTextNode","ra","before","ja","ka","replaceWith","la","remove","ma","sa","N","warn","O","W","R","Q","U","T","S","V","ga","ha","ia","disconnect","Function","TypeError","SyntaxError","P","ua","adoptedCallback","shift","CustomElementRegistry","define","whenDefined","polyfillWrapFlushCallback","createElementNS","importNode","cloneNode","removeChild","getOwnPropertyDescriptor","attachShadow","getAttributeNS","setAttributeNS","removeAttributeNS","insertAdjacentElement","Z","forcePolyfill","ta","self","inUse","CSS","supports","WebComponents","flags","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","c$","_content","children","classList","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","templateMap","StyleInfo","__styleInfo","styleInfo","invalidate","elementName","_applyShimInvalid","startValidating","_validating","ast","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","StyleUtil.rx","any","exec","assign","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","lastIndex","colon","pp","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","_useCount","StyleUtil.applyCss","shadowRoot","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","ce","origDefine","clazz","options","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","detectMixin","transformStyle","transformRules","transformRule","transformCssText","_consumeCssProperties","_getInitialValueForProperty","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","applyShim","flush","elementNeedsScoping","contains","SVGElement","hasAttribute","handler","mxns","mxn","documentElement","getRootNode","removedNodes","classes","from","classIdx","observer","nativeCustomElements","delayedStart","body","listener","takeRecords","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","list","fetch","entry","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","nativeCss","nativeCssApply","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","prepareTemplate","_prepared","hasMixins","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","hasApplied","_isRootOwner","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","_updateNativeProperties","_applyStyleProperties","_applyToDescendants","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","customStyles","hookFn","_customStyles","processHook","fn","__appliedElement","attr"],"mappings":"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","file":"webcomponents-hi-ce.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', () => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if (request.status === 304 || request.status === 0 ||\n                request.status >= 200 && request.status < 300) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.load();\n      });\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     */\n    load(link) {\n      const whenLoadedPromise = link ? this.whenImportLoaded(link) :\n        this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise.then(() => {\n          // Wait until all resources are ready.\n          if (--this.inflight === 0) {\n            this.onLoadedAll();\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then(resp => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        }, () => this.documents[url] = null) // If load fails, handle error.\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move children into it.\n        content = document.createDocumentFragment();\n        while (template.firstElementChild) {\n          content.appendChild(template.firstElementChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < imports.length; iii++) {\n            const n = imports[iii];\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, importSelector);\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = element => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise(resolve => {\n        // Inline scripts don't trigger load/error events, consider them already loaded.\n        if (element.localName === 'script' && !element.src) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  };\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  };\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      };\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  };\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!imp['__loaded']) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(callback);\n    } else {\n      callback();\n    }\n  };\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  };\n\n  // In case customElements polyfill is in use, install whenReady as the\n  // flush callback, so that custom element upgrades are deferred; this composes\n  // with any previous polyfillFlushCallback that the user may have installed\n  let prevWhenReady;\n  if (window.customElements) {\n    prevWhenReady = window.customElements['polyfillFlushCallback'];\n  } else {\n    window.customElements = {};\n  }\n  if (prevWhenReady) {\n    window.customElements['polyfillFlushCallback'] = cb => \n      whenReady(() => prevWhenReady(cb));\n  } else {\n    window.customElements['polyfillFlushCallback'] = whenReady;\n  }\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n(function(){\n'use strict';var h=new function(){};var k=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function l(b){var a=k.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function m(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction n(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}function p(b,a,e){e=e?e:new Set;for(var d=b;d;){if(d.nodeType===Node.ELEMENT_NODE){var c=d;a(c);if(\"link\"===c.localName&&\"import\"===c.getAttribute(\"rel\")){d=c.import;if(d instanceof Node&&!e.has(d))for(e.add(d),d=d.firstChild;d;d=d.nextSibling)p(d,a,e);d=n(b,c);continue}if(c=c.__CE_shadowRoot)for(c=c.firstChild;c;c=c.nextSibling)p(c,a,e);}d=d.firstChild?d.firstChild:n(b,d);}}function r(b,a,e){b[a]=e;}var t={custom:1,failed:2};function u(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1;}function aa(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e);}function w(b,a){b.b=!0;b.c.push(a);}function x(b,a){b.b&&p(a,function(a){return y(b,a)});}function y(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a);}}function z(b,a){var e=[];p(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var d=e[a];d.__CE_state===t.custom?b.connectedCallback(d):A(b,d);}}\nfunction B(b,a){var e=[];p(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var d=e[a];d.__CE_state===t.custom&&b.disconnectedCallback(d);}}\nfunction C(b,a,e){e=e?e:new Set;var d=[];p(a,function(c){if(\"link\"===c.localName&&\"import\"===c.getAttribute(\"rel\")){var a=c.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):c.addEventListener(\"load\",function(){var d=c.import;d.__CE_documentLoadHandled||(d.__CE_documentLoadHandled=!0,d.__CE_isImportDocument=!0,d.__CE_hasRegistry=!0,new Set(e),e.delete(d),C(b,d,e));});}else d.push(c);},e);if(b.b)for(a=0;a<d.length;a++)y(b,d[a]);for(a=0;a<d.length;a++)A(b,\nd[a]);}\nfunction A(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var d=e.constructor;try{try{if(new d!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop();}}catch(g){throw a.__CE_state=t.failed,g;}a.__CE_state=t.custom;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,d=0;d<e.length;d++){var c=e[d],f=a.getAttribute(c);null!==f&&b.attributeChangedCallback(a,c,\nnull,f,null);}m(a)&&b.connectedCallback(a);}}}u.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b);};u.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b);};u.prototype.attributeChangedCallback=function(b,a,e,d,c){var f=b.__CE_definition;f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(a)&&f.attributeChangedCallback.call(b,a,e,d,c);};function D(b,a){this.c=b;this.a=a;this.b=void 0;C(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}));}D.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||this.b.disconnect();for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,d=0;d<e.length;d++)C(this.c,e[d]);};function ba(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a);});}function E(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0);}function F(b){this.c=!1;this.a=b;this.h=new Map;this.f=function(b){return b()};this.b=!1;this.g=[];this.j=new D(b,document);}\nF.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!l(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.c)throw Error(\"A custom element is already being defined.\");this.c=!0;var d,c,f,g,v;try{var q=function(b){var d=P[b];if(void 0!==d&&!(d instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn d},P=a.prototype;if(!(P instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");d=q(\"connectedCallback\");c=q(\"disconnectedCallback\");f=q(\"adoptedCallback\");g=q(\"attributeChangedCallback\");v=a.observedAttributes||[];}catch(ua){return}finally{this.c=!1;}aa(this.a,b,{localName:b,constructor:a,connectedCallback:d,disconnectedCallback:c,adoptedCallback:f,attributeChangedCallback:g,observedAttributes:v,constructionStack:[]});this.g.push(b);this.b||(this.b=\n!0,this.f(function(){if(!1!==e.b)for(e.b=!1,C(e.a,document);0<e.g.length;){var b=e.g.shift();(b=e.h.get(b))&&E(b);}}));};F.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};F.prototype.o=function(b){if(!l(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ba;this.h.set(b,a);this.a.a.get(b)&&E(a);return a.c};F.prototype.m=function(b){this.j.b.disconnect();var a=this.f;this.f=function(e){return b(function(){return a(e)})};};\nwindow.CustomElementRegistry=F;F.prototype.define=F.prototype.l;F.prototype.get=F.prototype.get;F.prototype.whenDefined=F.prototype.o;F.prototype.polyfillWrapFlushCallback=F.prototype.m;var G=window.Document.prototype.createElement,ca=window.Document.prototype.createElementNS,da=window.Document.prototype.importNode,ea=window.Document.prototype.prepend,fa=window.Document.prototype.append,H=window.Node.prototype.cloneNode,I=window.Node.prototype.appendChild,J=window.Node.prototype.insertBefore,K=window.Node.prototype.removeChild,L=window.Node.prototype.replaceChild,M=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),N=window.Element.prototype.attachShadow,O=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),Q=window.Element.prototype.getAttribute,R=window.Element.prototype.setAttribute,S=window.Element.prototype.removeAttribute,T=window.Element.prototype.getAttributeNS,U=window.Element.prototype.setAttributeNS,V=window.Element.prototype.removeAttributeNS,ga=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,W=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\");function oa(){var b=X;window.HTMLElement=function(){function a(){var a=this.constructor,d=b.f.get(a);if(!d)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var c=d.constructionStack;if(!c.length)return c=G.call(document,d.localName),Object.setPrototypeOf(c,a.prototype),c.__CE_state=t.custom,c.__CE_definition=d,y(b,c),c;var d=c.length-1,f=c[d];if(f===h)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nc[d]=h;Object.setPrototypeOf(f,a.prototype);y(b,f);return f}a.prototype=na.prototype;return a}();}function Y(b,a,e){a.prepend=function(d){for(var c=[],a=0;a<arguments.length;++a)c[a-0]=arguments[a];a=c.filter(function(b){return b instanceof Node&&m(b)});e.i.apply(this,c);for(var g=0;g<a.length;g++)B(b,a[g]);if(m(this))for(a=0;a<c.length;a++)g=c[a],g instanceof Element&&z(b,g);};a.append=function(a){for(var c=[],f=0;f<arguments.length;++f)c[f-0]=arguments[f];f=c.filter(function(b){return b instanceof Node&&m(b)});e.append.apply(this,c);for(var g=0;g<f.length;g++)B(b,f[g]);if(m(this))for(f=0;f<c.length;f++)g=\nc[f],g instanceof Element&&z(b,g);};}function pa(){var b=X;r(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=G.call(this,a);y(b,a);return a});r(Document.prototype,\"importNode\",function(a,e){a=da.call(this,a,e);this.__CE_hasRegistry?C(b,a):x(b,a);return a});r(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var d=b.a.get(e);if(d)return new d.constructor}a=ca.call(this,a,e);y(b,a);return a});\nY(b,Document.prototype,{i:ea,append:fa});}function qa(){var b=X;function a(a,d){Object.defineProperty(a,\"textContent\",{enumerable:d.enumerable,configurable:!0,get:d.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)d.set.call(this,a);else{var e=void 0;if(this.firstChild){var g=this.childNodes,v=g.length;if(0<v&&m(this))for(var e=Array(v),q=0;q<v;q++)e[q]=g[q];}d.set.call(this,a);if(e)for(a=0;a<e.length;a++)B(b,e[a]);}}});}r(Node.prototype,\"insertBefore\",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);\na=J.call(this,a,d);if(m(this))for(d=0;d<c.length;d++)z(b,c[d]);return a}c=m(a);d=J.call(this,a,d);c&&B(b,a);m(this)&&z(b,a);return d});r(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=I.call(this,a);if(m(this))for(var c=0;c<d.length;c++)z(b,d[c]);return a}d=m(a);c=I.call(this,a);d&&B(b,a);m(this)&&z(b,a);return c});r(Node.prototype,\"cloneNode\",function(a){a=H.call(this,a);this.ownerDocument.__CE_hasRegistry?C(b,a):x(b,a);\nreturn a});r(Node.prototype,\"removeChild\",function(a){var d=m(a),c=K.call(this,a);d&&B(b,a);return c});r(Node.prototype,\"replaceChild\",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=L.call(this,a,d);if(m(this))for(B(b,d),d=0;d<c.length;d++)z(b,c[d]);return a}var c=m(a),f=L.call(this,a,d),g=m(this);g&&B(b,d);c&&B(b,a);g&&z(b,a);return f});M&&M.get?a(Node.prototype,M):w(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)K.call(this,this.firstChild);I.call(this,document.createTextNode(a));}});});}function ra(b){var a=Element.prototype;a.before=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(a){return a instanceof Node&&m(a)});ja.apply(this,d);for(var f=0;f<c.length;f++)B(b,c[f]);if(m(this))for(c=0;c<d.length;c++)f=d[c],f instanceof Element&&z(b,f);};a.after=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(a){return a instanceof Node&&m(a)});ka.apply(this,d);for(var f=0;f<c.length;f++)B(b,c[f]);if(m(this))for(c=\n0;c<d.length;c++)f=d[c],f instanceof Element&&z(b,f);};a.replaceWith=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];var c=d.filter(function(a){return a instanceof Node&&m(a)}),f=m(this);la.apply(this,d);for(var g=0;g<c.length;g++)B(b,c[g]);if(f)for(B(b,this),c=0;c<d.length;c++)f=d[c],f instanceof Element&&z(b,f);};a.remove=function(){var a=m(this);ma.call(this);a&&B(b,this);};}function sa(){var b=X;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=Array.prototype.slice.apply(this.childNodes);c.set.call(this,a);if(m(this))for(var e=0;e<d.length;e++)B(b,d[e]);this.ownerDocument.__CE_hasRegistry?C(b,this):x(b,this);return a}});}N?r(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=a=N.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(O&&\nO.get)a(Element.prototype,O);else if(W&&W.get)a(HTMLElement.prototype,W);else{var e=G.call(document,\"div\");w(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return H.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(e.innerHTML=a;0<b.childNodes.length;)K.call(b,b.childNodes[0]);for(;0<e.childNodes.length;)I.call(b,e.childNodes[0]);}});});}r(Element.prototype,\"setAttribute\",function(a,c){if(this.__CE_state!==t.custom)return R.call(this,a,\nc);var e=Q.call(this,a);R.call(this,a,c);c=Q.call(this,a);e!==c&&b.attributeChangedCallback(this,a,e,c,null);});r(Element.prototype,\"setAttributeNS\",function(a,c,e){if(this.__CE_state!==t.custom)return U.call(this,a,c,e);var g=T.call(this,a,c);U.call(this,a,c,e);e=T.call(this,a,c);g!==e&&b.attributeChangedCallback(this,c,g,e,a);});r(Element.prototype,\"removeAttribute\",function(a){if(this.__CE_state!==t.custom)return S.call(this,a);var c=Q.call(this,a);S.call(this,a);null!==c&&b.attributeChangedCallback(this,\na,c,null,null);});r(Element.prototype,\"remoteAttributeNS\",function(a,c){if(this.__CE_state!==t.custom)return V.call(this,a,c);var e=T.call(this,a,c);V.call(this,a,c);null!==e&&b.attributeChangedCallback(this,c,e,null,a);});r(Element.prototype,\"insertAdjacentElement\",function(a,c){var e=m(c);a=ga.call(this,a,c);e&&B(b,c);m(a)&&z(b,c);return a});Y(b,Element.prototype,{i:ha,append:ia});ra(b);}/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var X=new u;oa();pa();qa();sa();document.__CE_hasRegistry=!0;var ta=new F(X);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:ta});}\n}).call(self);\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n// given a string of css, return a simple rule tree\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nfunction stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nlet types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nlet nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nfunction rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nfunction isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\n\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nlet rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar templateMap = {};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst promise = Promise.resolve();\n\nclass StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx$$1 = rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx$$1.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(rx.BRACKETED, '')\n      .replace(rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        rx.MIXIN_MATCH.lastIndex = 0;\n        m = rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer$1._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(rx.HOST_PREFIX + rxHostSelector +\n      rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(style);\n    let self = this;\n    style.textContent = toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    };\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO(dfreedm): consider spliting into separate global\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = applyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      applyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          applyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    // note: fallback to childNodes to support recursing into SVG which\n    // does not support children in some browsers (Edge/IE)\n    let c$ = root.children || root.childNodes;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        applyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = rulesForStyle(style);\n      applyShim.transformRules(ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties$1.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\nlet ShadyCSS$1 = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS$1._elementsHaveApplied) {\n      ShadyCSS$1.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS$1._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    customElements.polyfillWrapFlushCallback(flush => HTMLImports.whenReady(flush));\n  }\n\n})(window.WebComponents);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * Polyfills loaded: HTML Imports, Custom Elements\n * Used in: Safari 10, Firefox once SD is shipped\n */\n\n//TODO(notwaldorf): this is temporary and should be removed.\n\n}());\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\n'use strict';\n\nlet ShadyCSS = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS._elementsHaveApplied) {\n      ShadyCSS.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      const content = template.content;\n      if (!content) { // Template not supported.\n        return;\n      }\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', () => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if (request.status === 304 || request.status === 0 ||\n                request.status >= 200 && request.status < 300) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.load();\n      });\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     */\n    load(link) {\n      const whenLoadedPromise = link ? this.whenImportLoaded(link) :\n        this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise.then(() => {\n          // Wait until all resources are ready.\n          if (--this.inflight === 0) {\n            this.onLoadedAll();\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then(resp => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        }, () => this.documents[url] = null) // If load fails, handle error.\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move children into it.\n        content = document.createDocumentFragment();\n        while (template.firstElementChild) {\n          content.appendChild(template.firstElementChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < imports.length; iii++) {\n            const n = imports[iii];\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, importSelector);\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = element => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise(resolve => {\n        // Inline scripts don't trigger load/error events, consider them already loaded.\n        if (element.localName === 'script' && !element.src) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!imp['__loaded']) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      Promise.all(promises).then(callback);\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  }\n\n  // In case customElements polyfill is in use, install whenReady as the\n  // flush callback, so that custom element upgrades are deferred; this composes\n  // with any previous polyfillFlushCallback that the user may have installed\n  let prevWhenReady;\n  if (window.customElements) {\n    prevWhenReady = window.customElements['polyfillFlushCallback'];\n  } else {\n    window.customElements = {};\n  }\n  if (prevWhenReady) {\n    window.customElements['polyfillFlushCallback'] = cb => \n      whenReady(() => prevWhenReady(cb));\n  } else {\n    window.customElements['polyfillFlushCallback'] = whenReady;\n  }\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n","(function(){\n'use strict';var h=new function(){};var k=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function l(b){var a=k.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function m(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction n(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}function p(b,a,e){e=e?e:new Set;for(var d=b;d;){if(d.nodeType===Node.ELEMENT_NODE){var c=d;a(c);if(\"link\"===c.localName&&\"import\"===c.getAttribute(\"rel\")){d=c.import;if(d instanceof Node&&!e.has(d))for(e.add(d),d=d.firstChild;d;d=d.nextSibling)p(d,a,e);d=n(b,c);continue}if(c=c.__CE_shadowRoot)for(c=c.firstChild;c;c=c.nextSibling)p(c,a,e)}d=d.firstChild?d.firstChild:n(b,d)}}function r(b,a,e){b[a]=e};var t={custom:1,failed:2};function u(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1}function aa(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e)}function w(b,a){b.b=!0;b.c.push(a)}function x(b,a){b.b&&p(a,function(a){return y(b,a)})}function y(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a)}}function z(b,a){var e=[];p(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var d=e[a];d.__CE_state===t.custom?b.connectedCallback(d):A(b,d)}}\nfunction B(b,a){var e=[];p(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var d=e[a];d.__CE_state===t.custom&&b.disconnectedCallback(d)}}\nfunction C(b,a,e){e=e?e:new Set;var d=[];p(a,function(c){if(\"link\"===c.localName&&\"import\"===c.getAttribute(\"rel\")){var a=c.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):c.addEventListener(\"load\",function(){var d=c.import;d.__CE_documentLoadHandled||(d.__CE_documentLoadHandled=!0,d.__CE_isImportDocument=!0,d.__CE_hasRegistry=!0,new Set(e),e.delete(d),C(b,d,e))})}else d.push(c)},e);if(b.b)for(a=0;a<d.length;a++)y(b,d[a]);for(a=0;a<d.length;a++)A(b,\nd[a])}\nfunction A(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var d=e.constructor;try{try{if(new d!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop()}}catch(g){throw a.__CE_state=t.failed,g;}a.__CE_state=t.custom;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,d=0;d<e.length;d++){var c=e[d],f=a.getAttribute(c);null!==f&&b.attributeChangedCallback(a,c,\nnull,f,null)}m(a)&&b.connectedCallback(a)}}}u.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b)};u.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b)};u.prototype.attributeChangedCallback=function(b,a,e,d,c){var f=b.__CE_definition;f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(a)&&f.attributeChangedCallback.call(b,a,e,d,c)};function D(b,a){this.c=b;this.a=a;this.b=void 0;C(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}))}D.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||this.b.disconnect();for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,d=0;d<e.length;d++)C(this.c,e[d])};function ba(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a)})}function E(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0)};function F(b){this.c=!1;this.a=b;this.h=new Map;this.f=function(b){return b()};this.b=!1;this.g=[];this.j=new D(b,document)}\nF.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!l(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.c)throw Error(\"A custom element is already being defined.\");this.c=!0;var d,c,f,g,v;try{var q=function(b){var d=P[b];if(void 0!==d&&!(d instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn d},P=a.prototype;if(!(P instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");d=q(\"connectedCallback\");c=q(\"disconnectedCallback\");f=q(\"adoptedCallback\");g=q(\"attributeChangedCallback\");v=a.observedAttributes||[]}catch(ua){return}finally{this.c=!1}aa(this.a,b,{localName:b,constructor:a,connectedCallback:d,disconnectedCallback:c,adoptedCallback:f,attributeChangedCallback:g,observedAttributes:v,constructionStack:[]});this.g.push(b);this.b||(this.b=\n!0,this.f(function(){if(!1!==e.b)for(e.b=!1,C(e.a,document);0<e.g.length;){var b=e.g.shift();(b=e.h.get(b))&&E(b)}}))};F.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};F.prototype.o=function(b){if(!l(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ba;this.h.set(b,a);this.a.a.get(b)&&E(a);return a.c};F.prototype.m=function(b){this.j.b.disconnect();var a=this.f;this.f=function(e){return b(function(){return a(e)})}};\nwindow.CustomElementRegistry=F;F.prototype.define=F.prototype.l;F.prototype.get=F.prototype.get;F.prototype.whenDefined=F.prototype.o;F.prototype.polyfillWrapFlushCallback=F.prototype.m;var G=window.Document.prototype.createElement,ca=window.Document.prototype.createElementNS,da=window.Document.prototype.importNode,ea=window.Document.prototype.prepend,fa=window.Document.prototype.append,H=window.Node.prototype.cloneNode,I=window.Node.prototype.appendChild,J=window.Node.prototype.insertBefore,K=window.Node.prototype.removeChild,L=window.Node.prototype.replaceChild,M=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),N=window.Element.prototype.attachShadow,O=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),Q=window.Element.prototype.getAttribute,R=window.Element.prototype.setAttribute,S=window.Element.prototype.removeAttribute,T=window.Element.prototype.getAttributeNS,U=window.Element.prototype.setAttributeNS,V=window.Element.prototype.removeAttributeNS,ga=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,W=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\");function oa(){var b=X;window.HTMLElement=function(){function a(){var a=this.constructor,d=b.f.get(a);if(!d)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var c=d.constructionStack;if(!c.length)return c=G.call(document,d.localName),Object.setPrototypeOf(c,a.prototype),c.__CE_state=t.custom,c.__CE_definition=d,y(b,c),c;var d=c.length-1,f=c[d];if(f===h)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nc[d]=h;Object.setPrototypeOf(f,a.prototype);y(b,f);return f}a.prototype=na.prototype;return a}()};function Y(b,a,e){a.prepend=function(d){for(var c=[],a=0;a<arguments.length;++a)c[a-0]=arguments[a];a=c.filter(function(b){return b instanceof Node&&m(b)});e.i.apply(this,c);for(var g=0;g<a.length;g++)B(b,a[g]);if(m(this))for(a=0;a<c.length;a++)g=c[a],g instanceof Element&&z(b,g)};a.append=function(a){for(var c=[],f=0;f<arguments.length;++f)c[f-0]=arguments[f];f=c.filter(function(b){return b instanceof Node&&m(b)});e.append.apply(this,c);for(var g=0;g<f.length;g++)B(b,f[g]);if(m(this))for(f=0;f<c.length;f++)g=\nc[f],g instanceof Element&&z(b,g)}};function pa(){var b=X;r(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=G.call(this,a);y(b,a);return a});r(Document.prototype,\"importNode\",function(a,e){a=da.call(this,a,e);this.__CE_hasRegistry?C(b,a):x(b,a);return a});r(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var d=b.a.get(e);if(d)return new d.constructor}a=ca.call(this,a,e);y(b,a);return a});\nY(b,Document.prototype,{i:ea,append:fa})};function qa(){var b=X;function a(a,d){Object.defineProperty(a,\"textContent\",{enumerable:d.enumerable,configurable:!0,get:d.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)d.set.call(this,a);else{var e=void 0;if(this.firstChild){var g=this.childNodes,v=g.length;if(0<v&&m(this))for(var e=Array(v),q=0;q<v;q++)e[q]=g[q]}d.set.call(this,a);if(e)for(a=0;a<e.length;a++)B(b,e[a])}}})}r(Node.prototype,\"insertBefore\",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);\na=J.call(this,a,d);if(m(this))for(d=0;d<c.length;d++)z(b,c[d]);return a}c=m(a);d=J.call(this,a,d);c&&B(b,a);m(this)&&z(b,a);return d});r(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=I.call(this,a);if(m(this))for(var c=0;c<d.length;c++)z(b,d[c]);return a}d=m(a);c=I.call(this,a);d&&B(b,a);m(this)&&z(b,a);return c});r(Node.prototype,\"cloneNode\",function(a){a=H.call(this,a);this.ownerDocument.__CE_hasRegistry?C(b,a):x(b,a);\nreturn a});r(Node.prototype,\"removeChild\",function(a){var d=m(a),c=K.call(this,a);d&&B(b,a);return c});r(Node.prototype,\"replaceChild\",function(a,d){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=L.call(this,a,d);if(m(this))for(B(b,d),d=0;d<c.length;d++)z(b,c[d]);return a}var c=m(a),f=L.call(this,a,d),g=m(this);g&&B(b,d);c&&B(b,a);g&&z(b,a);return f});M&&M.get?a(Node.prototype,M):w(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)K.call(this,this.firstChild);I.call(this,document.createTextNode(a))}})})};function ra(b){var a=Element.prototype;a.before=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(a){return a instanceof Node&&m(a)});ja.apply(this,d);for(var f=0;f<c.length;f++)B(b,c[f]);if(m(this))for(c=0;c<d.length;c++)f=d[c],f instanceof Element&&z(b,f)};a.after=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(a){return a instanceof Node&&m(a)});ka.apply(this,d);for(var f=0;f<c.length;f++)B(b,c[f]);if(m(this))for(c=\n0;c<d.length;c++)f=d[c],f instanceof Element&&z(b,f)};a.replaceWith=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];var c=d.filter(function(a){return a instanceof Node&&m(a)}),f=m(this);la.apply(this,d);for(var g=0;g<c.length;g++)B(b,c[g]);if(f)for(B(b,this),c=0;c<d.length;c++)f=d[c],f instanceof Element&&z(b,f)};a.remove=function(){var a=m(this);ma.call(this);a&&B(b,this)}};function sa(){var b=X;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=Array.prototype.slice.apply(this.childNodes);c.set.call(this,a);if(m(this))for(var e=0;e<d.length;e++)B(b,d[e]);this.ownerDocument.__CE_hasRegistry?C(b,this):x(b,this);return a}})}N?r(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=a=N.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(O&&\nO.get)a(Element.prototype,O);else if(W&&W.get)a(HTMLElement.prototype,W);else{var e=G.call(document,\"div\");w(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return H.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(e.innerHTML=a;0<b.childNodes.length;)K.call(b,b.childNodes[0]);for(;0<e.childNodes.length;)I.call(b,e.childNodes[0])}})})}r(Element.prototype,\"setAttribute\",function(a,c){if(this.__CE_state!==t.custom)return R.call(this,a,\nc);var e=Q.call(this,a);R.call(this,a,c);c=Q.call(this,a);e!==c&&b.attributeChangedCallback(this,a,e,c,null)});r(Element.prototype,\"setAttributeNS\",function(a,c,e){if(this.__CE_state!==t.custom)return U.call(this,a,c,e);var g=T.call(this,a,c);U.call(this,a,c,e);e=T.call(this,a,c);g!==e&&b.attributeChangedCallback(this,c,g,e,a)});r(Element.prototype,\"removeAttribute\",function(a){if(this.__CE_state!==t.custom)return S.call(this,a);var c=Q.call(this,a);S.call(this,a);null!==c&&b.attributeChangedCallback(this,\na,c,null,null)});r(Element.prototype,\"remoteAttributeNS\",function(a,c){if(this.__CE_state!==t.custom)return V.call(this,a,c);var e=T.call(this,a,c);V.call(this,a,c);null!==e&&b.attributeChangedCallback(this,c,e,null,a)});r(Element.prototype,\"insertAdjacentElement\",function(a,c){var e=m(c);a=ga.call(this,a,c);e&&B(b,c);m(a)&&z(b,c);return a});Y(b,Element.prototype,{i:ha,append:ia});ra(b)};/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var X=new u;oa();pa();qa();sa();document.__CE_hasRegistry=!0;var ta=new F(X);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:ta})};\n}).call(self);\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    // note: fallback to childNodes to support recursing into SVG which\n    // does not support children in some browsers (Edge/IE)\n    let c$ = root.children || root.childNodes;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    customElements.polyfillWrapFlushCallback(flush => HTMLImports.whenReady(flush));\n  }\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}