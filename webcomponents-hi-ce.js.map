{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/shadycss/src/custom-style-element.js","bower_components/html-imports/src/html-imports.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","bower_components/shadycss/src/style-cache.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","shimcssproperties","nativeShadow","shimshadow","toCssText","callback","forEachRule","rulesForStyle","style","__cssRules","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","ShadyDOM","nativeMethods","call","addToBitMask","bits","o","parseInt","enqueueDocumentValidation","enqueued","HTMLImports","whenReady","validateDocument","readyState","addEventListener","requestAnimationFrame","ShadyCSS","_elementsHaveApplied","updateStyles","useNative","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","replaceAttrUrl","getAttribute","src","localName","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","querySelectorAll","fixUrlsInTemplate","template","content","n$","linkUrl","replaceUrls","regexp","m","pre","url","post","urlPath","resolveUrl","test","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","Promise","resolve","reject","resource","pieces","header","atob","decodeURIComponent","request","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","resp","response","responseText","status","send","isIE","navigator","userAgent","supportsUnhandledrejection","importSelector","importDisableType","disabledLinkSelector","importDependenciesSelector","importDependencyAttr","rootImportSelector","pendingScriptsSelector","pendingStylesSelector","isImportLink","nodeType","Node","ELEMENT_NODE","rel","whenElementLoaded","then","whenDocumentReady","whenImportsReady","stateChanged","removeEventListener","imports","promises","imp","all","catch","err","stack","setTimeout","importForElement","ownerDocument","owner","parentNode","host","imps","import","onLoadingDone","event","elem","constructor","documents","inflight","MutationObserver","handleMutations","observe","childList","subtree","link","whenLoadedPromise","whenImportLoaded","whenImportsLoaded","onLoadedAll","links","promise","makeDocument","createDocumentFragment","p1","p2","innerHTML","baseEl","querySelector","removeAttribute","s$","inlineScriptIndex","num","encodeURIComponent","flatten","waitForStyles","runScripts","fireEvents","DOCUMENT_FRAGMENT_NODE","clone","j","ll","name","replaceChild","needsMove","rootImport","next","placeholder","fireEventIfNeeded","eventType","dispatchEvent","CustomEvent","bubbles","cancelable","detail","mutations","addedNodes","ii","iii","k","b","aa","has","isConnected","__CE_isImportDocument","Document","ShadowRoot","Set","c","d","f","add","__CE_shadowRoot","q","Map","ba","set","w","x","__CE_patched","y","__CE_state","custom","connectedCallback","z","A","disconnectedCallback","B","__CE_hasRegistry","__CE_documentLoadHandled","delete","constructionStack","Error","g","failed","__CE_definition","attributeChangedCallback","observedAttributes","C","bind","D","disconnect","ca","E","F","h","pa","Y","HTMLElement","G","setPrototypeOf","prototype","na","qa","prepend","filter","apply","Element","append","ra","ea","da","fa","ga","sa","enumerable","TEXT_NODE","childNodes","Array","DocumentFragment","slice","J","I","H","K","L","M","join","createTextNode","ta","before","ja","ka","replaceWith","la","remove","ma","ua","N","warn","O","X","R","P","U","T","S","V","oa","W","ha","ia","Function","TypeError","SyntaxError","Q","wa","adoptedCallback","shift","CustomElementRegistry","define","whenDefined","polyfillWrapFlushCallback","createElementNS","importNode","cloneNode","removeChild","getOwnPropertyDescriptor","attachShadow","getAttributeNS","setAttributeNS","removeAttributeNS","insertAdjacentElement","Z","customElements","forcePolyfill","va","self","inUse","CSS","supports","WebComponents","flags","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","c$","_content","children","classList","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","templateMap","StyleInfo","__styleInfo","styleInfo","invalidate","elementName","_applyShimInvalid","startValidating","_validating","ast","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","StyleUtil.rx","any","exec","assign","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","lastIndex","colon","pp","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","_useCount","StyleUtil.applyCss","shadowRoot","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","ce","origDefine","clazz","options","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","detectMixin","transformStyle","transformRules","transformRule","transformCssText","_consumeCssProperties","_getInitialValueForProperty","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","applyShim","flush","elementNeedsScoping","contains","SVGElement","hasAttribute","handler","mxns","mxn","documentElement","getRootNode","removedNodes","classes","from","classIdx","observer","nativeCustomElements","delayedStart","body","listener","takeRecords","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","list","fetch","entry","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","nativeCss","nativeCssApply","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","prepareTemplate","_prepared","hasMixins","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","hasApplied","_isRootOwner","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","_updateNativeProperties","_applyStyleProperties","_applyToDescendants","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","customStyles","hookFn","_customStyles","processHook","fn","__appliedElement","attr","runAndClearCallback","flushCallback","cb","origWhenReady"],"mappings":"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","file":"webcomponents-hi-ce.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      // If template is not supported, still resolve urls within it.\n      const content = template.content || template;\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', () => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if (request.status === 304 || request.status === 0 ||\n                request.status >= 200 && request.status < 300) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n  const supportsUnhandledrejection = ('onunhandledrejection' in window);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.load();\n      });\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     * @return {Promise|undefined}\n     */\n    load(link) {\n      let whenLoadedPromise = link ? this.whenImportLoaded(link) :\n        this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise = whenLoadedPromise.then(() => {\n          // Wait until all resources are ready, then load import resources.\n          if (--this.inflight === 0) {\n            return this.onLoadedAll();\n          }\n        });\n        // If browser doesn't support the unhandled rejection event,\n        // log the error stack and fire the error outside the promise so it's\n        // visible to listeners of window.onerror\n        if (!supportsUnhandledrejection) {\n          whenLoadedPromise = whenLoadedPromise.catch(err => {\n            console.error(err.stack);\n            setTimeout(() => {\n              throw err;\n            });\n            throw 'unhandledrejection';\n          });\n        }\n      }\n      return whenLoadedPromise;\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then(resp => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        }, () => this.documents[url] = null) // If load fails, handle error.\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    /**\n     * Returns a promise resolved after the loaded imports finish loading scripts\n     * and styles, and fire the load/error events.\n     * @return {!Promise}\n     */\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      return Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < imports.length; iii++) {\n            const n = imports[iii];\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = element => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise(resolve => {\n        // Inline scripts don't trigger load/error events, consider them already loaded.\n        if (element.localName === 'script' && !element.src) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  };\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  };\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      };\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  };\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!imp['__loaded']) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      // Execute callback outside the promise scope to avoid unhandled promise\n      // exceptions that don't depend on whenImportsReady.\n      let all = Promise.all(promises).then(callback);\n      if (!supportsUnhandledrejection) {\n        all.catch(err => {\n          console.error(err.stack);\n          setTimeout(() => {\n            throw err;\n          });\n          throw 'unhandledrejection';\n        });\n      }\n    } else {\n      callback();\n    }\n  };\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n(function(){\n'use strict';var h=new function(){};var aa=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function k(b){var a=aa.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function l(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(window.ShadowRoot&&b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction m(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}\nfunction n(b,a,e){e=e?e:new Set;for(var c=b;c;){if(c.nodeType===Node.ELEMENT_NODE){var d=c;a(d);var f=d.localName;if(\"link\"===f&&\"import\"===d.getAttribute(\"rel\")){c=d.import;if(c instanceof Node&&!e.has(c))for(e.add(c),c=c.firstChild;c;c=c.nextSibling)n(c,a,e);c=m(b,d);continue}else if(\"template\"===f){c=m(b,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)n(d,a,e);}c=c.firstChild?c.firstChild:m(b,c);}}function q(b,a,e){b[a]=e;}var t={custom:1,failed:2};function u(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1;}function ba(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e);}function v(b,a){b.b=!0;b.c.push(a);}function w(b,a){b.b&&n(a,function(a){return x(b,a)});}function x(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a);}}function y(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];c.__CE_state===t.custom?b.connectedCallback(c):z(b,c);}}\nfunction A(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];c.__CE_state===t.custom&&b.disconnectedCallback(c);}}\nfunction B(b,a,e){e=e?e:new Set;var c=[];n(a,function(d){if(\"link\"===d.localName&&\"import\"===d.getAttribute(\"rel\")){var a=d.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):d.addEventListener(\"load\",function(){var a=d.import;a.__CE_documentLoadHandled||(a.__CE_documentLoadHandled=!0,a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0,new Set(e),e.delete(a),B(b,a,e));});}else c.push(d);},e);if(b.b)for(a=0;a<c.length;a++)x(b,c[a]);for(a=0;a<c.length;a++)z(b,\nc[a]);}\nfunction z(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var c=e.constructor;try{try{if(new c!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop();}}catch(g){throw a.__CE_state=t.failed,g;}a.__CE_state=t.custom;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,c=0;c<e.length;c++){var d=e[c],f=a.getAttribute(d);null!==f&&b.attributeChangedCallback(a,d,\nnull,f,null);}l(a)&&b.connectedCallback(a);}}}u.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b);};u.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b);};u.prototype.attributeChangedCallback=function(b,a,e,c,d){var f=b.__CE_definition;f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(a)&&f.attributeChangedCallback.call(b,a,e,c,d);};function C(b,a){this.c=b;this.a=a;this.b=void 0;B(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}));}function D(b){b.b&&b.b.disconnect();}C.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||D(this);for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,c=0;c<e.length;c++)B(this.c,e[c]);};function ca(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a);});}function E(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0);}function F(b){this.f=!1;this.a=b;this.h=new Map;this.g=function(b){return b()};this.b=!1;this.c=[];this.j=new C(b,document);}\nF.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!k(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.f)throw Error(\"A custom element is already being defined.\");this.f=!0;var c,d,f,g,p;try{var r=function(b){var a=Q[b];if(void 0!==a&&!(a instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn a},Q=a.prototype;if(!(Q instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");c=r(\"connectedCallback\");d=r(\"disconnectedCallback\");f=r(\"adoptedCallback\");g=r(\"attributeChangedCallback\");p=a.observedAttributes||[];}catch(wa){return}finally{this.f=!1;}ba(this.a,b,{localName:b,constructor:a,connectedCallback:c,disconnectedCallback:d,adoptedCallback:f,attributeChangedCallback:g,observedAttributes:p,constructionStack:[]});this.c.push(b);this.b||(this.b=\n!0,this.g(function(){if(!1!==e.b)for(e.b=!1,B(e.a,document);0<e.c.length;){var b=e.c.shift();(b=e.h.get(b))&&E(b);}}));};F.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};F.prototype.o=function(b){if(!k(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ca;this.h.set(b,a);this.a.a.get(b)&&-1===this.c.indexOf(b)&&E(a);return a.c};F.prototype.m=function(b){D(this.j);var a=this.g;this.g=function(e){return b(function(){return a(e)})};};\nwindow.CustomElementRegistry=F;F.prototype.define=F.prototype.l;F.prototype.get=F.prototype.get;F.prototype.whenDefined=F.prototype.o;F.prototype.polyfillWrapFlushCallback=F.prototype.m;var G=window.Document.prototype.createElement,da=window.Document.prototype.createElementNS,ea=window.Document.prototype.importNode,fa=window.Document.prototype.prepend,ga=window.Document.prototype.append,H=window.Node.prototype.cloneNode,I=window.Node.prototype.appendChild,J=window.Node.prototype.insertBefore,K=window.Node.prototype.removeChild,L=window.Node.prototype.replaceChild,M=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),N=window.Element.prototype.attachShadow,O=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),P=window.Element.prototype.getAttribute,R=window.Element.prototype.setAttribute,S=window.Element.prototype.removeAttribute,T=window.Element.prototype.getAttributeNS,U=window.Element.prototype.setAttributeNS,V=window.Element.prototype.removeAttributeNS,W=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,X=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\"),oa=window.HTMLElement.prototype.insertAdjacentElement;function pa(){var b=Y;window.HTMLElement=function(){function a(){var a=this.constructor,c=b.f.get(a);if(!c)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var d=c.constructionStack;if(!d.length)return d=G.call(document,c.localName),Object.setPrototypeOf(d,a.prototype),d.__CE_state=t.custom,d.__CE_definition=c,x(b,d),d;var c=d.length-1,f=d[c];if(f===h)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nd[c]=h;Object.setPrototypeOf(f,a.prototype);x(b,f);return f}a.prototype=na.prototype;return a}();}function qa(b,a,e){a.prepend=function(a){for(var d=[],f=0;f<arguments.length;++f)d[f-0]=arguments[f];f=d.filter(function(b){return b instanceof Node&&l(b)});e.i.apply(this,d);for(var g=0;g<f.length;g++)A(b,f[g]);if(l(this))for(f=0;f<d.length;f++)g=d[f],g instanceof Element&&y(b,g);};a.append=function(a){for(var d=[],f=0;f<arguments.length;++f)d[f-0]=arguments[f];f=d.filter(function(b){return b instanceof Node&&l(b)});e.append.apply(this,d);for(var g=0;g<f.length;g++)A(b,f[g]);if(l(this))for(f=0;f<\nd.length;f++)g=d[f],g instanceof Element&&y(b,g);};}function ra(){var b=Y;q(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=G.call(this,a);x(b,a);return a});q(Document.prototype,\"importNode\",function(a,e){a=ea.call(this,a,e);this.__CE_hasRegistry?B(b,a):w(b,a);return a});q(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var c=b.a.get(e);if(c)return new c.constructor}a=da.call(this,a,e);x(b,a);return a});\nqa(b,Document.prototype,{i:fa,append:ga});}function sa(){var b=Y;function a(a,c){Object.defineProperty(a,\"textContent\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)c.set.call(this,a);else{var e=void 0;if(this.firstChild){var g=this.childNodes,p=g.length;if(0<p&&l(this))for(var e=Array(p),r=0;r<p;r++)e[r]=g[r];}c.set.call(this,a);if(e)for(a=0;a<e.length;a++)A(b,e[a]);}}});}q(Node.prototype,\"insertBefore\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);\na=J.call(this,a,c);if(l(this))for(c=0;c<d.length;c++)y(b,d[c]);return a}d=l(a);c=J.call(this,a,c);d&&A(b,a);l(this)&&y(b,a);return c});q(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=I.call(this,a);if(l(this))for(var d=0;d<c.length;d++)y(b,c[d]);return a}c=l(a);d=I.call(this,a);c&&A(b,a);l(this)&&y(b,a);return d});q(Node.prototype,\"cloneNode\",function(a){a=H.call(this,a);this.ownerDocument.__CE_hasRegistry?B(b,a):w(b,a);\nreturn a});q(Node.prototype,\"removeChild\",function(a){var c=l(a),d=K.call(this,a);c&&A(b,a);return d});q(Node.prototype,\"replaceChild\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=L.call(this,a,c);if(l(this))for(A(b,c),c=0;c<d.length;c++)y(b,d[c]);return a}var d=l(a),f=L.call(this,a,c),g=l(this);g&&A(b,c);d&&A(b,a);g&&y(b,a);return f});M&&M.get?a(Node.prototype,M):v(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)K.call(this,this.firstChild);I.call(this,document.createTextNode(a));}});});}function ta(b){var a=Element.prototype;a.before=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ja.apply(this,c);for(var f=0;f<d.length;f++)A(b,d[f]);if(l(this))for(d=0;d<c.length;d++)f=c[d],f instanceof Element&&y(b,f);};a.after=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ka.apply(this,c);for(var f=0;f<d.length;f++)A(b,d[f]);if(l(this))for(d=\n0;d<c.length;d++)f=c[d],f instanceof Element&&y(b,f);};a.replaceWith=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];var d=c.filter(function(a){return a instanceof Node&&l(a)}),f=l(this);la.apply(this,c);for(var g=0;g<d.length;g++)A(b,d[g]);if(f)for(A(b,this),d=0;d<c.length;d++)f=c[d],f instanceof Element&&y(b,f);};a.remove=function(){var a=l(this);ma.call(this);a&&A(b,this);};}function ua(){var b=Y;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=Array.prototype.slice.apply(this.childNodes);c.set.call(this,a);if(l(this))for(var e=0;e<d.length;e++)A(b,d[e]);this.ownerDocument.__CE_hasRegistry?B(b,this):w(b,this);return a}});}function e(a,c){q(a,\"insertAdjacentElement\",function(a,d){var e=l(d);a=c.call(this,a,d);e&&A(b,d);l(a)&&y(b,d);return a});}N?q(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=\na=N.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(O&&O.get)a(Element.prototype,O);else if(X&&X.get)a(HTMLElement.prototype,X);else{var c=G.call(document,\"div\");v(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return H.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(c.innerHTML=a;0<b.childNodes.length;)K.call(b,b.childNodes[0]);for(;0<c.childNodes.length;)I.call(b,c.childNodes[0]);}});});}q(Element.prototype,\n\"setAttribute\",function(a,c){if(this.__CE_state!==t.custom)return R.call(this,a,c);var e=P.call(this,a);R.call(this,a,c);c=P.call(this,a);e!==c&&b.attributeChangedCallback(this,a,e,c,null);});q(Element.prototype,\"setAttributeNS\",function(a,c,e){if(this.__CE_state!==t.custom)return U.call(this,a,c,e);var p=T.call(this,a,c);U.call(this,a,c,e);e=T.call(this,a,c);p!==e&&b.attributeChangedCallback(this,c,p,e,a);});q(Element.prototype,\"removeAttribute\",function(a){if(this.__CE_state!==t.custom)return S.call(this,\na);var c=P.call(this,a);S.call(this,a);null!==c&&b.attributeChangedCallback(this,a,c,null,null);});q(Element.prototype,\"removeAttributeNS\",function(a,c){if(this.__CE_state!==t.custom)return V.call(this,a,c);var e=T.call(this,a,c);V.call(this,a,c);var p=T.call(this,a,c);e!==p&&b.attributeChangedCallback(this,c,e,p,a);});oa?e(HTMLElement.prototype,oa):W?e(Element.prototype,W):console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");qa(b,Element.prototype,{i:ha,append:ia});ta(b);}\n/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var Y=new u;pa();ra();sa();ua();document.__CE_hasRegistry=!0;var va=new F(Y);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:va});}\n}).call(self);\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n// given a string of css, return a simple rule tree\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nfunction stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nlet types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nlet nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nfunction rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nfunction isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\n\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nlet rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar templateMap = {};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst promise = Promise.resolve();\n\nclass StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx$$1 = rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx$$1.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(rx.BRACKETED, '')\n      .replace(rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        rx.MIXIN_MATCH.lastIndex = 0;\n        m = rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer$1._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(rx.HOST_PREFIX + rxHostSelector +\n      rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(style);\n    let self = this;\n    style.textContent = toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    };\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO(dfreedm): consider spliting into separate global\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = applyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      applyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          applyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    // note: fallback to childNodes to support recursing into SVG which\n    // does not support children in some browsers (Edge/IE)\n    let c$ = root.children || root.childNodes;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        applyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = rulesForStyle(style);\n      applyShim.transformRules(ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties$1.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\nlet ShadyCSS$1 = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS$1._elementsHaveApplied) {\n      ShadyCSS$1.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS$1._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS$1._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        runAndClearCallback();\n        cb();\n      });\n    };\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * Polyfills loaded: HTML Imports, Custom Elements\n * Used in: Safari 10, Firefox once SD is shipped\n */\n\n// TODO(notwaldorf): Remove after this is addressed:\n// https://github.com/webcomponents/shadycss/issues/46\n\n}());\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nWrapper over <style> elements to co-operate with ShadyCSS\n\nExample:\n<custom-style>\n  <style>\n  ...\n  </style>\n</custom-style>\n*/\n\n'use strict';\n\nlet ShadyCSS = window.ShadyCSS;\n\nlet enqueued = false;\n\nlet customStyles = [];\n\nlet hookFn = null;\n\n/*\nIf a page only has <custom-style> elements, it will flash unstyled content,\nas all the instances will boot asynchronously after page load.\n\nCalling ShadyCSS.updateStyles() will force the work to happen synchronously\n*/\nfunction enqueueDocumentValidation() {\n  if (enqueued) {\n    return;\n  }\n  enqueued = true;\n  if (window.HTMLImports) {\n    window.HTMLImports.whenReady(validateDocument);\n  } else if (document.readyState === 'complete') {\n    validateDocument();\n  } else {\n    document.addEventListener('readystatechange', () => {\n      if (document.readyState === 'complete') {\n        validateDocument();\n      }\n    });\n  }\n}\n\nfunction validateDocument() {\n  requestAnimationFrame(() => {\n    if (enqueued || ShadyCSS._elementsHaveApplied) {\n      ShadyCSS.updateStyles();\n    }\n    enqueued = false;\n  });\n}\n\nclass CustomStyle extends HTMLElement {\n  static get _customStyles() {\n    return customStyles;\n  }\n  static get processHook() {\n    return hookFn;\n  }\n  static set processHook(fn) {\n    hookFn = fn;\n  }\n  static get _documentDirty() {\n    return enqueued;\n  }\n  static findStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (!c._style) {\n        let style = c.querySelector('style');\n        if (!style) {\n          continue;\n        }\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        if (style.__appliedElement) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            style.__appliedElement.setAttribute(attr.name, attr.value);\n          }\n        }\n        c._style = style.__appliedElement || style;\n        if (hookFn) {\n          hookFn(c._style);\n        }\n        ShadyCSS._transformCustomStyleForDocument(c._style);\n      }\n    }\n  }\n  static _revalidateApplyShim() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._revalidateApplyShim(c._style);\n      }\n    }\n  }\n  static applyStyles() {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      if (c._style) {\n        ShadyCSS._applyCustomStyleToDocument(c._style);\n      }\n    }\n    enqueued = false;\n  }\n  constructor() {\n    super();\n    customStyles.push(this);\n    enqueueDocumentValidation();\n  }\n}\n\nwindow['CustomStyle'] = CustomStyle;\nwindow.customElements.define('custom-style', CustomStyle);","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      // If template is not supported, still resolve urls within it.\n      const content = template.content || template;\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @return {!Promise}\n     */\n    load(url) {\n      return new Promise((resolve, reject) => {\n        if (!url) {\n          reject({\n            resource: 'error: href must be specified'\n          });\n        } else if (url.match(/^data:/)) {\n          // Handle Data URI Scheme\n          const pieces = url.split(',');\n          const header = pieces[0];\n          let resource = pieces[1];\n          if (header.indexOf(';base64') > -1) {\n            resource = atob(resource);\n          } else {\n            resource = decodeURIComponent(resource);\n          }\n          resolve({\n            resource: resource\n          });\n        } else {\n          const request = new XMLHttpRequest();\n          request.open('GET', url, Xhr.async);\n          request.addEventListener('readystatechange', () => {\n            if (request.readyState === 4) {\n              // Servers redirecting an import can add a Location header to help us\n              // polyfill correctly.\n              let redirectedUrl = undefined;\n              try {\n                const locationHeader = request.getResponseHeader('Location');\n                if (locationHeader) {\n                  // Relative or full path.\n                  redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                    location.origin + locationHeader : locationHeader;\n                }\n              } catch (e) {\n                console.error(e.message);\n              }\n              const resp = {\n                resource: (request.response || request.responseText),\n                redirectedUrl: redirectedUrl\n              };\n              if (request.status === 304 || request.status === 0 ||\n                request.status >= 200 && request.status < 300) {\n                resolve(resp);\n              } else {\n                reject(resp);\n              }\n            }\n          });\n          request.send();\n        }\n      });\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n  const supportsUnhandledrejection = ('onunhandledrejection' in window);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        new MutationObserver(m => this.handleMutations(m)).observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.load();\n      });\n    }\n\n    /**\n     * Loads the resources needed by the import link and fires the load/error\n     * event on the node once finished. If link is not defined or null, loads\n     * all imports in the main document.\n     * @param {HTMLLinkElement=} link\n     * @return {Promise|undefined}\n     */\n    load(link) {\n      let whenLoadedPromise = link ? this.whenImportLoaded(link) :\n        this.whenImportsLoaded(document);\n      if (whenLoadedPromise) {\n        this.inflight++;\n        whenLoadedPromise = whenLoadedPromise.then(() => {\n          // Wait until all resources are ready, then load import resources.\n          if (--this.inflight === 0) {\n            return this.onLoadedAll();\n          }\n        });\n        // If browser doesn't support the unhandled rejection event,\n        // log the error stack and fire the error outside the promise so it's\n        // visible to listeners of window.onerror\n        if (!supportsUnhandledrejection) {\n          whenLoadedPromise = whenLoadedPromise.catch(err => {\n            console.error(err.stack);\n            setTimeout(() => {\n              throw err;\n            });\n            throw 'unhandledrejection';\n          });\n        }\n      }\n      return whenLoadedPromise;\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment)} doc\n     * @return {Promise|null}\n     */\n    whenImportsLoaded(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      const promises = [];\n      for (let i = 0, l = links.length; i < l; i++) {\n        const promise = this.whenImportLoaded(links[i]);\n        if (promise) {\n          promises.push(promise);\n        }\n      }\n      return promises.length ? Promise.all(promises).then(() => doc) : null;\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     * @return {Promise|null}\n     */\n    whenImportLoaded(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        return null;\n      }\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      return Xhr.load(url)\n        .then(resp => {\n          const doc = this.makeDocument(resp.resource, resp.redirectedUrl || url);\n          this.documents[url] = doc;\n          // Load subtree.\n          return this.whenImportsLoaded(doc);\n        }, () => this.documents[url] = null) // If load fails, handle error.\n        .then(() => link);\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      // This is specific to users of <dom-module> (Polymer).\n      // TODO(valdrin) remove this when Polymer uses importForElement.\n      const s$ = content.querySelectorAll('dom-module');\n      for (let i = 0, s; i < s$.length && (s = s$[i]); i++) {\n        s.setAttribute('assetpath',\n          Path.replaceAttrUrl(s.getAttribute('assetpath') || '', url));\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    /**\n     * Returns a promise resolved after the loaded imports finish loading scripts\n     * and styles, and fire the load/error events.\n     * @return {!Promise}\n     */\n    onLoadedAll() {\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      return Promise.all([this.waitForStyles(), this.runScripts()])\n        .then(() => this.fireEvents());\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @return {Promise} Resolved when scripts are loaded.\n     */\n    runScripts() {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      let promise = Promise.resolve();\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        promise = promise.then(() => {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          // Wait for load/error events; after is loaded, reset currentScript.\n          return whenElementLoaded(clone).then(() => currentScript = null);\n        });\n      }\n      return promise;\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @return {Promise}\n     */\n    waitForStyles() {\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = !!document.querySelector(disabledLinkSelector);\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      const promises = [];\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        promises.push(whenElementLoaded(s)\n          .then(() => s.removeAttribute(importDependencyAttr)));\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          let rootImport = importForElement(s);\n          while (rootImport && importForElement(rootImport)) {\n            rootImport = importForElement(rootImport);\n          }\n          // Replace the element we're about to move with a placeholder.\n          // NOTE: we first have to append the element to the new parent, then\n          // we can put the placeholder at its place, otherwise load/error events\n          // seem to be fired too early.\n          const parent = s.parentNode,\n            next = s.nextSibling,\n            placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // First, re-parent the element...\n          if (rootImport.parentNode === document.head) {\n            document.head.insertBefore(s, rootImport);\n          } else {\n            document.head.appendChild(s);\n          }\n          // ...and then, insert the placeholder at the right place.\n          parent.insertBefore(placeholder, next);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n      return Promise.all(promises);\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const link = m.addedNodes[ii];\n          if (!link || link.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          // TODO add test w/ script & stylesheet maybe\n          const imports = /** @type {!NodeList<!HTMLLinkElement>} */\n            (isImportLink(link) ? [link] : link.querySelectorAll(importSelector));\n          for (let iii = 0; iii < imports.length; iii++) {\n            const n = imports[iii];\n            const imp = this.documents[n.href];\n            // First time we see this import, load.\n            if (imp === undefined) {\n              this.load(n);\n            }\n            // If nothing else is loading, we can safely associate the import\n            // and fire the load/error event.\n            else if (!this.inflight) {\n              n.import = imp;\n              this.fireEventIfNeeded(n);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @return {Promise}\n   */\n  const whenElementLoaded = element => {\n    if (!element['__loadPromise']) {\n      element['__loadPromise'] = new Promise(resolve => {\n        // Inline scripts don't trigger load/error events, consider them already loaded.\n        if (element.localName === 'script' && !element.src) {\n          resolve();\n        } else if (isIE && element.localName === 'style') {\n          // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n          // <style> with @import will fire error events for each failing @import,\n          // and finally will trigger the load event when all @import are\n          // finished (even if all fail).\n          element.addEventListener('load', resolve);\n        } else {\n          element.addEventListener('load', resolve);\n          element.addEventListener('error', resolve);\n        }\n      }).then(() => {\n        element['__loaded'] = true;\n        return element;\n      });\n    }\n    return element['__loadPromise'];\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    const promises = [];\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      if (!imp['__loaded']) {\n        promises.push(whenElementLoaded(imp));\n      }\n    }\n    if (promises.length) {\n      // Execute callback outside the promise scope to avoid unhandled promise\n      // exceptions that don't depend on whenImportsReady.\n      let all = Promise.all(promises).then(callback);\n      if (!supportsUnhandledrejection) {\n        all.catch(err => {\n          console.error(err.stack);\n          setTimeout(() => {\n            throw err;\n          });\n          throw 'unhandledrejection';\n        });\n      }\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the link that imported the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      return element.ownerDocument;\n    }\n    let owner = element['__ownerImport'];\n    if (!owner) {\n      owner = element;\n      // Walk up the parent tree until we find an import.\n      while ((owner = owner.parentNode || owner.host) && !isImportLink(owner)) {}\n      element['__ownerImport'] = owner;\n    }\n    return owner;\n  }\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n","(function(){\n'use strict';var h=new function(){};var aa=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function k(b){var a=aa.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function l(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(window.ShadowRoot&&b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction m(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}\nfunction n(b,a,e){e=e?e:new Set;for(var c=b;c;){if(c.nodeType===Node.ELEMENT_NODE){var d=c;a(d);var f=d.localName;if(\"link\"===f&&\"import\"===d.getAttribute(\"rel\")){c=d.import;if(c instanceof Node&&!e.has(c))for(e.add(c),c=c.firstChild;c;c=c.nextSibling)n(c,a,e);c=m(b,d);continue}else if(\"template\"===f){c=m(b,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)n(d,a,e)}c=c.firstChild?c.firstChild:m(b,c)}}function q(b,a,e){b[a]=e};var t={custom:1,failed:2};function u(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1}function ba(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e)}function v(b,a){b.b=!0;b.c.push(a)}function w(b,a){b.b&&n(a,function(a){return x(b,a)})}function x(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a)}}function y(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];c.__CE_state===t.custom?b.connectedCallback(c):z(b,c)}}\nfunction A(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];c.__CE_state===t.custom&&b.disconnectedCallback(c)}}\nfunction B(b,a,e){e=e?e:new Set;var c=[];n(a,function(d){if(\"link\"===d.localName&&\"import\"===d.getAttribute(\"rel\")){var a=d.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):d.addEventListener(\"load\",function(){var a=d.import;a.__CE_documentLoadHandled||(a.__CE_documentLoadHandled=!0,a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0,new Set(e),e.delete(a),B(b,a,e))})}else c.push(d)},e);if(b.b)for(a=0;a<c.length;a++)x(b,c[a]);for(a=0;a<c.length;a++)z(b,\nc[a])}\nfunction z(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var c=e.constructor;try{try{if(new c!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop()}}catch(g){throw a.__CE_state=t.failed,g;}a.__CE_state=t.custom;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,c=0;c<e.length;c++){var d=e[c],f=a.getAttribute(d);null!==f&&b.attributeChangedCallback(a,d,\nnull,f,null)}l(a)&&b.connectedCallback(a)}}}u.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b)};u.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b)};u.prototype.attributeChangedCallback=function(b,a,e,c,d){var f=b.__CE_definition;f.attributeChangedCallback&&-1<f.observedAttributes.indexOf(a)&&f.attributeChangedCallback.call(b,a,e,c,d)};function C(b,a){this.c=b;this.a=a;this.b=void 0;B(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}))}function D(b){b.b&&b.b.disconnect()}C.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||D(this);for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,c=0;c<e.length;c++)B(this.c,e[c])};function ca(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a)})}function E(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0)};function F(b){this.f=!1;this.a=b;this.h=new Map;this.g=function(b){return b()};this.b=!1;this.c=[];this.j=new C(b,document)}\nF.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!k(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.f)throw Error(\"A custom element is already being defined.\");this.f=!0;var c,d,f,g,p;try{var r=function(b){var a=Q[b];if(void 0!==a&&!(a instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn a},Q=a.prototype;if(!(Q instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");c=r(\"connectedCallback\");d=r(\"disconnectedCallback\");f=r(\"adoptedCallback\");g=r(\"attributeChangedCallback\");p=a.observedAttributes||[]}catch(wa){return}finally{this.f=!1}ba(this.a,b,{localName:b,constructor:a,connectedCallback:c,disconnectedCallback:d,adoptedCallback:f,attributeChangedCallback:g,observedAttributes:p,constructionStack:[]});this.c.push(b);this.b||(this.b=\n!0,this.g(function(){if(!1!==e.b)for(e.b=!1,B(e.a,document);0<e.c.length;){var b=e.c.shift();(b=e.h.get(b))&&E(b)}}))};F.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};F.prototype.o=function(b){if(!k(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ca;this.h.set(b,a);this.a.a.get(b)&&-1===this.c.indexOf(b)&&E(a);return a.c};F.prototype.m=function(b){D(this.j);var a=this.g;this.g=function(e){return b(function(){return a(e)})}};\nwindow.CustomElementRegistry=F;F.prototype.define=F.prototype.l;F.prototype.get=F.prototype.get;F.prototype.whenDefined=F.prototype.o;F.prototype.polyfillWrapFlushCallback=F.prototype.m;var G=window.Document.prototype.createElement,da=window.Document.prototype.createElementNS,ea=window.Document.prototype.importNode,fa=window.Document.prototype.prepend,ga=window.Document.prototype.append,H=window.Node.prototype.cloneNode,I=window.Node.prototype.appendChild,J=window.Node.prototype.insertBefore,K=window.Node.prototype.removeChild,L=window.Node.prototype.replaceChild,M=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),N=window.Element.prototype.attachShadow,O=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),P=window.Element.prototype.getAttribute,R=window.Element.prototype.setAttribute,S=window.Element.prototype.removeAttribute,T=window.Element.prototype.getAttributeNS,U=window.Element.prototype.setAttributeNS,V=window.Element.prototype.removeAttributeNS,W=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,X=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\"),oa=window.HTMLElement.prototype.insertAdjacentElement;function pa(){var b=Y;window.HTMLElement=function(){function a(){var a=this.constructor,c=b.f.get(a);if(!c)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var d=c.constructionStack;if(!d.length)return d=G.call(document,c.localName),Object.setPrototypeOf(d,a.prototype),d.__CE_state=t.custom,d.__CE_definition=c,x(b,d),d;var c=d.length-1,f=d[c];if(f===h)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nd[c]=h;Object.setPrototypeOf(f,a.prototype);x(b,f);return f}a.prototype=na.prototype;return a}()};function qa(b,a,e){a.prepend=function(a){for(var d=[],f=0;f<arguments.length;++f)d[f-0]=arguments[f];f=d.filter(function(b){return b instanceof Node&&l(b)});e.i.apply(this,d);for(var g=0;g<f.length;g++)A(b,f[g]);if(l(this))for(f=0;f<d.length;f++)g=d[f],g instanceof Element&&y(b,g)};a.append=function(a){for(var d=[],f=0;f<arguments.length;++f)d[f-0]=arguments[f];f=d.filter(function(b){return b instanceof Node&&l(b)});e.append.apply(this,d);for(var g=0;g<f.length;g++)A(b,f[g]);if(l(this))for(f=0;f<\nd.length;f++)g=d[f],g instanceof Element&&y(b,g)}};function ra(){var b=Y;q(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=G.call(this,a);x(b,a);return a});q(Document.prototype,\"importNode\",function(a,e){a=ea.call(this,a,e);this.__CE_hasRegistry?B(b,a):w(b,a);return a});q(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var c=b.a.get(e);if(c)return new c.constructor}a=da.call(this,a,e);x(b,a);return a});\nqa(b,Document.prototype,{i:fa,append:ga})};function sa(){var b=Y;function a(a,c){Object.defineProperty(a,\"textContent\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)c.set.call(this,a);else{var e=void 0;if(this.firstChild){var g=this.childNodes,p=g.length;if(0<p&&l(this))for(var e=Array(p),r=0;r<p;r++)e[r]=g[r]}c.set.call(this,a);if(e)for(a=0;a<e.length;a++)A(b,e[a])}}})}q(Node.prototype,\"insertBefore\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);\na=J.call(this,a,c);if(l(this))for(c=0;c<d.length;c++)y(b,d[c]);return a}d=l(a);c=J.call(this,a,c);d&&A(b,a);l(this)&&y(b,a);return c});q(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=I.call(this,a);if(l(this))for(var d=0;d<c.length;d++)y(b,c[d]);return a}c=l(a);d=I.call(this,a);c&&A(b,a);l(this)&&y(b,a);return d});q(Node.prototype,\"cloneNode\",function(a){a=H.call(this,a);this.ownerDocument.__CE_hasRegistry?B(b,a):w(b,a);\nreturn a});q(Node.prototype,\"removeChild\",function(a){var c=l(a),d=K.call(this,a);c&&A(b,a);return d});q(Node.prototype,\"replaceChild\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=L.call(this,a,c);if(l(this))for(A(b,c),c=0;c<d.length;c++)y(b,d[c]);return a}var d=l(a),f=L.call(this,a,c),g=l(this);g&&A(b,c);d&&A(b,a);g&&y(b,a);return f});M&&M.get?a(Node.prototype,M):v(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)K.call(this,this.firstChild);I.call(this,document.createTextNode(a))}})})};function ta(b){var a=Element.prototype;a.before=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ja.apply(this,c);for(var f=0;f<d.length;f++)A(b,d[f]);if(l(this))for(d=0;d<c.length;d++)f=c[d],f instanceof Element&&y(b,f)};a.after=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ka.apply(this,c);for(var f=0;f<d.length;f++)A(b,d[f]);if(l(this))for(d=\n0;d<c.length;d++)f=c[d],f instanceof Element&&y(b,f)};a.replaceWith=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];var d=c.filter(function(a){return a instanceof Node&&l(a)}),f=l(this);la.apply(this,c);for(var g=0;g<d.length;g++)A(b,d[g]);if(f)for(A(b,this),d=0;d<c.length;d++)f=c[d],f instanceof Element&&y(b,f)};a.remove=function(){var a=l(this);ma.call(this);a&&A(b,this)}};function ua(){var b=Y;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=Array.prototype.slice.apply(this.childNodes);c.set.call(this,a);if(l(this))for(var e=0;e<d.length;e++)A(b,d[e]);this.ownerDocument.__CE_hasRegistry?B(b,this):w(b,this);return a}})}function e(a,c){q(a,\"insertAdjacentElement\",function(a,d){var e=l(d);a=c.call(this,a,d);e&&A(b,d);l(a)&&y(b,d);return a})}N?q(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=\na=N.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(O&&O.get)a(Element.prototype,O);else if(X&&X.get)a(HTMLElement.prototype,X);else{var c=G.call(document,\"div\");v(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return H.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(c.innerHTML=a;0<b.childNodes.length;)K.call(b,b.childNodes[0]);for(;0<c.childNodes.length;)I.call(b,c.childNodes[0])}})})}q(Element.prototype,\n\"setAttribute\",function(a,c){if(this.__CE_state!==t.custom)return R.call(this,a,c);var e=P.call(this,a);R.call(this,a,c);c=P.call(this,a);e!==c&&b.attributeChangedCallback(this,a,e,c,null)});q(Element.prototype,\"setAttributeNS\",function(a,c,e){if(this.__CE_state!==t.custom)return U.call(this,a,c,e);var p=T.call(this,a,c);U.call(this,a,c,e);e=T.call(this,a,c);p!==e&&b.attributeChangedCallback(this,c,p,e,a)});q(Element.prototype,\"removeAttribute\",function(a){if(this.__CE_state!==t.custom)return S.call(this,\na);var c=P.call(this,a);S.call(this,a);null!==c&&b.attributeChangedCallback(this,a,c,null,null)});q(Element.prototype,\"removeAttributeNS\",function(a,c){if(this.__CE_state!==t.custom)return V.call(this,a,c);var e=T.call(this,a,c);V.call(this,a,c);var p=T.call(this,a,c);e!==p&&b.attributeChangedCallback(this,c,e,p,a)});oa?e(HTMLElement.prototype,oa):W?e(Element.prototype,W):console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");qa(b,Element.prototype,{i:ha,append:ia});ta(b)}\n;/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var Y=new u;pa();ra();sa();ua();document.__CE_hasRegistry=!0;var va=new F(Y);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:va})};\n}).call(self);\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    // note: fallback to childNodes to support recursing into SVG which\n    // does not support children in some browsers (Edge/IE)\n    let c$ = root.children || root.childNodes;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        runAndClearCallback();\n        cb();\n      });\n    }\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}