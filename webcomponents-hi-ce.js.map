{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/shadycss/src/apply-shim-utils.js","bower_components/shadycss/src/document-wait.js","bower_components/shadycss/src/common-utils.js","bower_components/html-imports/src/html-imports.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/common-regex.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/custom-style-interface.js","bower_components/shadycss/src/scoping-shim.js","bower_components/shadycss/src/style-cache.js","bower_components/shadycss/entrypoints/scoping-shim.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","StyleNode","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","indexOf","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","rules","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","nativeShadow","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","start","level","processVariableAndFallback","str","end","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","is","getAttribute","localName","extendz","extends","addToBitMask","bits","o","parseInt","invalidate","elementName","template","templateMap","invalidateTemplate","templateIsValid","templateIsValidating","_validating","startValidatingTemplate","promise","then","documentWait","whenReady","readyPromise","Promise","resolve","resolveFn","readyState","addEventListener","updateNativeProperties","properties","removeProperty","setProperty","useNative","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","replaceAttrUrl","src","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","querySelectorAll","fixUrlsInTemplate","content","n$","linkUrl","replaceUrls","regexp","m","pre","url","post","urlPath","resolveUrl","test","__workingURL","u","URL","pathname","e","doc","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","success","fail","pieces","header","resource","atob","decodeURIComponent","request","XMLHttpRequest","open","onload","redirectedUrl","getResponseHeader","origin","location","protocol","host","response","responseText","status","send","isIE","navigator","userAgent","importSelector","importDisableType","disabledLinkSelector","importDependenciesSelector","importDependencyAttr","rootImportSelector","pendingScriptsSelector","pendingStylesSelector","isImportLink","nodeType","Node","ELEMENT_NODE","rel","whenElementLoaded","onLoadingDone","event","removeEventListener","whenDocumentReady","whenImportsReady","stateChanged","imports","pending","imp","importForElement","ownerDocument","parentNode","closest","newCustomEvent","params","CustomEvent","createEvent","initCustomEvent","bubbles","cancelable","detail","imps","import","elem","constructor","documents","inflight","dynamicImportsMO","MutationObserver","handleMutations","observe","childList","subtree","loadImports","links","loadImport","link","fireEventIfNeeded","makeDocument","processImportsIfLoadingDone","createDocumentFragment","p1","p2","innerHTML","baseEl","querySelector","removeAttribute","inlineScriptIndex","num","encodeURIComponent","disconnect","flatten","scriptsOk","stylesOk","fireEvents","waitForStyles","runScripts","DOCUMENT_FRAGMENT_NODE","enumerable","s$","cloneScript","clone","j","ll","name","replaceChild","needsMove","placeholder","newSibling","eventType","dispatchEvent","mutations","addedNodes","ii","HTMLImports","k","b","aa","has","isConnected","__CE_isImportDocument","Document","ShadowRoot","Set","c","d","h","add","__CE_shadowRoot","q","Map","f","ba","set","w","__CE_patched","x","__CE_state","connectedCallback","y","z","disconnectedCallback","A","__CE_hasRegistry","__CE_documentLoadHandled","delete","constructionStack","Error","__CE_definition","attributeChangedCallback","observedAttributes","B","bind","C","ca","D","E","g","oa","Y","HTMLElement","F","setPrototypeOf","prototype","na","pa","prepend","filter","apply","Element","append","qa","ea","da","fa","ga","ra","TEXT_NODE","childNodes","Array","DocumentFragment","slice","I","H","G","J","K","L","join","createTextNode","sa","before","ja","ka","replaceWith","la","remove","ma","ta","M","console","warn","N","W","Q","O","T","S","R","U","X","V","ha","ia","Function","TypeError","SyntaxError","P","va","adoptedCallback","shift","reject","CustomElementRegistry","define","whenDefined","polyfillWrapFlushCallback","createElementNS","importNode","cloneNode","removeChild","getOwnPropertyDescriptor","attachShadow","getAttributeNS","setAttributeNS","removeAttributeNS","insertAdjacentElement","Z","customElements","forcePolyfill","ua","self","CSS","supports","ShadyCSS","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","BRACKETED","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","_transformDom","selector","c$","_content","children","classList","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","StyleUtil.toCssText","ex","StyleUtil.getIsExtends","css","ext","hostScope","_calcHostScope","_calcElementScope","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","infoKey","StyleInfo","styleInfo","ast","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","_getStyleRules","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","hasProperties","collectProperties","collectCssText","any","RX.VAR_ASSIGN","exec","assign","collectConsumingCssText","RX.BRACKETED","RX.VAR_CONSUMED","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","RX.MIXIN_MATCH","lastIndex","colon","pp","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","RX.ANIMATION_MATCH","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isExtends","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","RX.HOST_PREFIX","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","StyleUtil.applyCss","shadowRoot","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","ce","origDefine","clazz","options","flush","elementNeedsScoping","contains","hasAttribute","handler","mxns","mxn","documentElement","getRootNode","removedNodes","classes","from","classIdx","observer","nativeCustomElements","delayedStart","body","requestAnimationFrame","listener","takeRecords","PROCESSED_MARKER","SEEN_MARKER","transformFn","validateFn","CustomStyleInterface","enqueueDocumentValidation","addCustomStyle","getStyleForCustomStyle","findStyles","cs","appliedStyle","attr","defineProperties","fn","needsEnqueue","styleCache","typeMax","cache","_validate","cacheEntry","ownPropertyNames","pn","idx","store","tagname","styleElement","list","fetch","entry","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","_applyShim","_customStyleInterface","_ensure","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","prepareTemplate","_prepared","__cssBuild","hasMixins","_styleAst","_cssBuild","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_ensureApplyShim","ApplyShim","ApplyShimUtils.invalidate","_ensureCustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","overrideProps","_isRootOwner","_applyStyleProperties","ApplyShimUtils.templateIsValid","ApplyShimUtils.templateIsValidating","ApplyShimUtils.startValidatingTemplate","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","ownerProperties","create","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","styleSubtree","shadowChildren","_revalidateApplyShim","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","scopingShim","elementExtends","nativeCss","runAndClearCallback","flushCallback","cb","origWhenReady","WebComponents"],"mappings":"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","file":"webcomponents-hi-ce.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      // If template is not supported, still resolve urls within it.\n      const content = template.content || template;\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        this.dynamicImportsMO.observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n        this.processImportsIfLoadingDone();\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      };\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          // Override baseURI so that link.import.baseURI can be used seemlessly\n          // on native or polyfilled html-imports.\n          Object.defineProperty(n, 'baseURI', {\n            get: () => n.href,\n            configurable: true,\n            enumerable: true\n          });\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const elem = m.addedNodes[ii];\n          if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          if (isImportLink(elem)) {\n            this.loadImport( /** @type {!HTMLLinkElement} */ (elem));\n          } else {\n            this.loadImports( /** @type {!Element} */ (elem));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  };\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  };\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      };\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  };\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  };\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  };\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n(function(){\n'use strict';var g=new function(){};var aa=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function k(b){var a=aa.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function l(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(window.ShadowRoot&&b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction m(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}\nfunction n(b,a,e){e=e?e:new Set;for(var c=b;c;){if(c.nodeType===Node.ELEMENT_NODE){var d=c;a(d);var h=d.localName;if(\"link\"===h&&\"import\"===d.getAttribute(\"rel\")){c=d.import;if(c instanceof Node&&!e.has(c))for(e.add(c),c=c.firstChild;c;c=c.nextSibling)n(c,a,e);c=m(b,d);continue}else if(\"template\"===h){c=m(b,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)n(d,a,e);}c=c.firstChild?c.firstChild:m(b,c);}}function q(b,a,e){b[a]=e;}function r(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1;}function ba(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e);}function t(b,a){b.b=!0;b.c.push(a);}function v(b,a){b.b&&n(a,function(a){return w(b,a)});}function w(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a);}}function x(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state?b.connectedCallback(c):y(b,c);}}\nfunction z(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state&&b.disconnectedCallback(c);}}\nfunction A(b,a,e){e=e?e:new Set;var c=[];n(a,function(d){if(\"link\"===d.localName&&\"import\"===d.getAttribute(\"rel\")){var a=d.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):d.addEventListener(\"load\",function(){var a=d.import;a.__CE_documentLoadHandled||(a.__CE_documentLoadHandled=!0,a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0,new Set(e),e.delete(a),A(b,a,e));});}else c.push(d);},e);if(b.b)for(a=0;a<c.length;a++)w(b,c[a]);for(a=0;a<c.length;a++)y(b,\nc[a]);}\nfunction y(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var c=e.constructor;try{try{if(new c!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop();}}catch(f){throw a.__CE_state=2,f;}a.__CE_state=1;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,c=0;c<e.length;c++){var d=e[c],h=a.getAttribute(d);null!==h&&b.attributeChangedCallback(a,d,null,h,null);}l(a)&&b.connectedCallback(a);}}}\nr.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b);};r.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b);};r.prototype.attributeChangedCallback=function(b,a,e,c,d){var h=b.__CE_definition;h.attributeChangedCallback&&-1<h.observedAttributes.indexOf(a)&&h.attributeChangedCallback.call(b,a,e,c,d);};function B(b,a){this.c=b;this.a=a;this.b=void 0;A(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}));}function C(b){b.b&&b.b.disconnect();}B.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||C(this);for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,c=0;c<e.length;c++)A(this.c,e[c]);};function ca(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a);});}function D(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0);}function E(b){this.f=!1;this.a=b;this.h=new Map;this.g=function(b){return b()};this.b=!1;this.c=[];this.j=new B(b,document);}\nE.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!k(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.f)throw Error(\"A custom element is already being defined.\");this.f=!0;var c,d,h,f,u;try{var p=function(b){var a=P[b];if(void 0!==a&&!(a instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn a},P=a.prototype;if(!(P instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");c=p(\"connectedCallback\");d=p(\"disconnectedCallback\");h=p(\"adoptedCallback\");f=p(\"attributeChangedCallback\");u=a.observedAttributes||[];}catch(va){return}finally{this.f=!1;}ba(this.a,b,{localName:b,constructor:a,connectedCallback:c,disconnectedCallback:d,adoptedCallback:h,attributeChangedCallback:f,observedAttributes:u,constructionStack:[]});this.c.push(b);this.b||(this.b=\n!0,this.g(function(){if(!1!==e.b)for(e.b=!1,A(e.a,document);0<e.c.length;){var b=e.c.shift();(b=e.h.get(b))&&D(b);}}));};E.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};E.prototype.o=function(b){if(!k(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ca;this.h.set(b,a);this.a.a.get(b)&&-1===this.c.indexOf(b)&&D(a);return a.c};E.prototype.m=function(b){C(this.j);var a=this.g;this.g=function(e){return b(function(){return a(e)})};};\nwindow.CustomElementRegistry=E;E.prototype.define=E.prototype.l;E.prototype.get=E.prototype.get;E.prototype.whenDefined=E.prototype.o;E.prototype.polyfillWrapFlushCallback=E.prototype.m;var F=window.Document.prototype.createElement,da=window.Document.prototype.createElementNS,ea=window.Document.prototype.importNode,fa=window.Document.prototype.prepend,ga=window.Document.prototype.append,G=window.Node.prototype.cloneNode,H=window.Node.prototype.appendChild,I=window.Node.prototype.insertBefore,J=window.Node.prototype.removeChild,K=window.Node.prototype.replaceChild,L=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),M=window.Element.prototype.attachShadow,N=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),O=window.Element.prototype.getAttribute,Q=window.Element.prototype.setAttribute,R=window.Element.prototype.removeAttribute,S=window.Element.prototype.getAttributeNS,T=window.Element.prototype.setAttributeNS,U=window.Element.prototype.removeAttributeNS,V=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,W=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\"),X=window.HTMLElement.prototype.insertAdjacentElement;function oa(){var b=Y;window.HTMLElement=function(){function a(){var a=this.constructor,c=b.f.get(a);if(!c)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var d=c.constructionStack;if(!d.length)return d=F.call(document,c.localName),Object.setPrototypeOf(d,a.prototype),d.__CE_state=1,d.__CE_definition=c,w(b,d),d;var c=d.length-1,h=d[c];if(h===g)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nd[c]=g;Object.setPrototypeOf(h,a.prototype);w(b,h);return h}a.prototype=na.prototype;return a}();}function pa(b,a,e){a.prepend=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.i.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<d.length;c++)f=d[c],f instanceof Element&&x(b,f);};a.append=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.append.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<\nd.length;c++)f=d[c],f instanceof Element&&x(b,f);};}function qa(){var b=Y;q(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=F.call(this,a);w(b,a);return a});q(Document.prototype,\"importNode\",function(a,e){a=ea.call(this,a,e);this.__CE_hasRegistry?A(b,a):v(b,a);return a});q(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var c=b.a.get(e);if(c)return new c.constructor}a=da.call(this,a,e);w(b,a);return a});\npa(b,Document.prototype,{i:fa,append:ga});}function ra(){var b=Y;function a(a,c){Object.defineProperty(a,\"textContent\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)c.set.call(this,a);else{var d=void 0;if(this.firstChild){var e=this.childNodes,u=e.length;if(0<u&&l(this))for(var d=Array(u),p=0;p<u;p++)d[p]=e[p];}c.set.call(this,a);if(d)for(a=0;a<d.length;a++)z(b,d[a]);}}});}q(Node.prototype,\"insertBefore\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);\na=I.call(this,a,c);if(l(this))for(c=0;c<d.length;c++)x(b,d[c]);return a}d=l(a);c=I.call(this,a,c);d&&z(b,a);l(this)&&x(b,a);return c});q(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=H.call(this,a);if(l(this))for(var d=0;d<c.length;d++)x(b,c[d]);return a}c=l(a);d=H.call(this,a);c&&z(b,a);l(this)&&x(b,a);return d});q(Node.prototype,\"cloneNode\",function(a){a=G.call(this,a);this.ownerDocument.__CE_hasRegistry?A(b,a):v(b,a);\nreturn a});q(Node.prototype,\"removeChild\",function(a){var c=l(a),d=J.call(this,a);c&&z(b,a);return d});q(Node.prototype,\"replaceChild\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=K.call(this,a,c);if(l(this))for(z(b,c),c=0;c<d.length;c++)x(b,d[c]);return a}var d=l(a),e=K.call(this,a,c),f=l(this);f&&z(b,c);d&&z(b,a);f&&x(b,a);return e});L&&L.get?a(Node.prototype,L):t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)J.call(this,this.firstChild);H.call(this,document.createTextNode(a));}});});}function sa(b){var a=Element.prototype;a.before=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ja.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e);};a.after=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ka.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=\n0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e);};a.replaceWith=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];var d=c.filter(function(a){return a instanceof Node&&l(a)}),e=l(this);la.apply(this,c);for(var f=0;f<d.length;f++)z(b,d[f]);if(e)for(z(b,this),d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e);};a.remove=function(){var a=l(this);ma.call(this);a&&z(b,this);};}function ta(){var b=Y;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=this,e=void 0;l(this)&&(e=[],n(this,function(a){a!==d&&e.push(a);}));c.set.call(this,a);if(e)for(var f=0;f<e.length;f++){var h=e[f];1===h.__CE_state&&b.disconnectedCallback(h);}this.ownerDocument.__CE_hasRegistry?A(b,this):v(b,this);return a}});}function e(a,c){q(a,\"insertAdjacentElement\",function(a,d){var e=l(d);a=c.call(this,a,d);e&&z(b,d);l(a)&&x(b,d);\nreturn a});}M?q(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=a=M.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(N&&N.get)a(Element.prototype,N);else if(W&&W.get)a(HTMLElement.prototype,W);else{var c=F.call(document,\"div\");t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return G.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(c.innerHTML=a;0<b.childNodes.length;)J.call(b,\nb.childNodes[0]);for(;0<c.childNodes.length;)H.call(b,c.childNodes[0]);}});});}q(Element.prototype,\"setAttribute\",function(a,c){if(1!==this.__CE_state)return Q.call(this,a,c);var d=O.call(this,a);Q.call(this,a,c);c=O.call(this,a);d!==c&&b.attributeChangedCallback(this,a,d,c,null);});q(Element.prototype,\"setAttributeNS\",function(a,c,e){if(1!==this.__CE_state)return T.call(this,a,c,e);var d=S.call(this,a,c);T.call(this,a,c,e);e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a);});q(Element.prototype,\n\"removeAttribute\",function(a){if(1!==this.__CE_state)return R.call(this,a);var c=O.call(this,a);R.call(this,a);null!==c&&b.attributeChangedCallback(this,a,c,null,null);});q(Element.prototype,\"removeAttributeNS\",function(a,c){if(1!==this.__CE_state)return U.call(this,a,c);var d=S.call(this,a,c);U.call(this,a,c);var e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a);});X?e(HTMLElement.prototype,X):V?e(Element.prototype,V):console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\npa(b,Element.prototype,{i:ha,append:ia});sa(b);}/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var Y=new r;oa();qa();ra();ta();document.__CE_hasRegistry=!0;var ua=new E(Y);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:ua});}\n}).call(self);\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length;\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nfunction stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nconst types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n/**\n * @param {ShadyCSSOptions | ShadyCSSInterface | undefined} settings\n */\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings['nativeCss'] && !settings['shimcssproperties'];\n  nativeShadow = nativeShadow && !settings['nativeShadow'] && !settings['shimshadow'];\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window['WebComponents']) {\n  parseSettings(window['WebComponents']['flags']);\n}\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi;\nconst MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nconst VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nconst ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nconst MEDIA_MATCH = /@media[^(]*(\\([^)]*\\))/;\n\nconst BRACKETED = /\\{[^}]*\\}/g;\nconst HOST_PREFIX = '(?:^|[^.#[:])';\nconst HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n */\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nfunction rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'];\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nfunction isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\n/**\n * @param {Node} style\n * @param {?Node} target\n * @param {?Node} contextNode\n * @return {HTMLStyleElement}\n */\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return /** @type {HTMLStyleElement} */(target.insertBefore(style, after));\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {Element}\n */\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/** @type {Node} */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {Node}\n */\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\n\n\n/**\n * @param {Element} element\n * @return {?string}\n */\n\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window['ShadyDOM']) {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\n/**\n * @param {Element|Object} element\n * @return {{is: string, extends: string}}\n */\nfunction getIsExtends(element) {\n  let is = element.is || (element.getAttribute && element.getAttribute('is')) || element.localName;\n  let extendz = element.extends || element.localName !== is ? element.localName : '';\n  return {is, extends: extendz};\n}\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = toCssText(styleRules, callback);\n    } else {\n      let {is, extends: ex} = getIsExtends(element);\n      cssText = this.css(styleRules, is, ex, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nclass StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(BRACKETED, '')\n      .replace(VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        MIXIN_MATCH.lastIndex = 0;\n        m = MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let isExtends = getIsExtends(scope);\n    let hostScope = scope.is ?\n      StyleTransformer$1._calcHostScope(isExtends.is, isExtends.extends) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(isExtends.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let isExtends = getIsExtends(element);\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(isExtends.is, isExtends.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(HOST_PREFIX + rxHostSelector +\n      HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  ce['define'] = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof window['SVGElement'] && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = /** @type {ShadowRoot} */(root).host;\n            if (host) {\n              let {is: scope} = getIsExtends(host);\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = /** @type {HTMLElement} */(mxn.removedNodes[i]);\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window['customElements']['flush']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nfunction invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nfunction invalidateTemplate(template) {\n  template['_applyShimInvalid'] = true;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\n\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nfunction templateIsValid(template) {\n  return !template['_applyShimInvalid'];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\n\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nfunction templateIsValidating(template) {\n  return template._validating;\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\n\n\n/**\n * @param {HTMLTemplateElement} template\n */\nfunction startValidatingTemplate(template) {\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      template['_applyShimInvalid'] = false;\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nfunction documentWait(callback) {\n  if (whenReady) {\n    whenReady(callback);\n  } else {\n    if (!readyPromise) {\n      readyPromise = new Promise((resolve) => {resolveFn = resolve;});\n      if (document.readyState === 'complete') {\n        resolveFn();\n      } else {\n        document.addEventListener('readystatechange', () => {\n          if (document.readyState === 'complete') {\n            resolveFn();\n          }\n        });\n      }\n    }\n    readyPromise.then(function(){ callback && callback(); });\n  }\n}\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nfunction updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @typedef {HTMLStyleElement | ({getStyle: (function():HTMLStyleElement)})}\n */\n\n\nconst PROCESSED_MARKER = '__processedByShadyCSS';\nconst SEEN_MARKER = '__seenByShadyCSS';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nclass CustomStyleInterface$1 {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  findStyles() {\n    let cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      let customStyle = cs[i];\n      if (customStyle[PROCESSED_MARKER]) {\n        continue;\n      }\n      let style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        customStyle[PROCESSED_MARKER] = true;\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        let appliedStyle = /** @type {HTMLStyleElement} */(style['__appliedElement']);\n        if (appliedStyle) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            appliedStyle.setAttribute(attr.name, attr.value);\n          }\n        }\n        if (transformFn) {\n          transformFn(appliedStyle || style);\n        }\n      }\n    }\n  }\n}\n\nCustomStyleInterface$1.prototype['addCustomStyle'] = CustomStyleInterface$1.prototype.addCustomStyle;\nCustomStyleInterface$1.prototype['getStyleForCustomStyle'] = CustomStyleInterface$1.prototype.getStyleForCustomStyle;\nCustomStyleInterface$1.prototype['findStyles'] = CustomStyleInterface$1.prototype.findStyles;\n\nObject.defineProperties(CustomStyleInterface$1.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n});\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nclass ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = this._applyShim['detectMixin'](cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template._styleAst = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, extends: typeExtension} = getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = invalidate;\n    } else {\n      this._applyShim = {\n        /* eslint-disable no-unused-vars */\n        ['detectMixin'](str){return false},\n        ['transformRule'](ast){},\n        ['transformRules'](ast, name){},\n        /* eslint-enable no-unused-vars */\n      };\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style);};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        });\n      };\n    } else {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */({\n        ['findStyles']() {},\n        ['enqueued']: false,\n        ['getStyleForCustomStyle'](s) { return null } // eslint-disable-line no-unused-vars\n      });\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    this._customStyleInterface['findStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['customStyles'];\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !templateIsValid(template)) {\n        // update template\n        if (!templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim['transformRules'](template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    if (host.shadowRoot || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `root`\n    let root = host.shadowRoot;\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    }\n    // process the lightdom children of `root`\n    let children = host.children || host.childNodes;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        let c = /** @type {!HTMLElement} */(children[i]);\n        this.styleSubtree(c);\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties$1.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables) {\n      let ast = rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim;\nlet CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n        return true;\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        // custom element code may add dynamic imports\n        // to match processing of native custom elements before\n        // domContentLoaded, we wait for these imports to resolve first.\n        if (runAndClearCallback()) {\n          HTMLImports.whenReady(cb);\n        } else {\n          cb();\n        }\n      });\n    };\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * Polyfills loaded: HTML Imports, Custom Elements\n * Used in: Safari 10, Firefox once SD is shipped\n */\n\n// TODO(notwaldorf): Remove after this is addressed:\n// https://github.com/webcomponents/shadycss/issues/46\n\n}());\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n/**\n * @param {ShadyCSSOptions | ShadyCSSInterface | undefined} settings\n */\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings['nativeCss'] && !settings['shimcssproperties'];\n  nativeShadow = nativeShadow && !settings['nativeShadow'] && !settings['shimshadow'];\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window['WebComponents']) {\n  parseSettings(window['WebComponents']['flags']);\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types, StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n */\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'];\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\n/**\n * @param {Node} style\n * @param {?Node} target\n * @param {?Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return /** @type {HTMLStyleElement} */(target.insertBefore(style, after));\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {Element}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/** @type {Node} */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {Node}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window['ShadyDOM']) {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\n/**\n * @param {Element|Object} element\n * @return {{is: string, extends: string}}\n */\nexport function getIsExtends(element) {\n  let is = element.is || (element.getAttribute && element.getAttribute('is')) || element.localName;\n  let extendz = element.extends || element.localName !== is ? element.localName : '';\n  return {is, extends: extendz};\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport * as RX from './common-regex'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\n/**\n * @const {function(string):boolean}\n */\nconst matchesSelector = ((p) => p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\np.oMatchesSelector || p.webkitMatchesSelector)(window.Element.prototype);\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let isExtends = StyleUtil.getIsExtends(scope);\n    let hostScope = scope.is ?\n      StyleTransformer._calcHostScope(isExtends.is, isExtends.extends) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(isExtends.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let isExtends = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(isExtends.is, isExtends.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule['keyframesName'], 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map'\nimport {StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  template['_applyShimInvalid'] = true;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return !template['_applyShimInvalid'];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return template._validating;\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      template['_applyShimInvalid'] = false;\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  if (whenReady) {\n    whenReady(callback)\n  } else {\n    if (!readyPromise) {\n      readyPromise = new Promise((resolve) => {resolveFn = resolve});\n      if (document.readyState === 'complete') {\n        resolveFn();\n      } else {\n        document.addEventListener('readystatechange', () => {\n          if (document.readyState === 'complete') {\n            resolveFn();\n          }\n        });\n      }\n    }\n    readyPromise.then(function(){ callback && callback(); });\n  }\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  return window.getComputedStyle(element).getPropertyValue(property).trim();\n}","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      // If template is not supported, still resolve urls within it.\n      const content = template.content || template;\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        this.dynamicImportsMO.observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n        this.processImportsIfLoadingDone();\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      }\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          // Override baseURI so that link.import.baseURI can be used seemlessly\n          // on native or polyfilled html-imports.\n          Object.defineProperty(n, 'baseURI', {\n            get: () => n.href,\n            configurable: true,\n            enumerable: true\n          });\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const elem = m.addedNodes[ii];\n          if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          if (isImportLink(elem)) {\n            this.loadImport( /** @type {!HTMLLinkElement} */ (elem));\n          } else {\n            this.loadImports( /** @type {!Element} */ (elem));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  }\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));","(function(){\n'use strict';var g=new function(){};var aa=new Set(\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \"));function k(b){var a=aa.has(b);b=/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(b);return!a&&b}function l(b){var a=b.isConnected;if(void 0!==a)return a;for(;b&&!(b.__CE_isImportDocument||b instanceof Document);)b=b.parentNode||(window.ShadowRoot&&b instanceof ShadowRoot?b.host:void 0);return!(!b||!(b.__CE_isImportDocument||b instanceof Document))}\nfunction m(b,a){for(;a&&a!==b&&!a.nextSibling;)a=a.parentNode;return a&&a!==b?a.nextSibling:null}\nfunction n(b,a,e){e=e?e:new Set;for(var c=b;c;){if(c.nodeType===Node.ELEMENT_NODE){var d=c;a(d);var h=d.localName;if(\"link\"===h&&\"import\"===d.getAttribute(\"rel\")){c=d.import;if(c instanceof Node&&!e.has(c))for(e.add(c),c=c.firstChild;c;c=c.nextSibling)n(c,a,e);c=m(b,d);continue}else if(\"template\"===h){c=m(b,d);continue}if(d=d.__CE_shadowRoot)for(d=d.firstChild;d;d=d.nextSibling)n(d,a,e)}c=c.firstChild?c.firstChild:m(b,c)}}function q(b,a,e){b[a]=e};function r(){this.a=new Map;this.f=new Map;this.c=[];this.b=!1}function ba(b,a,e){b.a.set(a,e);b.f.set(e.constructor,e)}function t(b,a){b.b=!0;b.c.push(a)}function v(b,a){b.b&&n(a,function(a){return w(b,a)})}function w(b,a){if(b.b&&!a.__CE_patched){a.__CE_patched=!0;for(var e=0;e<b.c.length;e++)b.c[e](a)}}function x(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state?b.connectedCallback(c):y(b,c)}}\nfunction z(b,a){var e=[];n(a,function(b){return e.push(b)});for(a=0;a<e.length;a++){var c=e[a];1===c.__CE_state&&b.disconnectedCallback(c)}}\nfunction A(b,a,e){e=e?e:new Set;var c=[];n(a,function(d){if(\"link\"===d.localName&&\"import\"===d.getAttribute(\"rel\")){var a=d.import;a instanceof Node&&\"complete\"===a.readyState?(a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0):d.addEventListener(\"load\",function(){var a=d.import;a.__CE_documentLoadHandled||(a.__CE_documentLoadHandled=!0,a.__CE_isImportDocument=!0,a.__CE_hasRegistry=!0,new Set(e),e.delete(a),A(b,a,e))})}else c.push(d)},e);if(b.b)for(a=0;a<c.length;a++)w(b,c[a]);for(a=0;a<c.length;a++)y(b,\nc[a])}\nfunction y(b,a){if(void 0===a.__CE_state){var e=b.a.get(a.localName);if(e){e.constructionStack.push(a);var c=e.constructor;try{try{if(new c!==a)throw Error(\"The custom element constructor did not produce the element being upgraded.\");}finally{e.constructionStack.pop()}}catch(f){throw a.__CE_state=2,f;}a.__CE_state=1;a.__CE_definition=e;if(e.attributeChangedCallback)for(e=e.observedAttributes,c=0;c<e.length;c++){var d=e[c],h=a.getAttribute(d);null!==h&&b.attributeChangedCallback(a,d,null,h,null)}l(a)&&b.connectedCallback(a)}}}\nr.prototype.connectedCallback=function(b){var a=b.__CE_definition;a.connectedCallback&&a.connectedCallback.call(b)};r.prototype.disconnectedCallback=function(b){var a=b.__CE_definition;a.disconnectedCallback&&a.disconnectedCallback.call(b)};r.prototype.attributeChangedCallback=function(b,a,e,c,d){var h=b.__CE_definition;h.attributeChangedCallback&&-1<h.observedAttributes.indexOf(a)&&h.attributeChangedCallback.call(b,a,e,c,d)};function B(b,a){this.c=b;this.a=a;this.b=void 0;A(this.c,this.a);\"loading\"===this.a.readyState&&(this.b=new MutationObserver(this.f.bind(this)),this.b.observe(this.a,{childList:!0,subtree:!0}))}function C(b){b.b&&b.b.disconnect()}B.prototype.f=function(b){var a=this.a.readyState;\"interactive\"!==a&&\"complete\"!==a||C(this);for(a=0;a<b.length;a++)for(var e=b[a].addedNodes,c=0;c<e.length;c++)A(this.c,e[c])};function ca(){var b=this;this.b=this.a=void 0;this.c=new Promise(function(a){b.b=a;b.a&&a(b.a)})}function D(b){if(b.a)throw Error(\"Already resolved.\");b.a=void 0;b.b&&b.b(void 0)};function E(b){this.f=!1;this.a=b;this.h=new Map;this.g=function(b){return b()};this.b=!1;this.c=[];this.j=new B(b,document)}\nE.prototype.l=function(b,a){var e=this;if(!(a instanceof Function))throw new TypeError(\"Custom element constructors must be functions.\");if(!k(b))throw new SyntaxError(\"The element name '\"+b+\"' is not valid.\");if(this.a.a.get(b))throw Error(\"A custom element with name '\"+b+\"' has already been defined.\");if(this.f)throw Error(\"A custom element is already being defined.\");this.f=!0;var c,d,h,f,u;try{var p=function(b){var a=P[b];if(void 0!==a&&!(a instanceof Function))throw Error(\"The '\"+b+\"' callback must be a function.\");\nreturn a},P=a.prototype;if(!(P instanceof Object))throw new TypeError(\"The custom element constructor's prototype is not an object.\");c=p(\"connectedCallback\");d=p(\"disconnectedCallback\");h=p(\"adoptedCallback\");f=p(\"attributeChangedCallback\");u=a.observedAttributes||[]}catch(va){return}finally{this.f=!1}ba(this.a,b,{localName:b,constructor:a,connectedCallback:c,disconnectedCallback:d,adoptedCallback:h,attributeChangedCallback:f,observedAttributes:u,constructionStack:[]});this.c.push(b);this.b||(this.b=\n!0,this.g(function(){if(!1!==e.b)for(e.b=!1,A(e.a,document);0<e.c.length;){var b=e.c.shift();(b=e.h.get(b))&&D(b)}}))};E.prototype.get=function(b){if(b=this.a.a.get(b))return b.constructor};E.prototype.o=function(b){if(!k(b))return Promise.reject(new SyntaxError(\"'\"+b+\"' is not a valid custom element name.\"));var a=this.h.get(b);if(a)return a.c;a=new ca;this.h.set(b,a);this.a.a.get(b)&&-1===this.c.indexOf(b)&&D(a);return a.c};E.prototype.m=function(b){C(this.j);var a=this.g;this.g=function(e){return b(function(){return a(e)})}};\nwindow.CustomElementRegistry=E;E.prototype.define=E.prototype.l;E.prototype.get=E.prototype.get;E.prototype.whenDefined=E.prototype.o;E.prototype.polyfillWrapFlushCallback=E.prototype.m;var F=window.Document.prototype.createElement,da=window.Document.prototype.createElementNS,ea=window.Document.prototype.importNode,fa=window.Document.prototype.prepend,ga=window.Document.prototype.append,G=window.Node.prototype.cloneNode,H=window.Node.prototype.appendChild,I=window.Node.prototype.insertBefore,J=window.Node.prototype.removeChild,K=window.Node.prototype.replaceChild,L=Object.getOwnPropertyDescriptor(window.Node.prototype,\"textContent\"),M=window.Element.prototype.attachShadow,N=Object.getOwnPropertyDescriptor(window.Element.prototype,\n\"innerHTML\"),O=window.Element.prototype.getAttribute,Q=window.Element.prototype.setAttribute,R=window.Element.prototype.removeAttribute,S=window.Element.prototype.getAttributeNS,T=window.Element.prototype.setAttributeNS,U=window.Element.prototype.removeAttributeNS,V=window.Element.prototype.insertAdjacentElement,ha=window.Element.prototype.prepend,ia=window.Element.prototype.append,ja=window.Element.prototype.before,ka=window.Element.prototype.after,la=window.Element.prototype.replaceWith,ma=window.Element.prototype.remove,\nna=window.HTMLElement,W=Object.getOwnPropertyDescriptor(window.HTMLElement.prototype,\"innerHTML\"),X=window.HTMLElement.prototype.insertAdjacentElement;function oa(){var b=Y;window.HTMLElement=function(){function a(){var a=this.constructor,c=b.f.get(a);if(!c)throw Error(\"The custom element being constructed was not registered with `customElements`.\");var d=c.constructionStack;if(!d.length)return d=F.call(document,c.localName),Object.setPrototypeOf(d,a.prototype),d.__CE_state=1,d.__CE_definition=c,w(b,d),d;var c=d.length-1,h=d[c];if(h===g)throw Error(\"The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.\");\nd[c]=g;Object.setPrototypeOf(h,a.prototype);w(b,h);return h}a.prototype=na.prototype;return a}()};function pa(b,a,e){a.prepend=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.i.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<d.length;c++)f=d[c],f instanceof Element&&x(b,f)};a.append=function(a){for(var d=[],c=0;c<arguments.length;++c)d[c-0]=arguments[c];c=d.filter(function(b){return b instanceof Node&&l(b)});e.append.apply(this,d);for(var f=0;f<c.length;f++)z(b,c[f]);if(l(this))for(c=0;c<\nd.length;c++)f=d[c],f instanceof Element&&x(b,f)}};function qa(){var b=Y;q(Document.prototype,\"createElement\",function(a){if(this.__CE_hasRegistry){var e=b.a.get(a);if(e)return new e.constructor}a=F.call(this,a);w(b,a);return a});q(Document.prototype,\"importNode\",function(a,e){a=ea.call(this,a,e);this.__CE_hasRegistry?A(b,a):v(b,a);return a});q(Document.prototype,\"createElementNS\",function(a,e){if(this.__CE_hasRegistry&&(null===a||\"http://www.w3.org/1999/xhtml\"===a)){var c=b.a.get(e);if(c)return new c.constructor}a=da.call(this,a,e);w(b,a);return a});\npa(b,Document.prototype,{i:fa,append:ga})};function ra(){var b=Y;function a(a,c){Object.defineProperty(a,\"textContent\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){if(this.nodeType===Node.TEXT_NODE)c.set.call(this,a);else{var d=void 0;if(this.firstChild){var e=this.childNodes,u=e.length;if(0<u&&l(this))for(var d=Array(u),p=0;p<u;p++)d[p]=e[p]}c.set.call(this,a);if(d)for(a=0;a<d.length;a++)z(b,d[a])}}})}q(Node.prototype,\"insertBefore\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);\na=I.call(this,a,c);if(l(this))for(c=0;c<d.length;c++)x(b,d[c]);return a}d=l(a);c=I.call(this,a,c);d&&z(b,a);l(this)&&x(b,a);return c});q(Node.prototype,\"appendChild\",function(a){if(a instanceof DocumentFragment){var c=Array.prototype.slice.apply(a.childNodes);a=H.call(this,a);if(l(this))for(var d=0;d<c.length;d++)x(b,c[d]);return a}c=l(a);d=H.call(this,a);c&&z(b,a);l(this)&&x(b,a);return d});q(Node.prototype,\"cloneNode\",function(a){a=G.call(this,a);this.ownerDocument.__CE_hasRegistry?A(b,a):v(b,a);\nreturn a});q(Node.prototype,\"removeChild\",function(a){var c=l(a),d=J.call(this,a);c&&z(b,a);return d});q(Node.prototype,\"replaceChild\",function(a,c){if(a instanceof DocumentFragment){var d=Array.prototype.slice.apply(a.childNodes);a=K.call(this,a,c);if(l(this))for(z(b,c),c=0;c<d.length;c++)x(b,d[c]);return a}var d=l(a),e=K.call(this,a,c),f=l(this);f&&z(b,c);d&&z(b,a);f&&x(b,a);return e});L&&L.get?a(Node.prototype,L):t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){for(var a=[],b=\n0;b<this.childNodes.length;b++)a.push(this.childNodes[b].textContent);return a.join(\"\")},set:function(a){for(;this.firstChild;)J.call(this,this.firstChild);H.call(this,document.createTextNode(a))}})})};function sa(b){var a=Element.prototype;a.before=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ja.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e)};a.after=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];d=c.filter(function(a){return a instanceof Node&&l(a)});ka.apply(this,c);for(var e=0;e<d.length;e++)z(b,d[e]);if(l(this))for(d=\n0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e)};a.replaceWith=function(a){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];var d=c.filter(function(a){return a instanceof Node&&l(a)}),e=l(this);la.apply(this,c);for(var f=0;f<d.length;f++)z(b,d[f]);if(e)for(z(b,this),d=0;d<c.length;d++)e=c[d],e instanceof Element&&x(b,e)};a.remove=function(){var a=l(this);ma.call(this);a&&z(b,this)}};function ta(){var b=Y;function a(a,c){Object.defineProperty(a,\"innerHTML\",{enumerable:c.enumerable,configurable:!0,get:c.get,set:function(a){var d=this,e=void 0;l(this)&&(e=[],n(this,function(a){a!==d&&e.push(a)}));c.set.call(this,a);if(e)for(var f=0;f<e.length;f++){var h=e[f];1===h.__CE_state&&b.disconnectedCallback(h)}this.ownerDocument.__CE_hasRegistry?A(b,this):v(b,this);return a}})}function e(a,c){q(a,\"insertAdjacentElement\",function(a,d){var e=l(d);a=c.call(this,a,d);e&&z(b,d);l(a)&&x(b,d);\nreturn a})}M?q(Element.prototype,\"attachShadow\",function(a){return this.__CE_shadowRoot=a=M.call(this,a)}):console.warn(\"Custom Elements: `Element#attachShadow` was not patched.\");if(N&&N.get)a(Element.prototype,N);else if(W&&W.get)a(HTMLElement.prototype,W);else{var c=F.call(document,\"div\");t(b,function(b){a(b,{enumerable:!0,configurable:!0,get:function(){return G.call(this,!0).innerHTML},set:function(a){var b=\"template\"===this.localName?this.content:this;for(c.innerHTML=a;0<b.childNodes.length;)J.call(b,\nb.childNodes[0]);for(;0<c.childNodes.length;)H.call(b,c.childNodes[0])}})})}q(Element.prototype,\"setAttribute\",function(a,c){if(1!==this.__CE_state)return Q.call(this,a,c);var d=O.call(this,a);Q.call(this,a,c);c=O.call(this,a);d!==c&&b.attributeChangedCallback(this,a,d,c,null)});q(Element.prototype,\"setAttributeNS\",function(a,c,e){if(1!==this.__CE_state)return T.call(this,a,c,e);var d=S.call(this,a,c);T.call(this,a,c,e);e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a)});q(Element.prototype,\n\"removeAttribute\",function(a){if(1!==this.__CE_state)return R.call(this,a);var c=O.call(this,a);R.call(this,a);null!==c&&b.attributeChangedCallback(this,a,c,null,null)});q(Element.prototype,\"removeAttributeNS\",function(a,c){if(1!==this.__CE_state)return U.call(this,a,c);var d=S.call(this,a,c);U.call(this,a,c);var e=S.call(this,a,c);d!==e&&b.attributeChangedCallback(this,c,d,e,a)});X?e(HTMLElement.prototype,X):V?e(Element.prototype,V):console.warn(\"Custom Elements: `Element#insertAdjacentElement` was not patched.\");\npa(b,Element.prototype,{i:ha,append:ia});sa(b)};/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nvar Z=window.customElements;if(!Z||Z.forcePolyfill||\"function\"!=typeof Z.define||\"function\"!=typeof Z.get){var Y=new r;oa();qa();ra();ta();document.__CE_hasRegistry=!0;var ua=new E(Y);Object.defineProperty(window,\"customElements\",{configurable:!0,enumerable:!0,value:ua})};\n}).call(self);\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media[^(]*(\\([^)]*\\))/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, extends: ex} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, ex, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse' // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  ce['define'] = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport {getIsExtends} from './style-util'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof window['SVGElement'] && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = /** @type {ShadowRoot} */(root).host;\n            if (host) {\n              let {is: scope} = getIsExtends(host);\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = /** @type {HTMLElement} */(mxn.removedNodes[i]);\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window['customElements']['flush']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport documentWait from './document-wait'\n\n/**\n * @typedef {HTMLStyleElement | ({getStyle: (function():HTMLStyleElement)})}\n */\nexport let CustomStyleProvider;\n\nconst PROCESSED_MARKER = '__processedByShadyCSS';\nconst SEEN_MARKER = '__seenByShadyCSS';\n\n/** @type {?function(!HTMLStyleElement)} */\nlet transformFn = null;\n\n/** @type {?function()} */\nlet validateFn = null;\n\n/**\nThis interface is provided to add document-level <style> elements to ShadyCSS for processing.\nThese styles must be processed by ShadyCSS to simulate ShadowRoot upper-bound encapsulation from outside styles\nIn addition, these styles may also need to be processed for @apply rules and CSS Custom Properties\n\nTo add document-level styles to ShadyCSS, one can call `ShadyCSS.addDocumentStyle(styleElement)` or `ShadyCSS.addDocumentStyle({getStyle: () => styleElement})`\n\nIn addition, if the process used to discover document-level styles can be synchronously flushed, one should set `ShadyCSS.documentStyleFlush`.\nThis function will be called when calculating styles.\n\nAn example usage of the document-level styling api can be found in `examples/document-style-lib.js`\n\n@unrestricted\n*/\nexport default class CustomStyleInterface {\n  constructor() {\n    /** @type {!Array<!CustomStyleProvider>} */\n    this['customStyles'] = [];\n    this['enqueued'] = false;\n  }\n  /**\n   * Queue a validation for new custom styles to batch style recalculations\n   */\n  enqueueDocumentValidation() {\n    if (this['enqueued'] || !validateFn) {\n      return;\n    }\n    this['enqueued'] = true;\n    documentWait(validateFn);\n  }\n  /**\n   * @param {!HTMLStyleElement} style\n   */\n  addCustomStyle(style) {\n    if (!style[SEEN_MARKER]) {\n      style[SEEN_MARKER] = true;\n      this['customStyles'].push(style);\n      this.enqueueDocumentValidation();\n    }\n  }\n  /**\n   * @param {!CustomStyleProvider} customStyle\n   * @return {HTMLStyleElement}\n   */\n  getStyleForCustomStyle(customStyle) {\n    let style;\n    if (customStyle['getStyle']) {\n      style = customStyle['getStyle']();\n    } else {\n      style = customStyle;\n    }\n    return style;\n  }\n  findStyles() {\n    let cs = this['customStyles'];\n    for (let i = 0; i < cs.length; i++) {\n      let customStyle = cs[i];\n      if (customStyle[PROCESSED_MARKER]) {\n        continue;\n      }\n      let style = this.getStyleForCustomStyle(customStyle);\n      if (style) {\n        customStyle[PROCESSED_MARKER] = true;\n        // HTMLImports polyfill may have cloned the style into the main document,\n        // which is referenced with __appliedElement.\n        // Also, we must copy over the attributes.\n        let appliedStyle = /** @type {HTMLStyleElement} */(style['__appliedElement']);\n        if (appliedStyle) {\n          for (let i = 0; i < style.attributes.length; i++) {\n            let attr = style.attributes[i];\n            appliedStyle.setAttribute(attr.name, attr.value);\n          }\n        }\n        if (transformFn) {\n          transformFn(appliedStyle || style);\n        }\n      }\n    }\n  }\n}\n\nCustomStyleInterface.prototype['addCustomStyle'] = CustomStyleInterface.prototype.addCustomStyle;\nCustomStyleInterface.prototype['getStyleForCustomStyle'] = CustomStyleInterface.prototype.getStyleForCustomStyle;\nCustomStyleInterface.prototype['findStyles'] = CustomStyleInterface.prototype.findStyles;\n\nObject.defineProperties(CustomStyleInterface.prototype, {\n  'transformCallback': {\n    /** @return {?function(!HTMLStyleElement)} */\n    get() {\n      return transformFn;\n    },\n    /** @param {?function(!HTMLStyleElement)} fn */\n    set(fn) {\n      transformFn = fn;\n    }\n  },\n  'validateCallback': {\n    /** @return {?function()} */\n    get() {\n      return validateFn;\n    },\n    /**\n     * @param {?function()} fn\n     * @this {CustomStyleInterface}\n     */\n    set(fn) {\n      let needsEnqueue = false;\n      if (!validateFn) {\n        needsEnqueue = true;\n      }\n      validateFn = fn;\n      if (needsEnqueue) {\n        this.enqueueDocumentValidation();\n      }\n    },\n  }\n})\n\n/** @typedef {{\n * customStyles: !Array<!CustomStyleProvider>,\n * addCustomStyle: function(!CustomStyleProvider),\n * getStyleForCustomStyle: function(!CustomStyleProvider): HTMLStyleElement,\n * findStyles: function(),\n * transformCallback: ?function(!HTMLStyleElement),\n * validateCallback: ?function()\n * }}\n */\nexport let CustomStyleInterfaceInterface;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse'\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\nimport {flush as watcherFlush} from './document-watcher'\nimport templateMap from './template-map'\nimport * as ApplyShimUtils from './apply-shim-utils'\nimport documentWait from './document-wait'\nimport {updateNativeProperties} from './common-utils'\nimport {CustomStyleInterfaceInterface} from './custom-style-interface' //eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = this._applyShim['detectMixin'](cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template._styleAst = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, extends: typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    } else {\n      this._applyShim = {\n        /* eslint-disable no-unused-vars */\n        ['detectMixin'](str){return false},\n        ['transformRule'](ast){},\n        ['transformRules'](ast, name){},\n        /* eslint-enable no-unused-vars */\n      }\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    } else {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */({\n        ['findStyles']() {},\n        ['enqueued']: false,\n        ['getStyleForCustomStyle'](s) { return null } // eslint-disable-line no-unused-vars\n      })\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    this._customStyleInterface['findStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['customStyles'];\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim['transformRules'](template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    if (host.shadowRoot || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `root`\n    let root = host.shadowRoot;\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    }\n    // process the lightdom children of `root`\n    let children = host.children || host.childNodes;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        let c = /** @type {!HTMLElement} */(children[i]);\n        this.styleSubtree(c);\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim'\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings'\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n        return true;\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        // custom element code may add dynamic imports\n        // to match processing of native custom elements before\n        // domContentLoaded, we wait for these imports to resolve first.\n        if (runAndClearCallback()) {\n          HTMLImports.whenReady(cb);\n        } else {\n          cb();\n        }\n      });\n    }\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}