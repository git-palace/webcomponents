{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/html-imports/src/html-imports.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","bower_components/shadycss/src/style-cache.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","shimcssproperties","nativeShadow","shimshadow","toCssText","callback","forEachRule","rulesForStyle","style","__cssRules","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","ShadyDOM","nativeMethods","call","addToBitMask","bits","o","parseInt","isImportLink","nodeType","Node","ELEMENT_NODE","MATCHES","IMPORT_SELECTOR","fixUrlAttributes","base","attrs","forEach","a","at","attributes","v","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplate","template","content","n$","querySelectorAll","localName","resolveUrlsInStyle","fixUrlsInTemplates","t$","fixUrls","importsSelectors","whenElementLoaded","href","getAttribute","src","scriptType","fixDomModules","url","s$","assetpath","runScripts","doc","promise","Promise","resolve","then","c","whenLoadedPromise","catch","currentScript","parentNode","replaceChild","script","waitForStyles","stylesInImportsSelector","promises","all","cloneAndMoveStyles","importLink","import","stylesSelector","clone","j","ll","name","removeChild","fireEvents","__fired","eventType","flags","log","console","warn","dispatchEvent","CustomEvent","bubbles","cancelable","detail","__loadPromise","reject","isElementLoaded","addEventListener","isLoaded","useNative","readyState","isIE","sheet","csr","cssRules","CSSRule","IMPORT_RULE","styleSheet","makeDocument","resource","display","innerHTML","baseEl","querySelector","_resolveUrl","whenReady","whenDocumentReady","watchImportsLoad","importInfo","imports","allImports","loadedImports","errorImports","imp","bust","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","linkUrl","replaceUrls","regexp","m","pre","post","urlPath","test","__workingURL","u","URL","pathname","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","Math","random","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","error","message","isOk","status","response","responseText","send","Loader","constructor","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","receive","pieces","header","body","atob","decodeURIComponent","err","$p","join","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","isEdge","documents","_doc","MutationObserver","_onMutation","bind","observe","childList","_loader","_onLoaded","_onLoadedAll","_loadSubtree","_flatten","__firstImport","_observe","__importObserver","subtree","mutations","addedNodes","HTMLImports","Map","h","Set","C","D","f","F","enableFlush","g","customElements","Error","b","d","toLowerCase","__$CE_upgraded","A","forcePolyfill","L","TypeError","has","k","set","w","observedAttributes","K","delete","M","N","takeRecords","childNodes","I","__$CE_observer","add","J","disconnect","removedNodes","H","createTreeWalker","NodeFilter","SHOW_ELEMENT","G","currentNode","nextNode","__$CE_attached","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","host","shadowRoot","tagName","rel","B","removeEventListener","__proto__","assert","attributeOldValue","attributeFilter","hasAttribute","attributeName","oldValue","attributeNamespace","CustomElementRegistry","define","whenDefined","flush","polyfilled","_observeRoot","_addImport","q","HTMLElement","nativeHTMLElement","createElementNS","attachShadow","importNode","x","removeAttribute","enumerable","CustomElements","inUse","CSS","supports","ShadyCSS","WebComponents","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","c$","_content","children","classList","remove","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","templateMap","StyleInfo","__styleInfo","styleInfo","invalidate","elementName","_applyShimInvalid","startValidating","_validating","ast","placeholder","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","StyleUtil.rx","any","exec","assign","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","lastIndex","colon","pp","slice","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","_useCount","StyleUtil.applyCss","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","ce","origDefine","clazz","options","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","detectMixin","transformStyle","transformRules","transformRule","transformCssText","_consumeCssProperties","_getInitialValueForProperty","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","applyShim","elementNeedsScoping","contains","SVGElement","handler","mxns","mxn","documentElement","getRootNode","classes","Array","from","classIdx","observer","nativeCustomElements","delayedStart","requestAnimationFrame","listener","styleCache","typeMax","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","list","shift","entry","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","nativeCss","nativeCssApply","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","prepareTemplate","_prepared","hasMixins","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","hasApplied","_isRootOwner","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","updateStyles","_updateNativeProperties","_applyStyleProperties","_applyToDescendants","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode"],"mappings":"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","file":"webcomponents-hi-ce.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    constructor(doc) {\n      this.documents = {};\n      this._doc = doc;\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\n      }\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate an HTMLDocument from data.\n        const doc = makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(this._doc);\n      Promise.all([\n        runScripts(this._doc),\n        waitForStyles(this._doc)\n      ]).then(() => fireEvents(this._doc));\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      // Ensure we add load/error listeners before modifying urls or appending\n      // these to the main document.\n      whenElementLoaded(n);\n      if (n.href) {\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\n      }\n      if (n.src) {\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else if (n.localName === 'script') {\n        if (n.textContent) {\n          n.textContent += `\\n//# sourceURL=${base}`;\n        }\n        // NOTE: we override the type here, might need to keep track of original\n        // type and apply it to clone when running the script.\n        n.setAttribute('type', scriptType);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   * @param {!HTMLDocument} doc\n   * @return {Promise} Resolved when scripts are loaded.\n   */\n  function runScripts(doc) {\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = doc.createElement('script');\n        c.textContent = s.textContent;\n        if (s.src) {\n          c.setAttribute('src', s.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        // Catch failures, always return c.\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        s.parentNode.replaceChild(c, s);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n        });\n      });\n    }\n    return promise;\n  }\n\n  /**\n   * Waits for all the imported stylesheets/styles to be loaded.\n   * @param {!HTMLDocument} doc\n   * @return {Promise}\n   */\n  function waitForStyles(doc) {\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      // Catch failures, always return s\n      promises.push(\n        whenElementLoaded(s).catch(() => s)\n      );\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Clones styles and stylesheets links contained in imports and moves them\n   * as siblings of the root import link.\n   * @param {!HTMLLinkElement} importLink\n   */\n  function cloneAndMoveStyles(importLink) {\n    const n$ = importLink.import.querySelectorAll(stylesSelector);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      const clone = document.createElement(n.localName);\n      // Ensure we listen for load/error for this element.\n      whenElementLoaded(clone);\n      // Copy textContent and attributes.\n      clone.textContent = n.textContent;\n      for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n        clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n      }\n\n      // Remove old, add new.\n      n.parentNode.removeChild(n);\n      importLink.parentNode.insertBefore(clone, importLink);\n    }\n  }\n\n  /**\n   * Fires load/error events for loaded imports.\n   * @param {!HTMLDocument} doc\n   */\n  function fireEvents(doc) {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (doc.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__fired) {\n        n.__fired = true;\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        // Ensure the load promise is setup before firing the event.\n        whenElementLoaded(n);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  /**\n   * Creates a new document containing resource and normalizes urls accordingly.\n   * @param {string=} resource\n   * @param {string=} url\n   * @return {HTMLElement}\n   */\n  function makeDocument(resource, url) {\n    const content = /** @type {HTMLElement} */\n      (document.createElement('import-content'));\n    content.style.display = 'none';\n    if (url) {\n      content.setAttribute('import-href', url);\n    }\n    if (resource) {\n      content.innerHTML = resource;\n    }\n\n    // Support <base> in imported docs. Resolve url and remove it from the parent.\n    const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\n    if (baseEl) {\n      url = Path._resolveUrl(baseEl.getAttribute('href'), url);\n      baseEl.parentNode.removeChild(baseEl);\n    }\n    // TODO(sorvell): this is specific to users of <dom-module> (Polymer).\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n\n  /**\n   * Calls the callback when all HTMLImports in the document at call time\n   * (or at least document ready) have loaded.\n   * @param {function(!HTMLImportInfo)=} callback\n   * @param {HTMLDocument=} doc\n   * @return {Promise}\n   */\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n\n  /**\n   * Resolved when document is in ready state.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function whenDocumentReady(doc) {\n    return new Promise((resolve) => {\n      if (doc.readyState !== 'loading') {\n        resolve(doc);\n      } else {\n        doc.addEventListener('readystatechange', () => {\n          if (doc.readyState !== 'loading') {\n            resolve(doc);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resolved when all imports are done loading. The promise returns the import\n   * details as HTMLImportInfo object.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\n      allImports: [],\n      loadedImports: [],\n      errorImports: []\n    });\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      importInfo.allImports.push(imp);\n      promises.push(whenElementLoaded(imp).then((imp) => {\n        importInfo.loadedImports.push(imp);\n        return imp;\n      }).catch((imp) => {\n        importInfo.errorImports.push(imp);\n        // Capture failures, always return imp.\n        return imp;\n      }));\n    }\n    // Return aggregated info.\n    return Promise.all(promises).then(() => importInfo);\n  }\n\n  new Importer(document);\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady((detail) =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n(function(){function c(){this.a=new Map;this.j=new Map;this.h=new Map;this.o=new Set;this.C=new MutationObserver(this.D.bind(this));this.f=null;this.F=new Set;this.enableFlush=!0;this.s=!1;this.m=null;}function g(){return h.customElements}function l(a){if(!/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a)||-1!==t.indexOf(a))return Error(\"The element name '\"+a+\"' is not valid.\")}function m(a,b,e,d){var c=g();a=e?n.call(a,b,e):n.call(a,b);(b=c.a.get(b.toLowerCase()))&&c.u(a,b,d);c.b(a);return a}\nfunction p(a,b,e,d){b=b.toLowerCase();var c=a.getAttribute(b);d.call(a,b,e);1==a.__$CE_upgraded&&(d=g().a.get(a.localName),e=d.A,(d=d.i)&&0<=e.indexOf(b)&&(e=a.getAttribute(b),e!==c&&d.call(a,b,c,e,null)));}var f=document,h=window;if(g()&&(g().g=function(){},!g().forcePolyfill))return;var t=\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \");c.prototype.L=function(a,b){function e(a){var b=f[a];if(void 0!==b&&\"function\"!==typeof b)throw Error(c+\n\" '\"+a+\"' is not a Function\");return b}if(\"function\"!==typeof b)throw new TypeError(\"constructor must be a Constructor\");var d=l(a);if(d)throw d;if(this.a.has(a))throw Error(\"An element with name '\"+a+\"' is already defined\");if(this.j.has(b))throw Error(\"Definition failed for '\"+a+\"': The constructor is already used.\");var c=a,f=b.prototype;if(\"object\"!==typeof f)throw new TypeError(\"Definition failed for '\"+a+\"': constructor.prototype must be an object\");var d=e(\"connectedCallback\"),g=e(\"disconnectedCallback\"),\nk=e(\"attributeChangedCallback\");this.a.set(c,{name:a,localName:c,constructor:b,v:d,w:g,i:k,A:k&&b.observedAttributes||[]});this.j.set(b,c);this.K();if(a=this.h.get(c))a.resolve(void 0),this.h.delete(c);};c.prototype.get=function(a){return(a=this.a.get(a))?a.constructor:void 0};c.prototype.M=function(a){var b=l(a);if(b)return Promise.reject(b);if(this.a.has(a))return Promise.resolve();if(b=this.h.get(a))return b.N;var e,d=new Promise(function(a){e=a;}),b={N:d,resolve:e};this.h.set(a,b);return d};c.prototype.g=\nfunction(){this.enableFlush&&(this.l(this.m.takeRecords()),this.D(this.C.takeRecords()),this.o.forEach(function(a){this.l(a.takeRecords());},this));};c.prototype.K=function(){var a=this;if(!this.s){this.s=!0;var b=function(){a.s=!1;a.m||(a.m=a.b(f));a.c(f.childNodes);};window.HTMLImports?window.HTMLImports.whenReady(b):b();}};c.prototype.I=function(a){this.f=a;};c.prototype.b=function(a){if(null!=a.__$CE_observer)return a.__$CE_observer;a.__$CE_observer=new MutationObserver(this.l.bind(this));a.__$CE_observer.observe(a,\n{childList:!0,subtree:!0});this.enableFlush&&this.o.add(a.__$CE_observer);return a.__$CE_observer};c.prototype.J=function(a){null!=a.__$CE_observer&&(a.__$CE_observer.disconnect(),this.enableFlush&&this.o.delete(a.__$CE_observer),a.__$CE_observer=null);};c.prototype.l=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(\"childList\"===e.type){var d=e.removedNodes;this.c(e.addedNodes);this.H(d);}}};c.prototype.c=function(a,b){b=b||new Set;for(var e=0;e<a.length;e++){var d=a[e];if(d.nodeType===Node.ELEMENT_NODE){this.J(d);\nd=f.createTreeWalker(d,NodeFilter.SHOW_ELEMENT,null,!1);do this.G(d.currentNode,b);while(d.nextNode())}}};c.prototype.G=function(a,b){if(!b.has(a)){b.add(a);var e=this.a.get(a.localName);if(e){a.__$CE_upgraded||this.u(a,e,!0);var d;if(d=a.__$CE_upgraded&&!a.__$CE_attached)a:{d=a;do{if(d.__$CE_attached||d.nodeType===Node.DOCUMENT_NODE){d=!0;break a}d=d.parentNode||d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host;}while(d);d=!1;}d&&(a.__$CE_attached=!0,e.v&&e.v.call(a));}a.shadowRoot&&this.c(a.shadowRoot.childNodes,\nb);\"LINK\"===a.tagName&&a.rel&&-1!==a.rel.toLowerCase().split(\" \").indexOf(\"import\")&&this.B(a,b);}};c.prototype.B=function(a,b){var e=a.import;if(e)b.has(e)||(b.add(e),e.__$CE_observer||this.b(e),this.c(e.childNodes,b));else if(b=a.href,!this.F.has(b)){this.F.add(b);var d=this,c=function(){a.removeEventListener(\"load\",c);a.import.__$CE_observer||d.b(a.import);d.c(a.import.childNodes);};a.addEventListener(\"load\",c);}};c.prototype.H=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(e.nodeType===Node.ELEMENT_NODE){this.b(e);\ne=f.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null,!1);do{var d=e.currentNode;if(d.__$CE_upgraded&&d.__$CE_attached){d.__$CE_attached=!1;var c=this.a.get(d.localName);c&&c.w&&c.w.call(d);}}while(e.nextNode())}}};c.prototype.u=function(a,b,e){a.__proto__=b.constructor.prototype;e&&(this.I(a),new b.constructor,a.__$CE_upgraded=!0,console.assert(!this.f));e=b.A;if((b=b.i)&&0<e.length){this.C.observe(a,{attributes:!0,attributeOldValue:!0,attributeFilter:e});for(var d=0;d<e.length;d++){var c=e[d];if(a.hasAttribute(c)){var f=\na.getAttribute(c);b.call(a,c,null,f,null);}}}};c.prototype.D=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(\"attributes\"===c.type){var d=c.target,f=this.a.get(d.localName),g=c.attributeName,h=c.oldValue,k=d.getAttribute(g);k!==h&&f.i.call(d,g,h,k,c.attributeNamespace);}}};window.CustomElementRegistry=c;c.prototype.define=c.prototype.L;c.prototype.get=c.prototype.get;c.prototype.whenDefined=c.prototype.M;c.prototype.flush=c.prototype.g;c.prototype.polyfilled=!0;c.prototype._observeRoot=c.prototype.b;\nc.prototype._addImport=c.prototype.B;var q=h.HTMLElement;c.prototype.nativeHTMLElement=q;h.HTMLElement=function(){var a=g();if(a.f){var b=a.f;a.f=null;return b}if(this.constructor)return a=a.j.get(this.constructor),m(f,a,void 0,!1);throw Error(\"Unknown constructor. Did you call customElements.define()?\");};h.HTMLElement.prototype=q.prototype;var n=f.createElement;f.createElement=function(a,b){return m(f,a,b,!0)};var u=f.createElementNS;f.createElementNS=function(a,b){return\"http://www.w3.org/1999/xhtml\"===\na?f.createElement(b):u.call(f,a,b)};var r=Element.prototype.attachShadow;r&&Object.defineProperty(Element.prototype,\"attachShadow\",{value:function(a){a=r.call(this,a);g().b(a);return a}});var v=f.importNode;f.importNode=function(a,b){a=v.call(f,a,b);g().c(a.nodeType===Node.ELEMENT_NODE?[a]:a.childNodes);return a};var w=Element.prototype.setAttribute;Element.prototype.setAttribute=function(a,b){p(this,a,b,w);};var x=Element.prototype.removeAttribute;Element.prototype.removeAttribute=function(a){p(this,\na,null,x);};Object.defineProperty(window,\"customElements\",{value:new c,configurable:!0,enumerable:!0});window.CustomElements={takeRecords:function(){g().g&&g().g();}};})();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n// given a string of css, return a simple rule tree\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nfunction stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nlet types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nlet nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nfunction rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nfunction isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\n\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nlet rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar templateMap = {};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst promise = Promise.resolve();\n\nclass StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx$$1 = rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx$$1.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(rx.BRACKETED, '')\n      .replace(rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        rx.MIXIN_MATCH.lastIndex = 0;\n        m = rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer$1._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(rx.HOST_PREFIX + rxHostSelector +\n      rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(style);\n    let self = this;\n    style.textContent = toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    };\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO(dfreedm): consider spliting into separate global\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = applyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      applyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          applyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        applyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = rulesForStyle(style);\n      applyShim.transformRules(ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties$1.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * Polyfills loaded: HTML Imports, Custom Elements\n * Used in: Safari 10, Firefox once SD is shipped\n */\n\n//TODO(notwaldorf): this is temporary and should be removed.\n\n}());\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    constructor(doc) {\n      this.documents = {};\n      this._doc = doc;\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\n      }\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate an HTMLDocument from data.\n        const doc = makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(this._doc);\n      Promise.all([\n        runScripts(this._doc),\n        waitForStyles(this._doc)\n      ]).then(() => fireEvents(this._doc));\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      // Ensure we add load/error listeners before modifying urls or appending\n      // these to the main document.\n      whenElementLoaded(n);\n      if (n.href) {\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\n      }\n      if (n.src) {\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else if (n.localName === 'script') {\n        if (n.textContent) {\n          n.textContent += `\\n//# sourceURL=${base}`;\n        }\n        // NOTE: we override the type here, might need to keep track of original\n        // type and apply it to clone when running the script.\n        n.setAttribute('type', scriptType);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   * @param {!HTMLDocument} doc\n   * @return {Promise} Resolved when scripts are loaded.\n   */\n  function runScripts(doc) {\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = doc.createElement('script');\n        c.textContent = s.textContent;\n        if (s.src) {\n          c.setAttribute('src', s.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        // Catch failures, always return c.\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        s.parentNode.replaceChild(c, s);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n        });\n      });\n    }\n    return promise;\n  }\n\n  /**\n   * Waits for all the imported stylesheets/styles to be loaded.\n   * @param {!HTMLDocument} doc\n   * @return {Promise}\n   */\n  function waitForStyles(doc) {\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      // Catch failures, always return s\n      promises.push(\n        whenElementLoaded(s).catch(() => s)\n      );\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Clones styles and stylesheets links contained in imports and moves them\n   * as siblings of the root import link.\n   * @param {!HTMLLinkElement} importLink\n   */\n  function cloneAndMoveStyles(importLink) {\n    const n$ = importLink.import.querySelectorAll(stylesSelector);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      const clone = document.createElement(n.localName);\n      // Ensure we listen for load/error for this element.\n      whenElementLoaded(clone);\n      // Copy textContent and attributes.\n      clone.textContent = n.textContent;\n      for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n        clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n      }\n\n      // Remove old, add new.\n      n.parentNode.removeChild(n);\n      importLink.parentNode.insertBefore(clone, importLink);\n    }\n  }\n\n  /**\n   * Fires load/error events for loaded imports.\n   * @param {!HTMLDocument} doc\n   */\n  function fireEvents(doc) {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (doc.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__fired) {\n        n.__fired = true;\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        // Ensure the load promise is setup before firing the event.\n        whenElementLoaded(n);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  /**\n   * Creates a new document containing resource and normalizes urls accordingly.\n   * @param {string=} resource\n   * @param {string=} url\n   * @return {HTMLElement}\n   */\n  function makeDocument(resource, url) {\n    const content = /** @type {HTMLElement} */\n      (document.createElement('import-content'));\n    content.style.display = 'none';\n    if (url) {\n      content.setAttribute('import-href', url);\n    }\n    if (resource) {\n      content.innerHTML = resource;\n    }\n\n    // Support <base> in imported docs. Resolve url and remove it from the parent.\n    const baseEl = /** @type {HTMLBaseElement} */ (content.querySelector('base'));\n    if (baseEl) {\n      url = Path._resolveUrl(baseEl.getAttribute('href'), url);\n      baseEl.parentNode.removeChild(baseEl);\n    }\n    // TODO(sorvell): this is specific to users of <dom-module> (Polymer).\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n\n  /**\n   * Calls the callback when all HTMLImports in the document at call time\n   * (or at least document ready) have loaded.\n   * @param {function(!HTMLImportInfo)=} callback\n   * @param {HTMLDocument=} doc\n   * @return {Promise}\n   */\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n\n  /**\n   * Resolved when document is in ready state.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function whenDocumentReady(doc) {\n    return new Promise((resolve) => {\n      if (doc.readyState !== 'loading') {\n        resolve(doc);\n      } else {\n        doc.addEventListener('readystatechange', () => {\n          if (doc.readyState !== 'loading') {\n            resolve(doc);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resolved when all imports are done loading. The promise returns the import\n   * details as HTMLImportInfo object.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\n      allImports: [],\n      loadedImports: [],\n      errorImports: []\n    });\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      importInfo.allImports.push(imp);\n      promises.push(whenElementLoaded(imp).then((imp) => {\n        importInfo.loadedImports.push(imp);\n        return imp;\n      }).catch((imp) => {\n        importInfo.errorImports.push(imp);\n        // Capture failures, always return imp.\n        return imp;\n      }));\n    }\n    // Return aggregated info.\n    return Promise.all(promises).then(() => importInfo);\n  }\n\n  new Importer(document);\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady((detail) =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n","/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';(function(){function c(){this.a=new Map;this.j=new Map;this.h=new Map;this.o=new Set;this.C=new MutationObserver(this.D.bind(this));this.f=null;this.F=new Set;this.enableFlush=!0;this.s=!1;this.m=null}function g(){return h.customElements}function l(a){if(!/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a)||-1!==t.indexOf(a))return Error(\"The element name '\"+a+\"' is not valid.\")}function m(a,b,e,d){var c=g();a=e?n.call(a,b,e):n.call(a,b);(b=c.a.get(b.toLowerCase()))&&c.u(a,b,d);c.b(a);return a}\nfunction p(a,b,e,d){b=b.toLowerCase();var c=a.getAttribute(b);d.call(a,b,e);1==a.__$CE_upgraded&&(d=g().a.get(a.localName),e=d.A,(d=d.i)&&0<=e.indexOf(b)&&(e=a.getAttribute(b),e!==c&&d.call(a,b,c,e,null)))}var f=document,h=window;if(g()&&(g().g=function(){},!g().forcePolyfill))return;var t=\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \");c.prototype.L=function(a,b){function e(a){var b=f[a];if(void 0!==b&&\"function\"!==typeof b)throw Error(c+\n\" '\"+a+\"' is not a Function\");return b}if(\"function\"!==typeof b)throw new TypeError(\"constructor must be a Constructor\");var d=l(a);if(d)throw d;if(this.a.has(a))throw Error(\"An element with name '\"+a+\"' is already defined\");if(this.j.has(b))throw Error(\"Definition failed for '\"+a+\"': The constructor is already used.\");var c=a,f=b.prototype;if(\"object\"!==typeof f)throw new TypeError(\"Definition failed for '\"+a+\"': constructor.prototype must be an object\");var d=e(\"connectedCallback\"),g=e(\"disconnectedCallback\"),\nk=e(\"attributeChangedCallback\");this.a.set(c,{name:a,localName:c,constructor:b,v:d,w:g,i:k,A:k&&b.observedAttributes||[]});this.j.set(b,c);this.K();if(a=this.h.get(c))a.resolve(void 0),this.h.delete(c)};c.prototype.get=function(a){return(a=this.a.get(a))?a.constructor:void 0};c.prototype.M=function(a){var b=l(a);if(b)return Promise.reject(b);if(this.a.has(a))return Promise.resolve();if(b=this.h.get(a))return b.N;var e,d=new Promise(function(a){e=a}),b={N:d,resolve:e};this.h.set(a,b);return d};c.prototype.g=\nfunction(){this.enableFlush&&(this.l(this.m.takeRecords()),this.D(this.C.takeRecords()),this.o.forEach(function(a){this.l(a.takeRecords())},this))};c.prototype.K=function(){var a=this;if(!this.s){this.s=!0;var b=function(){a.s=!1;a.m||(a.m=a.b(f));a.c(f.childNodes)};window.HTMLImports?window.HTMLImports.whenReady(b):b()}};c.prototype.I=function(a){this.f=a};c.prototype.b=function(a){if(null!=a.__$CE_observer)return a.__$CE_observer;a.__$CE_observer=new MutationObserver(this.l.bind(this));a.__$CE_observer.observe(a,\n{childList:!0,subtree:!0});this.enableFlush&&this.o.add(a.__$CE_observer);return a.__$CE_observer};c.prototype.J=function(a){null!=a.__$CE_observer&&(a.__$CE_observer.disconnect(),this.enableFlush&&this.o.delete(a.__$CE_observer),a.__$CE_observer=null)};c.prototype.l=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(\"childList\"===e.type){var d=e.removedNodes;this.c(e.addedNodes);this.H(d)}}};c.prototype.c=function(a,b){b=b||new Set;for(var e=0;e<a.length;e++){var d=a[e];if(d.nodeType===Node.ELEMENT_NODE){this.J(d);\nd=f.createTreeWalker(d,NodeFilter.SHOW_ELEMENT,null,!1);do this.G(d.currentNode,b);while(d.nextNode())}}};c.prototype.G=function(a,b){if(!b.has(a)){b.add(a);var e=this.a.get(a.localName);if(e){a.__$CE_upgraded||this.u(a,e,!0);var d;if(d=a.__$CE_upgraded&&!a.__$CE_attached)a:{d=a;do{if(d.__$CE_attached||d.nodeType===Node.DOCUMENT_NODE){d=!0;break a}d=d.parentNode||d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host}while(d);d=!1}d&&(a.__$CE_attached=!0,e.v&&e.v.call(a))}a.shadowRoot&&this.c(a.shadowRoot.childNodes,\nb);\"LINK\"===a.tagName&&a.rel&&-1!==a.rel.toLowerCase().split(\" \").indexOf(\"import\")&&this.B(a,b)}};c.prototype.B=function(a,b){var e=a.import;if(e)b.has(e)||(b.add(e),e.__$CE_observer||this.b(e),this.c(e.childNodes,b));else if(b=a.href,!this.F.has(b)){this.F.add(b);var d=this,c=function(){a.removeEventListener(\"load\",c);a.import.__$CE_observer||d.b(a.import);d.c(a.import.childNodes)};a.addEventListener(\"load\",c)}};c.prototype.H=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(e.nodeType===Node.ELEMENT_NODE){this.b(e);\ne=f.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null,!1);do{var d=e.currentNode;if(d.__$CE_upgraded&&d.__$CE_attached){d.__$CE_attached=!1;var c=this.a.get(d.localName);c&&c.w&&c.w.call(d)}}while(e.nextNode())}}};c.prototype.u=function(a,b,e){a.__proto__=b.constructor.prototype;e&&(this.I(a),new b.constructor,a.__$CE_upgraded=!0,console.assert(!this.f));e=b.A;if((b=b.i)&&0<e.length){this.C.observe(a,{attributes:!0,attributeOldValue:!0,attributeFilter:e});for(var d=0;d<e.length;d++){var c=e[d];if(a.hasAttribute(c)){var f=\na.getAttribute(c);b.call(a,c,null,f,null)}}}};c.prototype.D=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(\"attributes\"===c.type){var d=c.target,f=this.a.get(d.localName),g=c.attributeName,h=c.oldValue,k=d.getAttribute(g);k!==h&&f.i.call(d,g,h,k,c.attributeNamespace)}}};window.CustomElementRegistry=c;c.prototype.define=c.prototype.L;c.prototype.get=c.prototype.get;c.prototype.whenDefined=c.prototype.M;c.prototype.flush=c.prototype.g;c.prototype.polyfilled=!0;c.prototype._observeRoot=c.prototype.b;\nc.prototype._addImport=c.prototype.B;var q=h.HTMLElement;c.prototype.nativeHTMLElement=q;h.HTMLElement=function(){var a=g();if(a.f){var b=a.f;a.f=null;return b}if(this.constructor)return a=a.j.get(this.constructor),m(f,a,void 0,!1);throw Error(\"Unknown constructor. Did you call customElements.define()?\");};h.HTMLElement.prototype=q.prototype;var n=f.createElement;f.createElement=function(a,b){return m(f,a,b,!0)};var u=f.createElementNS;f.createElementNS=function(a,b){return\"http://www.w3.org/1999/xhtml\"===\na?f.createElement(b):u.call(f,a,b)};var r=Element.prototype.attachShadow;r&&Object.defineProperty(Element.prototype,\"attachShadow\",{value:function(a){a=r.call(this,a);g().b(a);return a}});var v=f.importNode;f.importNode=function(a,b){a=v.call(f,a,b);g().c(a.nodeType===Node.ELEMENT_NODE?[a]:a.childNodes);return a};var w=Element.prototype.setAttribute;Element.prototype.setAttribute=function(a,b){p(this,a,b,w)};var x=Element.prototype.removeAttribute;Element.prototype.removeAttribute=function(a){p(this,\na,null,x)};Object.defineProperty(window,\"customElements\",{value:new c,configurable:!0,enumerable:!0});window.CustomElements={takeRecords:function(){g().g&&g().g()}}})();\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}