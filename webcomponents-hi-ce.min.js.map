{"version":3,"sources":["webcomponents-hi-ce-index.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-properties.js","bower_components/html-imports/src/html-imports.js","src/pre-polyfill.js","bower_components/custom-elements/custom-elements.min.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","bower_components/shadycss/src/style-cache.js","src/post-polyfill.js","src/unresolved.js"],"names":["parse","text","clean","parseCss","lex","cssText","replace","RX","comments","port","root","start","end","length","n","i","l","OPEN_BRACE","rules","p","previous","parent","push","CLOSE_BRACE","node","t","substring","parsedCssText","trim","ss","_expandUnicodeEscapes","multipleSpaces","lastIndexOf","s","parsedSelector","selector","atRule","indexOf","type","types","MEDIA_RULE","match","keyframesRule","KEYFRAMES_RULE","keyframesName","split","pop","VAR_START","MIXIN_RULE","STYLE_RULE","r$","r","code","arguments","repeat","stringify","preserveProperties","_hasMixinRules","removeCustomProps","removeCustomPropAssignment","removeCustomPropApply","customProp","mixinProp","mixinApply","varApply","parseSettings","settings","nativeCssVariables","shimcssproperties","nativeShadow","shimshadow","toCssText","callback","forEachRule","rulesForStyle","style","__cssRules","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","matchMedia","rx","MEDIA_MATCH","window","matches","applyCss","moniker","target","contextNode","createScopeStyle","applyStyle","document","head","after","nextSibling","firstChild","lastHeadApplyNode","insertBefore","createElement","setAttribute","applyStylePlaceHolder","placeHolder","createComment","scope","findMatchingParen","level","processVariableAndFallback","str","inner","prefix","suffix","comma","value","fallback","setElementClassRaw","element","ShadyDOM","nativeMethods","call","addToBitMask","bits","o","parseInt","isImportLink","nodeType","Node","ELEMENT_NODE","MATCHES","IMPORT_SELECTOR","fixUrlAttributes","base","attrs","forEach","a","at","attributes","v","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplate","template","content","n$","querySelectorAll","localName","resolveUrlsInStyle","fixUrlsInTemplates","t$","fixUrls","importsSelectors","whenElementLoaded","href","getAttribute","src","scriptType","fixDomModules","url","s$","assetpath","runScripts","doc","promise","Promise","resolve","then","c","whenLoadedPromise","catch","currentScript","parentNode","replaceChild","script","waitForStyles","stylesInImportsSelector","promises","all","cloneAndMoveStyles","importLink","import","stylesSelector","clone","j","ll","name","removeChild","fireEvents","__fired","eventType","flags","log","console","warn","dispatchEvent","CustomEvent","bubbles","cancelable","detail","__loadPromise","reject","isElementLoaded","addEventListener","isLoaded","useNative","readyState","isIE","sheet","csr","cssRules","CSSRule","IMPORT_RULE","styleSheet","makeDocument","resource","display","innerHTML","whenReady","whenDocumentReady","watchImportsLoad","importInfo","imports","allImports","loadedImports","errorImports","imp","bust","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","linkUrl","replaceUrls","regexp","m","pre","post","urlPath","_resolveUrl","test","__workingURL","u","URL","pathname","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","request","XMLHttpRequest","Math","random","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","error","message","isOk","status","response","responseText","send","Loader","constructor","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","receive","pieces","header","body","atob","decodeURIComponent","err","$p","join","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","isEdge","documents","_doc","MutationObserver","_onMutation","bind","observe","childList","_loader","_onLoaded","_onLoadedAll","_loadSubtree","_flatten","__firstImport","_observe","__importObserver","subtree","mutations","addedNodes","HTMLImports","forceShady","shadydom","force","forceCE","register","ce","customElements","forcePolyfill","WebComponents","Map","h","Set","C","D","f","F","enableFlush","g","Error","b","d","toLowerCase","__$CE_upgraded","A","L","TypeError","has","k","set","w","observedAttributes","K","delete","M","N","takeRecords","childNodes","I","__$CE_observer","add","J","disconnect","removedNodes","H","createTreeWalker","NodeFilter","SHOW_ELEMENT","G","currentNode","nextNode","__$CE_attached","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","host","shadowRoot","tagName","rel","B","removeEventListener","__proto__","assert","attributeOldValue","attributeFilter","hasAttribute","attributeName","oldValue","attributeNamespace","CustomElementRegistry","define","whenDefined","flush","polyfilled","_observeRoot","_addImport","q","HTMLElement","nativeHTMLElement","createElementNS","attachShadow","importNode","x","removeAttribute","enumerable","CustomElements","inUse","CSS","supports","nativeCssApply","ShadyCSS","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","IS_VAR","BRACKETED","HOST_PREFIX","HOST_SUFFIX","SCOPE_NAME","StyleTransformer","dom","shouldRemoveScope","__styleScoped","_transformDom","c$","_content","children","classList","remove","newValue","StyleUtil.setElementClassRaw","elementStyles","styleRules","cssBuildType","__cssBuild","StyleUtil.toCssText","css","is","extends","ext","hostScope","_calcHostScope","_calcElementScope","self","isScoped","_transformRule","_transformComplexSelector","transformer","transformedSelector","_transformRuleCss","p$","COMPLEX_SELECTOR_SEP","StyleUtil.isKeyframesSelector","stop","NTH","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","typeSelector","documentRule","normalizeRootSelector","_transformDocumentSelector","SCOPE_DOC_SELECTOR","StyleTransformer$1","templateMap","StyleInfo","__styleInfo","styleInfo","invalidate","elementName","_applyShimInvalid","startValidating","_validating","ast","placeholder","ownStylePropertyNames","typeExtension","cssBuild","overrideStyleProperties","styleProperties","scopeSelector","customStyle","IS_IE","XSCOPE_NAME","StyleProperties","decorateStyles","props","keyframes","ruleIndex","StyleUtil.forEachRule","decorateRule","index","collectPropertiesInCssText","propertyInfo","_keyframes","names","properties","hasProperties","collectProperties","collectCssText","StyleUtil.rx","any","exec","assign","collectConsumingCssText","reify","getOwnPropertyNames","valueForProperty","property","valueForProperties","StyleUtil.processVariableAndFallback","propertyValue","parts","lastIndex","colon","pp","slice","applyProperties","output","applyKeyframeTransforms","keyframeTransforms","input","hasAnimations","transform","keyframeNamesToTransform","keyframe","propertyDataFromStyles","selectorToMatch","key","whenHostOrRootRule","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","rxHostSelector","hostRx","RegExp","_elementKeyframeTransforms","_scopeSelector","keyframesRules","_scopeKeyframes","_keyframesRuleTransformer","keyframesNameRx","transformedKeyframesName","scopeId","applyElementScopeSelector","old","applyElementStyle","_useCount","StyleUtil.applyCss","StyleUtil.applyStyle","applyCustomStyle","StyleUtil.rulesForStyle","StyleProperties$1","placeholderMap","origDefine","clazz","options","APPLY_NAME_CLEAN","INITIAL_INHERIT","MIXIN_VAR_SEP","MixinMap","_map","dependants","ApplyShim","_currentTemplate","_measureElement","_separator","_boundProduceCssProperties","matchText","propertyName","valueProperty","valueMixin","_produceCssProperties","detectMixin","transformStyle","transformRules","transformRule","transformCssText","_consumeCssProperties","_getInitialValueForProperty","getComputedStyle","getPropertyValue","mixinName","idx","applyPos","afterApplyPos","textBeforeApply","textAfterApply","defaults","_cssTextToMap","replacement","_atApplyToCssProperties","fallbacks","vars","mixinEntry","_replaceInitialOrInherit","out","sp","_invalidateMixinEntry","mixinAsProperties","mixinValues","combinedProps","oldProps","create","needToInvalidate","applyShim","elementNeedsScoping","contains","SVGElement","handler","mxns","mxn","documentElement","getRootNode","classes","Array","from","classIdx","observer","nativeCustomElements","delayedStart","requestAnimationFrame","listener","styleCache","typeMax","_validate","cacheEntry","ownPropertyNames","pn","store","tagname","styleElement","list","shift","entry","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","_elementsHaveApplied","nativeCss","watcherFlush","_generateScopeSelector","id","getStyleAst","styleAstToString","_gatherStyles","styles","_getCssBuild","querySelector","prepareTemplate","_prepared","hasMixins","_styleAst","_generateStaticStyle","_style","_ownPropertyNames","shadowroot","_prepareHost","_cssBuild","overrideProps","hasApplied","_isRootOwner","CustomStyle","CS","_documentDirty","findStyles","_revalidateApplyShim","_updateProperties","applyStyles","updateStyles","_updateNativeProperties","_applyStyleProperties","_applyToDescendants","_styleOwnerForNode","cachedScopeSelector","cachedStyle","oldScopeSelector","owner","ownerStyleInfo","ownerProperties","hostAndRootProps","propertyData","propertiesMatchingHost","_mixinOverrideStyles","overrides","removeProperty","setProperty","_transformCustomStyleForDocument","_applyCustomStyleToDocument","getComputedStyleValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode"],"mappings":"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","file":"webcomponents-hi-ce.min.js","sourcesContent":["(function () {\n'use strict';\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    constructor(doc) {\n      this.documents = {};\n      this._doc = doc;\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\n      }\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate an HTMLDocument from data.\n        const doc = makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(this._doc);\n      Promise.all([\n        runScripts(this._doc),\n        waitForStyles(this._doc)\n      ]).then(() => fireEvents(this._doc));\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      // Ensure we add load/error listeners before modifying urls or appending\n      // these to the main document.\n      whenElementLoaded(n);\n      if (n.href) {\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\n      }\n      if (n.src) {\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else if (n.localName === 'script') {\n        if (n.textContent) {\n          n.textContent += `\\n//# sourceURL=${base}`;\n        }\n        // NOTE: we override the type here, might need to keep track of original\n        // type and apply it to clone when running the script.\n        n.setAttribute('type', scriptType);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   * @param {!HTMLDocument} doc\n   * @return {Promise} Resolved when scripts are loaded.\n   */\n  function runScripts(doc) {\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = doc.createElement('script');\n        c.textContent = s.textContent;\n        if (s.src) {\n          c.setAttribute('src', s.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        // Catch failures, always return c.\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        s.parentNode.replaceChild(c, s);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n        });\n      });\n    }\n    return promise;\n  }\n\n  /**\n   * Waits for all the imported stylesheets/styles to be loaded.\n   * @param {!HTMLDocument} doc\n   * @return {Promise}\n   */\n  function waitForStyles(doc) {\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      // Catch failures, always return s\n      promises.push(\n        whenElementLoaded(s).catch(() => s)\n      );\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Clones styles and stylesheets links contained in imports and moves them\n   * as siblings of the root import link.\n   * @param {!HTMLLinkElement} importLink\n   */\n  function cloneAndMoveStyles(importLink) {\n    const n$ = importLink.import.querySelectorAll(stylesSelector);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      const clone = document.createElement(n.localName);\n      // Ensure we listen for load/error for this element.\n      whenElementLoaded(clone);\n      // Copy textContent and attributes.\n      clone.textContent = n.textContent;\n      for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n        clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n      }\n\n      // Remove old, add new.\n      n.parentNode.removeChild(n);\n      importLink.parentNode.insertBefore(clone, importLink);\n    }\n  }\n\n  /**\n   * Fires load/error events for loaded imports.\n   * @param {!HTMLDocument} doc\n   */\n  function fireEvents(doc) {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (doc.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__fired) {\n        n.__fired = true;\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        // Ensure the load promise is setup before firing the event.\n        whenElementLoaded(n);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  /**\n   * Creates a new document containing resource and normalizes urls accordingly.\n   * @param {string=} resource\n   * @param {string=} url\n   * @return {HTMLElement}\n   */\n  function makeDocument(resource, url) {\n    const content = /** @type {HTMLElement} */\n      (document.createElement('import-content'));\n    content.style.display = 'none';\n    if (url) {\n      content.setAttribute('import-href', url);\n    }\n    if (resource) {\n      content.innerHTML = resource;\n    }\n    // TODO(sorvell): this is specific to users of <dom-module> (Polymer).\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n\n  /**\n   * Calls the callback when all HTMLImports in the document at call time\n   * (or at least document ready) have loaded.\n   * @param {function(!HTMLImportInfo)=} callback\n   * @param {HTMLDocument=} doc\n   * @return {Promise}\n   */\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n\n  /**\n   * Resolved when document is in ready state.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function whenDocumentReady(doc) {\n    return new Promise((resolve) => {\n      if (doc.readyState !== 'loading') {\n        resolve(doc);\n      } else {\n        doc.addEventListener('readystatechange', () => {\n          if (doc.readyState !== 'loading') {\n            resolve(doc);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resolved when all imports are done loading. The promise returns the import\n   * details as HTMLImportInfo object.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\n      allImports: [],\n      loadedImports: [],\n      errorImports: []\n    });\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      importInfo.allImports.push(imp);\n      promises.push(whenElementLoaded(imp).then((imp) => {\n        importInfo.loadedImports.push(imp);\n        return imp;\n      }).catch((imp) => {\n        importInfo.errorImports.push(imp);\n        // Capture failures, always return imp.\n        return imp;\n      }));\n    }\n    // Return aggregated info.\n    return Promise.all(promises).then(() => importInfo);\n  }\n\n  new Importer(document);\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady((detail) =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  var forceShady = scope.flags.shadydom;\n  if (forceShady) {\n    window.ShadyDOM = window.ShadyDOM || {};\n    ShadyDOM.force = forceShady;\n  }\n\n  var forceCE = scope.flags.register || scope.flags.ce;\n  if (forceCE && window.customElements) {\n    customElements.forcePolyfill = forceCE;\n  }\n\n})(window.WebComponents);\n\n/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n(function(){function c(){this.a=new Map;this.j=new Map;this.h=new Map;this.o=new Set;this.C=new MutationObserver(this.D.bind(this));this.f=null;this.F=new Set;this.enableFlush=!0;this.s=!1;this.m=null;}function g(){return h.customElements}function l(a){if(!/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a)||-1!==t.indexOf(a))return Error(\"The element name '\"+a+\"' is not valid.\")}function m(a,b,e,d){var c=g();a=e?n.call(a,b,e):n.call(a,b);(b=c.a.get(b.toLowerCase()))&&c.u(a,b,d);c.b(a);return a}\nfunction p(a,b,e,d){b=b.toLowerCase();var c=a.getAttribute(b);d.call(a,b,e);1==a.__$CE_upgraded&&(d=g().a.get(a.localName),e=d.A,(d=d.i)&&0<=e.indexOf(b)&&(e=a.getAttribute(b),e!==c&&d.call(a,b,c,e,null)));}var f=document,h=window;if(g()&&(g().g=function(){},!g().forcePolyfill))return;var t=\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \");c.prototype.L=function(a,b){function e(a){var b=f[a];if(void 0!==b&&\"function\"!==typeof b)throw Error(c+\n\" '\"+a+\"' is not a Function\");return b}if(\"function\"!==typeof b)throw new TypeError(\"constructor must be a Constructor\");var d=l(a);if(d)throw d;if(this.a.has(a))throw Error(\"An element with name '\"+a+\"' is already defined\");if(this.j.has(b))throw Error(\"Definition failed for '\"+a+\"': The constructor is already used.\");var c=a,f=b.prototype;if(\"object\"!==typeof f)throw new TypeError(\"Definition failed for '\"+a+\"': constructor.prototype must be an object\");var d=e(\"connectedCallback\"),g=e(\"disconnectedCallback\"),\nk=e(\"attributeChangedCallback\");this.a.set(c,{name:a,localName:c,constructor:b,v:d,w:g,i:k,A:k&&b.observedAttributes||[]});this.j.set(b,c);this.K();if(a=this.h.get(c))a.resolve(void 0),this.h.delete(c);};c.prototype.get=function(a){return(a=this.a.get(a))?a.constructor:void 0};c.prototype.M=function(a){var b=l(a);if(b)return Promise.reject(b);if(this.a.has(a))return Promise.resolve();if(b=this.h.get(a))return b.N;var e,d=new Promise(function(a){e=a;}),b={N:d,resolve:e};this.h.set(a,b);return d};c.prototype.g=\nfunction(){this.enableFlush&&(this.l(this.m.takeRecords()),this.D(this.C.takeRecords()),this.o.forEach(function(a){this.l(a.takeRecords());},this));};c.prototype.K=function(){var a=this;if(!this.s){this.s=!0;var b=function(){a.s=!1;a.m||(a.m=a.b(f));a.c(f.childNodes);};window.HTMLImports?window.HTMLImports.whenReady(b):b();}};c.prototype.I=function(a){this.f=a;};c.prototype.b=function(a){if(null!=a.__$CE_observer)return a.__$CE_observer;a.__$CE_observer=new MutationObserver(this.l.bind(this));a.__$CE_observer.observe(a,\n{childList:!0,subtree:!0});this.enableFlush&&this.o.add(a.__$CE_observer);return a.__$CE_observer};c.prototype.J=function(a){null!=a.__$CE_observer&&(a.__$CE_observer.disconnect(),this.enableFlush&&this.o.delete(a.__$CE_observer),a.__$CE_observer=null);};c.prototype.l=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(\"childList\"===e.type){var d=e.removedNodes;this.c(e.addedNodes);this.H(d);}}};c.prototype.c=function(a,b){b=b||new Set;for(var e=0;e<a.length;e++){var d=a[e];if(d.nodeType===Node.ELEMENT_NODE){this.J(d);\nd=f.createTreeWalker(d,NodeFilter.SHOW_ELEMENT,null,!1);do this.G(d.currentNode,b);while(d.nextNode())}}};c.prototype.G=function(a,b){if(!b.has(a)){b.add(a);var e=this.a.get(a.localName);if(e){a.__$CE_upgraded||this.u(a,e,!0);var d;if(d=a.__$CE_upgraded&&!a.__$CE_attached)a:{d=a;do{if(d.__$CE_attached||d.nodeType===Node.DOCUMENT_NODE){d=!0;break a}d=d.parentNode||d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host;}while(d);d=!1;}d&&(a.__$CE_attached=!0,e.v&&e.v.call(a));}a.shadowRoot&&this.c(a.shadowRoot.childNodes,\nb);\"LINK\"===a.tagName&&a.rel&&-1!==a.rel.toLowerCase().split(\" \").indexOf(\"import\")&&this.B(a,b);}};c.prototype.B=function(a,b){var e=a.import;if(e)b.has(e)||(b.add(e),e.__$CE_observer||this.b(e),this.c(e.childNodes,b));else if(b=a.href,!this.F.has(b)){this.F.add(b);var d=this,c=function(){a.removeEventListener(\"load\",c);a.import.__$CE_observer||d.b(a.import);d.c(a.import.childNodes);};a.addEventListener(\"load\",c);}};c.prototype.H=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(e.nodeType===Node.ELEMENT_NODE){this.b(e);\ne=f.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null,!1);do{var d=e.currentNode;if(d.__$CE_upgraded&&d.__$CE_attached){d.__$CE_attached=!1;var c=this.a.get(d.localName);c&&c.w&&c.w.call(d);}}while(e.nextNode())}}};c.prototype.u=function(a,b,e){a.__proto__=b.constructor.prototype;e&&(this.I(a),new b.constructor,a.__$CE_upgraded=!0,console.assert(!this.f));e=b.A;if((b=b.i)&&0<e.length){this.C.observe(a,{attributes:!0,attributeOldValue:!0,attributeFilter:e});for(var d=0;d<e.length;d++){var c=e[d];if(a.hasAttribute(c)){var f=\na.getAttribute(c);b.call(a,c,null,f,null);}}}};c.prototype.D=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(\"attributes\"===c.type){var d=c.target,f=this.a.get(d.localName),g=c.attributeName,h=c.oldValue,k=d.getAttribute(g);k!==h&&f.i.call(d,g,h,k,c.attributeNamespace);}}};window.CustomElementRegistry=c;c.prototype.define=c.prototype.L;c.prototype.get=c.prototype.get;c.prototype.whenDefined=c.prototype.M;c.prototype.flush=c.prototype.g;c.prototype.polyfilled=!0;c.prototype._observeRoot=c.prototype.b;\nc.prototype._addImport=c.prototype.B;var q=h.HTMLElement;c.prototype.nativeHTMLElement=q;h.HTMLElement=function(){var a=g();if(a.f){var b=a.f;a.f=null;return b}if(this.constructor)return a=a.j.get(this.constructor),m(f,a,void 0,!1);throw Error(\"Unknown constructor. Did you call customElements.define()?\");};h.HTMLElement.prototype=q.prototype;var n=f.createElement;f.createElement=function(a,b){return m(f,a,b,!0)};var u=f.createElementNS;f.createElementNS=function(a,b){return\"http://www.w3.org/1999/xhtml\"===\na?f.createElement(b):u.call(f,a,b)};var r=Element.prototype.attachShadow;r&&Object.defineProperty(Element.prototype,\"attachShadow\",{value:function(a){a=r.call(this,a);g().b(a);return a}});var v=f.importNode;f.importNode=function(a,b){a=v.call(f,a,b);g().c(a.nodeType===Node.ELEMENT_NODE?[a]:a.childNodes);return a};var w=Element.prototype.setAttribute;Element.prototype.setAttribute=function(a,b){p(this,a,b,w);};var x=Element.prototype.removeAttribute;Element.prototype.removeAttribute=function(a){p(this,\na,null,x);};Object.defineProperty(window,\"customElements\",{value:new c,configurable:!0,enumerable:!0});window.CustomElements={takeRecords:function(){g().g&&g().g();}};})();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n// given a string of css, return a simple rule tree\nfunction parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nfunction stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nfunction removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nlet types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n};\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n};\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nlet nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nlet nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nfunction toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nfunction rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nfunction isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nfunction forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nfunction applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nfunction applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nfunction createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nfunction applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\n\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nfunction setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nlet rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nvar StyleTransformer$1 = new StyleTransformer();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nvar templateMap = {};\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst promise = Promise.resolve();\n\nclass StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx$$1 = rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx$$1.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(rx.BRACKETED, '')\n      .replace(rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        rx.MIXIN_MATCH.lastIndex = 0;\n        m = rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer$1._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer$1._transformRuleCss(\n          rule,\n          StyleTransformer$1._transformComplexSelector,\n          StyleTransformer$1._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer$1\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(rx.HOST_PREFIX + rxHostSelector +\n      rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer$1.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = rulesForStyle(style);\n    let self = this;\n    style.textContent = toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nvar StyleProperties$1 = new StyleProperties();\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nclass StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    };\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nlet flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer$1.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer$1.SCOPE_NAME) < 0)));\n  };\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer$1.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer$1.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer$1.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  };\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    };\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          };\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  };\n}\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n// TODO(dfreedm): consider spliting into separate global\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    flush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer$1.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = applyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      applyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties$1.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer$1.elementStyles(info, rules);\n    if (cssText.length) {\n      return applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          applyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer$1.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties$1.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties$1.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties$1.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties$1.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties;\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties$1.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = rulesForStyle(style);\n    forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer$1.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer$1.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        applyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = rulesForStyle(style);\n      applyShim.transformRules(ast);\n      style.textContent = toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties$1.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer$1.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer$1.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties$1.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (window.HTMLImports) {\n    HTMLImports.whenReady(function() {\n      requestAnimationFrame(function() {\n        window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n      });\n    });\n  } else {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  }\n\n})(window.WebComponents);\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n * Polyfills loaded: HTML Imports, Custom Elements\n * Used in: Safari 10, Firefox once SD is shipped\n */\n\n//TODO(notwaldorf): this is temporary and should be removed.\n\n}());\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path._resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path._resolveUrl(text, linkUrl);\n      }\n    },\n\n    _resolveUrl: function(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const isOk = ((request.status >= 200 && request.status < 300) ||\n            request.status === 304 || request.status === 0);\n          const resource = (request.response || request.responseText);\n          callback(!isOk, resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    constructor(doc) {\n      this.documents = {};\n      this._doc = doc;\n      // Make sure to catch any imports that are in the process of loading\n      // when this script is run.\n      const imports = doc.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = imports.length; i < l; i++) {\n        whenElementLoaded(imports[i]);\n      }\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n\n      if (!useNative) {\n        this._loader = new Loader(\n          this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n        );\n        whenDocumentReady(doc).then(() => this._loadSubtree(doc));\n      }\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // We've already seen a document at this url, return.\n      if (this.documents[url] !== undefined) {\n        return;\n      }\n      if (err) {\n        this.documents[url] = null;\n      } else {\n        // Generate an HTMLDocument from data.\n        const doc = makeDocument(resource, redirectedUrl || url);\n        // note, we cannot use MO to detect parsed nodes because\n        // SD polyfill does not report these as mutations.\n        this._loadSubtree(doc);\n        this.documents[url] = doc;\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(this._doc);\n      Promise.all([\n        runScripts(this._doc),\n        waitForStyles(this._doc)\n      ]).then(() => fireEvents(this._doc));\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          // If in the main document, observe for any imports added later.\n          if (element === document) {\n            // In IE/Edge, when imports have link stylesheets/styles, the cascading order\n            // isn't respected https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n            if (isIE || isEdge) {\n              cloneAndMoveStyles(n);\n            }\n            this._observe(n.import);\n          }\n          n.appendChild(n.import);\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        for (let i = 0, l = m.addedNodes ? m.addedNodes.length : 0; i < l; i++) {\n          const n = /** @type {Element} */ (m.addedNodes[i]);\n          if (n && isImportLink(n)) {\n            if (useNative) {\n              whenElementLoaded(n);\n            } else {\n              this._loader.addNode(n);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      // Ensure we add load/error listeners before modifying urls or appending\n      // these to the main document.\n      whenElementLoaded(n);\n      if (n.href) {\n        n.setAttribute('href', Path.replaceAttrUrl(n.getAttribute('href'), base));\n      }\n      if (n.src) {\n        n.setAttribute('src', Path.replaceAttrUrl(n.getAttribute('src'), base));\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else if (n.localName === 'script') {\n        if (n.textContent) {\n          n.textContent += `\\n//# sourceURL=${base}`;\n        }\n        // NOTE: we override the type here, might need to keep track of original\n        // type and apply it to clone when running the script.\n        n.setAttribute('type', scriptType);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   * @param {!HTMLDocument} doc\n   * @return {Promise} Resolved when scripts are loaded.\n   */\n  function runScripts(doc) {\n    const s$ = doc.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = doc.createElement('script');\n        c.textContent = s.textContent;\n        if (s.src) {\n          c.setAttribute('src', s.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        // Catch failures, always return c.\n        const whenLoadedPromise = whenElementLoaded(c).catch(() => c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        s.parentNode.replaceChild(c, s);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n        });\n      });\n    }\n    return promise;\n  }\n\n  /**\n   * Waits for all the imported stylesheets/styles to be loaded.\n   * @param {!HTMLDocument} doc\n   * @return {Promise}\n   */\n  function waitForStyles(doc) {\n    const s$ = doc.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n      // Catch failures, always return s\n      promises.push(\n        whenElementLoaded(s).catch(() => s)\n      );\n    }\n    return Promise.all(promises);\n  }\n\n  /**\n   * Clones styles and stylesheets links contained in imports and moves them\n   * as siblings of the root import link.\n   * @param {!HTMLLinkElement} importLink\n   */\n  function cloneAndMoveStyles(importLink) {\n    const n$ = importLink.import.querySelectorAll(stylesSelector);\n    for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n      const clone = document.createElement(n.localName);\n      // Ensure we listen for load/error for this element.\n      whenElementLoaded(clone);\n      // Copy textContent and attributes.\n      clone.textContent = n.textContent;\n      for (let j = 0, ll = n.attributes.length; j < ll; j++) {\n        clone.setAttribute(n.attributes[j].name, n.attributes[j].value);\n      }\n\n      // Remove old, add new.\n      n.parentNode.removeChild(n);\n      importLink.parentNode.insertBefore(clone, importLink);\n    }\n  }\n\n  /**\n   * Fires load/error events for loaded imports.\n   * @param {!HTMLDocument} doc\n   */\n  function fireEvents(doc) {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (doc.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__fired) {\n        n.__fired = true;\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        // Ensure the load promise is setup before firing the event.\n        whenElementLoaded(n);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      element.__loadPromise = new Promise((resolve, reject) => {\n        if (isElementLoaded(element)) {\n          resolve(element);\n        } else {\n          element.addEventListener('load', () => resolve(element));\n          element.addEventListener('error', () => reject(element));\n        }\n      });\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  /**\n   * Creates a new document containing resource and normalizes urls accordingly.\n   * @param {string=} resource\n   * @param {string=} url\n   * @return {HTMLElement}\n   */\n  function makeDocument(resource, url) {\n    const content = /** @type {HTMLElement} */\n      (document.createElement('import-content'));\n    content.style.display = 'none';\n    if (url) {\n      content.setAttribute('import-href', url);\n    }\n    if (resource) {\n      content.innerHTML = resource;\n    }\n    // TODO(sorvell): this is specific to users of <dom-module> (Polymer).\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n\n  /**\n   * Calls the callback when all HTMLImports in the document at call time\n   * (or at least document ready) have loaded.\n   * @param {function(!HTMLImportInfo)=} callback\n   * @param {HTMLDocument=} doc\n   * @return {Promise}\n   */\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n\n  /**\n   * Resolved when document is in ready state.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function whenDocumentReady(doc) {\n    return new Promise((resolve) => {\n      if (doc.readyState !== 'loading') {\n        resolve(doc);\n      } else {\n        doc.addEventListener('readystatechange', () => {\n          if (doc.readyState !== 'loading') {\n            resolve(doc);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Resolved when all imports are done loading. The promise returns the import\n   * details as HTMLImportInfo object.\n   * @param {!HTMLDocument} doc\n   * @returns {Promise}\n   */\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    const promises = [];\n    const importInfo = /** @type {!HTMLImportInfo} */ ({\n      allImports: [],\n      loadedImports: [],\n      errorImports: []\n    });\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      // Skip nested imports.\n      if (MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`)) {\n        continue;\n      }\n      importInfo.allImports.push(imp);\n      promises.push(whenElementLoaded(imp).then((imp) => {\n        importInfo.loadedImports.push(imp);\n        return imp;\n      }).catch((imp) => {\n        importInfo.errorImports.push(imp);\n        // Capture failures, always return imp.\n        return imp;\n      }));\n    }\n    // Return aggregated info.\n    return Promise.all(promises).then(() => importInfo);\n  }\n\n  new Importer(document);\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady((detail) =>\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  var forceShady = scope.flags.shadydom;\n  if (forceShady) {\n    window.ShadyDOM = window.ShadyDOM || {};\n    ShadyDOM.force = forceShady;\n  }\n\n  var forceCE = scope.flags.register || scope.flags.ce;\n  if (forceCE && window.customElements) {\n    customElements.forcePolyfill = forceCE;\n  }\n\n})(window.WebComponents);\n","/*\n\n Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n Code distributed by Google as part of the polymer project is also\n subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';(function(){function c(){this.a=new Map;this.j=new Map;this.h=new Map;this.o=new Set;this.C=new MutationObserver(this.D.bind(this));this.f=null;this.F=new Set;this.enableFlush=!0;this.s=!1;this.m=null}function g(){return h.customElements}function l(a){if(!/^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(a)||-1!==t.indexOf(a))return Error(\"The element name '\"+a+\"' is not valid.\")}function m(a,b,e,d){var c=g();a=e?n.call(a,b,e):n.call(a,b);(b=c.a.get(b.toLowerCase()))&&c.u(a,b,d);c.b(a);return a}\nfunction p(a,b,e,d){b=b.toLowerCase();var c=a.getAttribute(b);d.call(a,b,e);1==a.__$CE_upgraded&&(d=g().a.get(a.localName),e=d.A,(d=d.i)&&0<=e.indexOf(b)&&(e=a.getAttribute(b),e!==c&&d.call(a,b,c,e,null)))}var f=document,h=window;if(g()&&(g().g=function(){},!g().forcePolyfill))return;var t=\"annotation-xml color-profile font-face font-face-src font-face-uri font-face-format font-face-name missing-glyph\".split(\" \");c.prototype.L=function(a,b){function e(a){var b=f[a];if(void 0!==b&&\"function\"!==typeof b)throw Error(c+\n\" '\"+a+\"' is not a Function\");return b}if(\"function\"!==typeof b)throw new TypeError(\"constructor must be a Constructor\");var d=l(a);if(d)throw d;if(this.a.has(a))throw Error(\"An element with name '\"+a+\"' is already defined\");if(this.j.has(b))throw Error(\"Definition failed for '\"+a+\"': The constructor is already used.\");var c=a,f=b.prototype;if(\"object\"!==typeof f)throw new TypeError(\"Definition failed for '\"+a+\"': constructor.prototype must be an object\");var d=e(\"connectedCallback\"),g=e(\"disconnectedCallback\"),\nk=e(\"attributeChangedCallback\");this.a.set(c,{name:a,localName:c,constructor:b,v:d,w:g,i:k,A:k&&b.observedAttributes||[]});this.j.set(b,c);this.K();if(a=this.h.get(c))a.resolve(void 0),this.h.delete(c)};c.prototype.get=function(a){return(a=this.a.get(a))?a.constructor:void 0};c.prototype.M=function(a){var b=l(a);if(b)return Promise.reject(b);if(this.a.has(a))return Promise.resolve();if(b=this.h.get(a))return b.N;var e,d=new Promise(function(a){e=a}),b={N:d,resolve:e};this.h.set(a,b);return d};c.prototype.g=\nfunction(){this.enableFlush&&(this.l(this.m.takeRecords()),this.D(this.C.takeRecords()),this.o.forEach(function(a){this.l(a.takeRecords())},this))};c.prototype.K=function(){var a=this;if(!this.s){this.s=!0;var b=function(){a.s=!1;a.m||(a.m=a.b(f));a.c(f.childNodes)};window.HTMLImports?window.HTMLImports.whenReady(b):b()}};c.prototype.I=function(a){this.f=a};c.prototype.b=function(a){if(null!=a.__$CE_observer)return a.__$CE_observer;a.__$CE_observer=new MutationObserver(this.l.bind(this));a.__$CE_observer.observe(a,\n{childList:!0,subtree:!0});this.enableFlush&&this.o.add(a.__$CE_observer);return a.__$CE_observer};c.prototype.J=function(a){null!=a.__$CE_observer&&(a.__$CE_observer.disconnect(),this.enableFlush&&this.o.delete(a.__$CE_observer),a.__$CE_observer=null)};c.prototype.l=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(\"childList\"===e.type){var d=e.removedNodes;this.c(e.addedNodes);this.H(d)}}};c.prototype.c=function(a,b){b=b||new Set;for(var e=0;e<a.length;e++){var d=a[e];if(d.nodeType===Node.ELEMENT_NODE){this.J(d);\nd=f.createTreeWalker(d,NodeFilter.SHOW_ELEMENT,null,!1);do this.G(d.currentNode,b);while(d.nextNode())}}};c.prototype.G=function(a,b){if(!b.has(a)){b.add(a);var e=this.a.get(a.localName);if(e){a.__$CE_upgraded||this.u(a,e,!0);var d;if(d=a.__$CE_upgraded&&!a.__$CE_attached)a:{d=a;do{if(d.__$CE_attached||d.nodeType===Node.DOCUMENT_NODE){d=!0;break a}d=d.parentNode||d.nodeType===Node.DOCUMENT_FRAGMENT_NODE&&d.host}while(d);d=!1}d&&(a.__$CE_attached=!0,e.v&&e.v.call(a))}a.shadowRoot&&this.c(a.shadowRoot.childNodes,\nb);\"LINK\"===a.tagName&&a.rel&&-1!==a.rel.toLowerCase().split(\" \").indexOf(\"import\")&&this.B(a,b)}};c.prototype.B=function(a,b){var e=a.import;if(e)b.has(e)||(b.add(e),e.__$CE_observer||this.b(e),this.c(e.childNodes,b));else if(b=a.href,!this.F.has(b)){this.F.add(b);var d=this,c=function(){a.removeEventListener(\"load\",c);a.import.__$CE_observer||d.b(a.import);d.c(a.import.childNodes)};a.addEventListener(\"load\",c)}};c.prototype.H=function(a){for(var b=0;b<a.length;b++){var e=a[b];if(e.nodeType===Node.ELEMENT_NODE){this.b(e);\ne=f.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null,!1);do{var d=e.currentNode;if(d.__$CE_upgraded&&d.__$CE_attached){d.__$CE_attached=!1;var c=this.a.get(d.localName);c&&c.w&&c.w.call(d)}}while(e.nextNode())}}};c.prototype.u=function(a,b,e){a.__proto__=b.constructor.prototype;e&&(this.I(a),new b.constructor,a.__$CE_upgraded=!0,console.assert(!this.f));e=b.A;if((b=b.i)&&0<e.length){this.C.observe(a,{attributes:!0,attributeOldValue:!0,attributeFilter:e});for(var d=0;d<e.length;d++){var c=e[d];if(a.hasAttribute(c)){var f=\na.getAttribute(c);b.call(a,c,null,f,null)}}}};c.prototype.D=function(a){for(var b=0;b<a.length;b++){var c=a[b];if(\"attributes\"===c.type){var d=c.target,f=this.a.get(d.localName),g=c.attributeName,h=c.oldValue,k=d.getAttribute(g);k!==h&&f.i.call(d,g,h,k,c.attributeNamespace)}}};window.CustomElementRegistry=c;c.prototype.define=c.prototype.L;c.prototype.get=c.prototype.get;c.prototype.whenDefined=c.prototype.M;c.prototype.flush=c.prototype.g;c.prototype.polyfilled=!0;c.prototype._observeRoot=c.prototype.b;\nc.prototype._addImport=c.prototype.B;var q=h.HTMLElement;c.prototype.nativeHTMLElement=q;h.HTMLElement=function(){var a=g();if(a.f){var b=a.f;a.f=null;return b}if(this.constructor)return a=a.j.get(this.constructor),m(f,a,void 0,!1);throw Error(\"Unknown constructor. Did you call customElements.define()?\");};h.HTMLElement.prototype=q.prototype;var n=f.createElement;f.createElement=function(a,b){return m(f,a,b,!0)};var u=f.createElementNS;f.createElementNS=function(a,b){return\"http://www.w3.org/1999/xhtml\"===\na?f.createElement(b):u.call(f,a,b)};var r=Element.prototype.attachShadow;r&&Object.defineProperty(Element.prototype,\"attachShadow\",{value:function(a){a=r.call(this,a);g().b(a);return a}});var v=f.importNode;f.importNode=function(a,b){a=v.call(f,a,b);g().c(a.nodeType===Node.ELEMENT_NODE?[a]:a.childNodes);return a};var w=Element.prototype.setAttribute;Element.prototype.setAttribute=function(a,b){p(this,a,b,w)};var x=Element.prototype.removeAttribute;Element.prototype.removeAttribute=function(a){p(this,\na,null,x)};Object.defineProperty(window,\"customElements\",{value:new c,configurable:!0,enumerable:!0});window.CustomElements={takeRecords:function(){g().g&&g().g()}}})();\n\n//# sourceMappingURL=custom-elements.min.js.map\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (window.HTMLImports) {\n    HTMLImports.whenReady(function() {\n      requestAnimationFrame(function() {\n        window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n      });\n    });\n  } else {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  }\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}