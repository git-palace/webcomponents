{"version":3,"file":"webcomponents-none.min.js","sources":["src/pre-polyfill.js","bower_components/shadycss/src/css-parse.js","bower_components/shadycss/src/style-settings.js","bower_components/shadycss/src/style-util.js","bower_components/shadycss/src/style-transformer.js","bower_components/shadycss/src/template-map.js","bower_components/shadycss/src/style-info.js","bower_components/shadycss/src/style-properties.js","bower_components/shadycss/src/style-placeholder.js","bower_components/shadycss/src/style-cache.js","bower_components/shadycss/src/apply-shim.js","bower_components/shadycss/src/document-watcher.js","bower_components/shadycss/src/ShadyCSS.js","src/post-polyfill.js","src/unresolved.js","entrypoints/webcomponents-none-index.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  var forceShady = scope.flags.shadydom;\n  if (forceShady) {\n    window.ShadyDOM = window.ShadyDOM || {};\n    ShadyDOM.force = forceShady;\n  }\n\n  var forceCE = scope.flags.register || scope.flags.ce;\n  if (forceCE && window.customElements) {\n    customElements.forcePolyfill = forceCE;\n  }\n\n})(window.WebComponents);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n// given a string of css, return a simple rule tree\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\nfunction lex(text) {\n  let root = {\n    start: 0,\n    end: text.length\n  };\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n.rules) {\n        n.rules = [];\n      }\n      let p = n;\n      let previous = p.rules[p.rules.length - 1];\n      n = {\n        start: i + 1,\n        parent: p,\n        previous: previous\n      };\n      p.rules.push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n.end = i + 1;\n      n = n.parent || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\nfunction parseCss(node, text) {\n  let t = text.substring(node.start, node.end - 1);\n  node.parsedCssText = node.cssText = t.trim();\n  if (node.parent) {\n    let ss = node.previous ? node.previous.end : node.parent.start;\n    t = text.substring(ss, node.start - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node.parsedSelector = node.selector = t.trim();\n    node.atRule = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node.atRule) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node.type = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node.type = types.KEYFRAMES_RULE;\n        node.keyframesName =\n          node.selector.split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node.type = types.MIXIN_RULE;\n      } else {\n        node.type = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node.rules;\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n// conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n// expanded form that doesn't require trailing space `\\000033`\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n// stringify parsed css.\nexport function stringify(node, preserveProperties, text) {\n  text = text || '';\n  // calc rule cssText\n  let cssText = '';\n  if (node.cssText || node.rules) {\n    let r$ = node.rules;\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node.cssText :\n        removeCustomProps(node.cssText);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node.selector) {\n      text += node.selector + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node.selector) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\nfunction _hasMixinRules(rules) {\n  return rules[0].selector.indexOf(VAR_START) === 0;\n}\n\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\nexport let types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nlet OPEN_BRACE = '{';\nlet CLOSE_BRACE = '}';\n\n// helper regexp's\nlet RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nlet VAR_START = '--';\nlet MEDIA_START = '@media';\nlet AT_START = '@';\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);\n// chrome 49 has semi-working css vars, check if box-shadow works\n// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\nexport let nativeCssVariables = (!navigator.userAgent.match('AppleWebKit/601') &&\nwindow.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n\n// experimental support for native @apply\nfunction detectNativeApply() {\n  let style = document.createElement('style');\n  style.textContent = '.foo { @apply --foo }';\n  document.head.appendChild(style);\n  let nativeCssApply = (style.sheet.cssRules[0].cssText.indexOf('apply') >= 0);\n  document.head.removeChild(style);\n  return nativeCssApply;\n}\n\nexport let nativeCssApply = false && detectNativeApply();\n\nfunction parseSettings(settings) {\n  if (settings) {\n    nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;\n    nativeShadow = nativeShadow && !settings.shimshadow;\n  }\n}\n\nif (window.ShadyCSS) {\n  parseSettings(window.ShadyCSS);\n} else if (window.WebComponents) {\n  parseSettings(window.WebComponents.flags);\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings'\nimport {parse, stringify, types} from './css-parse'\n\nexport function toCssText (rules, callback) {\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\nexport function rulesForStyle(style) {\n  if (!style.__cssRules && style.textContent) {\n    style.__cssRules = parse(style.textContent);\n  }\n  return style.__cssRules;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\nexport function isKeyframesSelector(rule) {\n  return rule.parent &&\n  rule.parent.type === types.KEYFRAMES_RULE;\n}\n\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  if (onlyActiveRules) {\n    if (node.type === types.MEDIA_RULE) {\n      let matchMedia = node.selector.match(rx.MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (node.type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    node.type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (node.type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node.rules;\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  return applyStyle(style, target, contextNode);\n}\n\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n  target.firstChild;\n  lastHeadApplyNode = style;\n  return target.insertBefore(style, after);\n}\n\nexport function createScopeStyle(cssText, moniker) {\n  let style = document.createElement('style');\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode.nextSibling : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n// cssBuildTypeForModule: function (module) {\n//   let dm = Polymer.DomModule.import(module);\n//   if (dm) {\n//     return getCssBuildType(dm);\n//   }\n// },\n//\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n// Walk from text[start] matching parens\n// returns position of the outer end paren\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (window.ShadyDOM) {\n    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);\n  } else {\n    element.setAttribute('class', value);\n  }\n}\n\nexport let rx = {\n  VAR_ASSIGN: /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\\s}])|$)/gi,\n  MIXIN_MATCH: /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi,\n  VAR_CONSUMED: /(--[\\w-]+)\\s*([:,;)]|$)/gi,\n  ANIMATION_MATCH: /(animation\\s*:)|(animation-name\\s*:)/,\n  MEDIA_MATCH: /@media[^(]*(\\([^)]*\\))/,\n  IS_VAR: /^--/,\n  BRACKETED: /\\{[^}]*\\}/g,\n  HOST_PREFIX: '(?:^|[^.#[:])',\n  HOST_SUFFIX: '($|[.:[\\\\s>+~])'\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as StyleUtil from './style-util'\nimport {nativeShadow} from './style-settings'\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node.__styleScoped) {\n      node.__styleScoped = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element.__cssBuild;\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = (nativeShadow || cssBuildType === 'shady') ?\n    StyleUtil.toCssText(styleRules, callback) :\n    this.css(styleRules, element.is, element.extends, callback) + '\\n\\n';\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? '[is=' +  scope + ']' : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  // transforms a css rule to a scoped rule.\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule.selector = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`);\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule.selector = rule.parsedSelector;\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  normalizeRootSelector(rule) {\n    if (rule.selector === ROOT) {\n      rule.selector = 'html';\n    }\n  }\n\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=\\[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport default {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport templateMap from './template-map'\n\nconst promise = Promise.resolve();\n\nexport default class StyleInfo {\n  static get(node) {\n    return node.__styleInfo;\n  }\n  static set(node, styleInfo) {\n    node.__styleInfo = styleInfo;\n    return styleInfo;\n  }\n  static invalidate(elementName) {\n    if (templateMap[elementName]) {\n      templateMap[elementName]._applyShimInvalid = true;\n    }\n  }\n  /*\n  the template is marked as `validating` for one microtask so that all instances\n  found in the tree crawl of `applyStyle` will update themselves,\n  but the template will only be updated once.\n  */\n  static startValidating(elementName) {\n    const template = templateMap[elementName];\n    if (!template._validating) {\n      template._validating = true;\n      promise.then(() => {\n        template._applyShimInvalid = false;\n        template._validating = false;\n      });\n    }\n  }\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    this.styleRules = ast || null;\n    this.placeholder = placeholder || null;\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    this.overrideStyleProperties = null;\n    this.elementName = elementName || '';\n    this.cssBuild = cssBuild || '';\n    this.typeExtension = typeExtension || '';\n    this.styleProperties = null;\n    this.scopeSelector = null;\n    this.customStyle = null;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment} from './css-parse'\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleInfo from './style-info'\n\n// TODO: dedupe with shady\nconst p = window.Element.prototype;\nconst matchesSelector = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n  // decorates styles with rule info and returns an array of used style\n  // property names\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule.rules = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = StyleUtil.rx.VAR_ASSIGN;\n      let cssText = rule.parsedCssText;\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule.parsedCssText);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(StyleUtil.rx.BRACKETED, '')\n      .replace(StyleUtil.rx.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = StyleUtil.rx.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;\n        m = StyleUtil.rx.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule.cssText = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule.cssText;\n    let output = rule.cssText;\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule.cssText = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule.parsedSelector;\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let hostScope = scope.is ?\n    StyleTransformer._calcHostScope(scope.is, scope.extends) :\n    'html';\n    let parsedSelector = rule.parsedSelector;\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host under ShadowDOM because `:host` does not work with `matches`\n      if (nativeShadow && !rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(scope.is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules.__cssBuild;\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let hostSelector = StyleTransformer\n      ._calcHostScope(element.is, element.extends);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector +\n      StyleUtil.rx.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule.cssText) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule.keyframesName] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n  // Transforms `@keyframes` names to be unique for the current host.\n  // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n  _scopeKeyframes(rule, scopeId) {\n    rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');\n    rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    rule.selector = rule.transformedSelector.replace(\n        rule.keyframesName, rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule.selector;\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule.selector = parts.join(',');\n  }\n\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s._useCount--;\n      if (s._useCount <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style._useCount = style._useCount || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style._useCount++;\n      }\n      styleInfo.customStyle = style;\n    }\n    // @media rules may be stale in IE 10 and 11\n    if (IS_IE) {\n      style.textContent = style.textContent;\n    }\n    return style;\n  }\n\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(style);\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(rule) {\n      let css = rule.cssText = rule.parsedCssText;\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(css);\n        // replace with reified properties, scenario is same as mixin\n        rule.cssText = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util'\nimport {nativeShadow} from './style-settings'\n\nlet placeholderMap = {};\n\nconst ce = window.customElements;\nif (ce && !nativeShadow) {\n  const origDefine = ce.define;\n  ce.define = function(name, clazz, options) {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(ce, name, clazz, options);\n  };\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * The apply shim simulates the behavior of `@apply` proposed at\n * https://tabatkins.github.io/specs/css-apply-rule/.\n * The approach is to convert a property like this:\n *\n *    --foo: {color: red; background: blue;}\n *\n * to this:\n *\n *    --foo_-_color: red;\n *    --foo_-_background: blue;\n *\n * Then where `@apply --foo` is used, that is converted to:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background);\n *\n * This approach generally works but there are some issues and limitations.\n * Consider, for example, that somewhere *between* where `--foo` is set and used,\n * another element sets it to:\n *\n *    --foo: { border: 2px solid red; }\n *\n * We must now ensure that the color and background from the previous setting\n * do not apply. This is accomplished by changing the property set to this:\n *\n *    --foo_-_border: 2px solid red;\n *    --foo_-_color: initial;\n *    --foo_-_background: initial;\n *\n * This works but introduces one new issue.\n * Consider this setup at the point where the `@apply` is used:\n *\n *    background: orange;\n *    @apply --foo;\n *\n * In this case the background will be unset (initial) rather than the desired\n * `orange`. We address this by altering the property set to use a fallback\n * value like this:\n *\n *    color: var(--foo_-_color);\n *    background: var(--foo_-_background, orange);\n *    border: var(--foo_-_border);\n *\n * Note that the default is retained in the property set and the `background` is\n * the desired `orange`. This leads us to a limitation.\n *\n * Limitation 1:\n\n * Only properties in the rule where the `@apply`\n * is used are considered as default values.\n * If another rule matches the element and sets `background` with\n * less specificity than the rule in which `@apply` appears,\n * the `background` will not be set.\n *\n * Limitation 2:\n *\n * When using Polymer's `updateStyles` api, new properties may not be set for\n * `@apply` properties.\n\n*/\n\n'use strict';\n\nimport {rx, forEachRule, processVariableAndFallback, rulesForStyle} from './style-util'\nimport templateMap from './template-map'\nimport StyleInfo from './style-info'\n\nlet MIXIN_MATCH = rx.MIXIN_MATCH;\nlet VAR_ASSIGN = rx.VAR_ASSIGN;\n\nlet APPLY_NAME_CLEAN = /;\\s*/m;\nlet INITIAL_INHERIT = /^\\s*(initial)|(inherit)\\s*$/;\n\n// separator used between mixin-name and mixin-property-name when producing properties\n// NOTE: plain '-' may cause collisions in user styles\nlet MIXIN_VAR_SEP = '_-_';\n\n// map of mixin to property names\n// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}\nclass MixinMap {\n  constructor() {\n    this._map = {};\n  }\n  set(name, props) {\n    name = name.trim();\n    this._map[name] = {\n      properties: props,\n      dependants: {}\n    }\n  }\n  get(name) {\n    name = name.trim();\n    return this._map[name];\n  }\n}\n\nclass ApplyShim {\n  constructor() {\n    this._currentTemplate = null;\n    this._measureElement = null;\n    this._map = new MixinMap();\n    this._separator = MIXIN_VAR_SEP;\n    this._boundProduceCssProperties = (\n      matchText, propertyName, valueProperty, valueMixin) =>\n        this._produceCssProperties(\n          matchText, propertyName, valueProperty, valueMixin);\n  }\n  // return true if `cssText` contains a mixin definition or consumption\n  detectMixin(cssText) {\n    const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n    // reset state of the regexes\n    MIXIN_MATCH.lastIndex = 0;\n    VAR_ASSIGN.lastIndex = 0;\n    return has;\n  }\n  transformStyle(style, elementName) {\n    let ast = rulesForStyle(style);\n    this.transformRules(ast, elementName);\n    return ast;\n  }\n  transformRules(rules, elementName) {\n    this._currentTemplate = templateMap[elementName];\n    forEachRule(rules, (r) => {\n      this.transformRule(r);\n    });\n    this._currentTemplate = null;\n  }\n  transformRule(rule) {\n    rule.cssText = this.transformCssText(rule.parsedCssText);\n    // :root was only used for variable assignment in property shim,\n    // but generates invalid selectors with real properties.\n    // replace with `:host > *`, which serves the same effect\n    if (rule.selector === ':root') {\n      rule.selector = ':host > *';\n    }\n  }\n  transformCssText(cssText) {\n    // produce variables\n    cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);\n    // consume mixins\n    return this._consumeCssProperties(cssText);\n  }\n  _getInitialValueForProperty(property) {\n    if (!this._measureElement) {\n      this._measureElement = document.createElement('meta');\n      this._measureElement.style.all = 'initial';\n      document.head.appendChild(this._measureElement);\n    }\n    return window.getComputedStyle(this._measureElement).getPropertyValue(property);\n  }\n  // replace mixin consumption with variable consumption\n  _consumeCssProperties(text) {\n    let m;\n    // loop over text until all mixins with defintions have been applied\n    while((m = MIXIN_MATCH.exec(text))) {\n      let matchText = m[0];\n      let mixinName = m[1];\n      let idx = m.index;\n      // collect properties before apply to be \"defaults\" if mixin might override them\n      // match includes a \"prefix\", so find the start and end positions of @apply\n      let applyPos = idx + matchText.indexOf('@apply');\n      let afterApplyPos = idx + matchText.length;\n      // find props defined before this @apply\n      let textBeforeApply = text.slice(0, applyPos);\n      let textAfterApply = text.slice(afterApplyPos);\n      let defaults = this._cssTextToMap(textBeforeApply);\n      let replacement = this._atApplyToCssProperties(mixinName, defaults);\n      // use regex match position to replace mixin, keep linear processing time\n      text = [textBeforeApply, replacement, textAfterApply].join('');\n      // move regex search to _after_ replacement\n      MIXIN_MATCH.lastIndex = idx + replacement.length;\n    }\n    return text;\n  }\n  // produce variable consumption at the site of mixin consumption\n  // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))\n  // Example:\n  // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)\n  _atApplyToCssProperties(mixinName, fallbacks) {\n    mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');\n    let vars = [];\n    let mixinEntry = this._map.get(mixinName);\n    // if we depend on a mixin before it is created\n    // make a sentinel entry in the map to add this element as a dependency for when it is defined.\n    if (!mixinEntry) {\n      this._map.set(mixinName, {});\n      mixinEntry = this._map.get(mixinName);\n    }\n    if (mixinEntry) {\n      if (this._currentTemplate) {\n        mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;\n      }\n      let p, parts, f;\n      for (p in mixinEntry.properties) {\n        f = fallbacks && fallbacks[p];\n        parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];\n        if (f) {\n          parts.push(',', f);\n        }\n        parts.push(')');\n        vars.push(parts.join(''));\n      }\n    }\n    return vars.join('; ');\n  }\n\n  _replaceInitialOrInherit(property, value) {\n    let match = INITIAL_INHERIT.exec(value);\n    if (match) {\n      if (match[1]) {\n        // initial\n        // replace `initial` with the concrete initial value for this property\n        value = ApplyShim._getInitialValueForProperty(property);\n      } else {\n        // inherit\n        // with this purposfully illegal value, the variable will be invalid at\n        // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)\n        // and for inheriting values, will behave similarly\n        // we cannot support the same behavior for non inheriting values like 'border'\n        value = 'apply-shim-inherit';\n      }\n    }\n    return value;\n  }\n\n  // \"parse\" a mixin definition into a map of properties and values\n  // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')\n  _cssTextToMap(text) {\n    let props = text.split(';');\n    let property, value;\n    let out = {};\n    for (let i = 0, p, sp; i < props.length; i++) {\n      p = props[i];\n      if (p) {\n        sp = p.split(':');\n        // ignore lines that aren't definitions like @media\n        if (sp.length > 1) {\n          property = sp[0].trim();\n          // some properties may have ':' in the value, like data urls\n          value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));\n          out[property] = value;\n        }\n      }\n    }\n    return out;\n  }\n\n  _invalidateMixinEntry(mixinEntry) {\n    for (let elementName in mixinEntry.dependants) {\n      if (!this._currentTemplate || elementName !== this._currentTemplate.name) {\n        StyleInfo.invalidate(elementName);\n      }\n    }\n  }\n\n  _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {\n    // handle case where property value is a mixin\n    if (valueProperty) {\n      // form: --mixin2: var(--mixin1), where --mixin1 is in the map\n      processVariableAndFallback(valueProperty, (prefix, value) => {\n        if (value && this._map.get(value)) {\n          valueMixin = '@apply ' + value + ';';\n        }\n      });\n    }\n    if (!valueMixin) {\n      return matchText;\n    }\n    let mixinAsProperties = this._consumeCssProperties(valueMixin);\n    let prefix = matchText.slice(0, matchText.indexOf('--'));\n    let mixinValues = this._cssTextToMap(mixinAsProperties);\n    let combinedProps = mixinValues;\n    let mixinEntry = this._map.get(propertyName);\n    let oldProps = mixinEntry && mixinEntry.properties;\n    if (oldProps) {\n      // NOTE: since we use mixin, the map of properties is updated here\n      // and this is what we want.\n      combinedProps = Object.assign(Object.create(oldProps), mixinValues);\n    } else {\n      this._map.set(propertyName, combinedProps);\n    }\n    let out = [];\n    let p, v;\n    // set variables defined by current mixin\n    let needToInvalidate = false;\n    for (p in combinedProps) {\n      v = mixinValues[p];\n      // if property not defined by current mixin, set initial\n      if (v === undefined) {\n        v = 'initial';\n      }\n      if (oldProps && !(p in oldProps)) {\n        needToInvalidate = true;\n      }\n      out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);\n    }\n    if (needToInvalidate) {\n      this._invalidateMixinEntry(mixinEntry);\n    }\n    if (mixinEntry) {\n      mixinEntry.properties = combinedProps;\n    }\n    // because the mixinMap is global, the mixin might conflict with\n    // a different scope's simple variable definition:\n    // Example:\n    // some style somewhere:\n    // --mixin1:{ ... }\n    // --mixin2: var(--mixin1);\n    // some other element:\n    // --mixin1: 10px solid red;\n    // --foo: var(--mixin1);\n    // In this case, we leave the original variable definition in place.\n    if (valueProperty) {\n      prefix = matchText + ';' + prefix;\n    }\n    return prefix + out.join('; ') + ';';\n  }\n}\n\nlet applyShim = new ApplyShim();\nwindow['ApplyShim'] = applyShim;\nexport default applyShim;\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings'\nimport StyleTransformer from './style-transformer'\n\nexport let flush = function() {};\n\nif (!nativeShadow) {\n  let elementNeedsScoping = (element) => {\n    return (element.classList &&\n      !element.classList.contains(StyleTransformer.SCOPE_NAME) ||\n      // note: necessary for IE11\n      (element instanceof SVGElement && (!element.hasAttribute('class') ||\n      element.getAttribute('class').indexOf(StyleTransformer.SCOPE_NAME) < 0)));\n  }\n\n  let handler = (mxns) => {\n    for (let x=0; x < mxns.length; x++) {\n      let mxn = mxns[x];\n      if (mxn.target === document.documentElement ||\n        mxn.target === document.head) {\n        continue;\n      }\n      for (let i=0; i < mxn.addedNodes.length; i++) {\n        let n = mxn.addedNodes[i];\n        if (elementNeedsScoping(n)) {\n          let root = n.getRootNode();\n          if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // may no longer be in a shadowroot\n            let host = root.host;\n            if (host) {\n              let scope = host.is || host.localName;\n              StyleTransformer.dom(n, scope);\n            }\n          }\n        }\n      }\n      for (let i=0; i < mxn.removedNodes.length; i++) {\n        let n = mxn.removedNodes[i];\n        if (n.nodeType === Node.ELEMENT_NODE) {\n          let classes = undefined;\n          if (n.classList) {\n            classes = Array.from(n.classList);\n          } else if (n.hasAttribute('class')) {\n            classes = n.getAttribute('class').split(/\\s+/);\n          }\n          if (classes !== undefined) {\n            // NOTE: relies on the scoping class always being adjacent to the\n            // SCOPE_NAME class.\n            let classIdx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n            if (classIdx >= 0) {\n              let scope = classes[classIdx + 1];\n              if (scope) {\n                StyleTransformer.dom(n, scope, true);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window.customElements &&\n    !window.customElements.flush);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window.HTMLImports) {\n      window.HTMLImports.whenReady(delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse} from './css-parse'\nimport {nativeShadow, nativeCssVariables, nativeCssApply} from './style-settings'\nimport StyleTransformer from './style-transformer'\nimport * as StyleUtil from './style-util'\nimport StyleProperties from './style-properties'\nimport templateMap from './template-map'\nimport placeholderMap from './style-placeholder'\nimport StyleInfo from './style-info'\nimport StyleCache from './style-cache'\n\n// TODO(dfreedm): consider spliting into separate global\nimport ApplyShim from './apply-shim'\nimport {flush as watcherFlush} from './document-watcher'\n\nlet styleCache = new StyleCache();\n\nclass ShadyCSS {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    this._documentOwnerStyleInfo = StyleInfo.set(document.documentElement, new StyleInfo({rules: []}));\n    this._elementsHaveApplied = false;\n  }\n  get nativeShadow() {\n    return nativeShadow;\n  }\n  get nativeCss() {\n    return nativeCssVariables;\n  }\n  get nativeCssApply() {\n    return nativeCssApply;\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    let styles = template.content.querySelectorAll('style');\n    let cssText = [];\n    for (let i = 0; i < styles.length; i++) {\n      let s = styles[i];\n      cssText.push(s.textContent);\n      s.parentNode.removeChild(s);\n    }\n    return cssText.join('').trim();\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!this.nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    let hasMixins = ApplyShim.detectMixin(cssText);\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && this.nativeCss && !this.nativeCssApply) {\n      ApplyShim.transformRules(ast, elementName);\n    }\n    template._styleAst = ast;\n\n    let ownPropertyNames = [];\n    if (!this.nativeCss) {\n      ownPropertyNames = StyleProperties.decorateStyles(template._styleAst, info);\n    }\n    if (!ownPropertyNames.length || this.nativeCss) {\n      let root = this.nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template._styleAst, root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let is = host.getAttribute('is') || host.localName;\n    let typeExtension;\n    if (is !== host.localName) {\n      typeExtension = host.localName;\n    }\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template._styleAst;\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  applyStyle(host, overrideProps) {\n    let is = host.getAttribute('is') || host.localName;\n    let styleInfo = StyleInfo.get(host);\n    let hasApplied = Boolean(styleInfo);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (window.CustomStyle) {\n      let CS = window.CustomStyle;\n      if (CS._documentDirty) {\n        CS.findStyles();\n        if (!this.nativeCss) {\n          this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n        } else if (!this.nativeCssApply) {\n          CS._revalidateApplyShim();\n        }\n        CS.applyStyles();\n        // if no elements have booted yet, we can just update the document and be done\n        if (!this._elementsHaveApplied) {\n          return;\n        }\n        // if no native css custom properties, we must recalculate the whole tree\n        if (!this.nativeCss) {\n          this.updateStyles();\n          /*\n          When updateStyles() runs, this element may not have a shadowroot yet.\n          If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style\n          */\n          if (hasApplied) {\n            return;\n          }\n        }\n      }\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (this.nativeCss) {\n      if (styleInfo.overrideStyleProperties) {\n        this._updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._applyShimInvalid && template._style) {\n        // update template\n        if (!template._validating) {\n          ApplyShim.transformRules(template._styleAst, is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          StyleInfo.startValidating(is);\n        }\n        // update instance if native shadowdom\n        if (this.nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template._styleAst;\n      }\n    } else {\n      this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    }\n    if (hasApplied) {\n      let root = this._isRootOwner(host) ? host : host.shadowRoot;\n      // note: some elements may not have a root!\n      if (root) {\n        this._applyToDescendants(root);\n      }\n    }\n  }\n  _applyToDescendants(root) {\n    let c$ = root.children;\n    for (let i = 0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (c.shadowRoot) {\n        this.applyStyle(c);\n      }\n      this._applyToDescendants(c);\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = host.getAttribute('is') || host.localName;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!this.nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  _updateNativeProperties(element, properties) {\n    // remove previous properties\n    for (let p in properties) {\n      // NOTE: for bc with shim, don't apply null values.\n      if (p === null) {\n        element.style.removeProperty(p);\n      } else {\n        element.style.setProperty(p, properties[p]);\n      }\n    }\n  }\n  updateStyles(properties) {\n    this.applyStyle(this._documentOwner, properties);\n  }\n  /* Custom Style operations */\n  _transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (this.nativeCss && !this.nativeCssApply) {\n        ApplyShim.transformRule(rule);\n      }\n    });\n    if (this.nativeCss) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (this.nativeCss && !this.nativeCssApply) {\n      let ast = StyleUtil.rulesForStyle(style);\n      ApplyShim.transformRules(ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  _applyCustomStyleToDocument(style) {\n    if (!this.nativeCss) {\n      StyleProperties.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!this.nativeCss) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value.trim();\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!this.nativeCss) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\nwindow['ShadyCSS'] = new ShadyCSS();","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (window.HTMLImports) {\n    HTMLImports.whenReady(function() {\n      requestAnimationFrame(function() {\n        window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n      });\n    });\n  } else {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  }\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\n/*\n * Polyfills loaded: None\n * Used in: Chrome\n */\n\n// TODO: This needs to not exist at all.\n\nimport '../src/pre-polyfill.js'\n//TODO(notwaldorf): this is temporary and should be removed.\nimport '../bower_components/shadycss/src/ShadyCSS.js'\nimport '../src/post-polyfill.js'\nimport '../src/unresolved.js'\n"],"names":["StyleUtil.setElementClassRaw","StyleUtil.toCssText","StyleUtil.isKeyframesSelector","StyleUtil.forEachRule","rx","StyleUtil.rx","StyleUtil.processVariableAndFallback","StyleTransformer","StyleUtil.applyCss","StyleUtil.applyStyle","StyleUtil.rulesForStyle","watcherFlush","ApplyShim","StyleProperties"],"mappings":"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"}