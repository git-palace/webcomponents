{"version":3,"sources":["bower_components/html-imports/src/html-imports.js","src/post-polyfill.js","src/unresolved.js"],"names":["scope","newCustomEvent","type","params","window","CustomEvent","event","document","createEvent","initCustomEvent","bubbles","cancelable","detail","importForElement","element","useNative","ownerDocument","doc","parentNode","closest","importSelector","isImportLink","whenImportsReady","callback","imports","querySelectorAll","rootImportSelector","pending","length","i","l","imp","whenElementLoaded","whenDocumentReady","readyState","stateChanged","removeEventListener","addEventListener","whenReady","localName","src","onLoadingDone","isIE","node","nodeType","Node","ELEMENT_NODE","rel","constructor","Importer","documents","inflight","dynamicImportsMO","MutationObserver","m","handleMutations","observe","head","childList","subtree","loadImports","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","resolveUrlsInStyle","fixUrlAttributes","attrs","a","at","attributes","v","value","search","resolveUrlsInCssText","fixUrlsInTemplates","t$","fixUrlsInTemplate","template","content","n$","n","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","pre","url","post","urlPath","resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","success","fail","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","onload","request.onload","redirectedUrl","getResponseHeader","location","origin","protocol","host","response","responseText","status","send","navigator","userAgent","links","loadImport","link","import","fireEventIfNeeded","makeDocument","processImportsIfLoadingDone","createDocumentFragment","p1","p2","innerHTML","firstChild","baseEl","querySelector","removeAttribute","importDependenciesSelector","inlineScriptIndex","importDependencyAttr","encodeURIComponent","num","disconnect","flatten","scriptsOk","stylesOk","fireEvents","waitForStyles","runScripts","DOCUMENT_FRAGMENT_NODE","enumerable","cloneScript","s","s$","clone","j","ll","name","replaceChild","pendingScriptsSelector","pendingStylesSelector","needsMove","disabledLinkSelector","placeholder","insertBefore","nextSibling","newSibling","dispatchEvent","eventType","mutations","addedNodes","ii","elem","imps","target","HTMLImports","customElements","polyfillWrapFlushCallback","runAndClearCallback","flushCallback","cb","origWhenReady","HTMLImports.whenReady","requestAnimationFrame","WebComponents"],"mappings":"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","file":"webcomponents-hi.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        Path.resolveUrlsInStyle(element, base);\n      }\n    },\n\n    fixUrlAttributes(element, base) {\n      const attrs = ['action', 'src', 'href', 'url', 'style'];\n      for (let i = 0, a; i < attrs.length && (a = attrs[i]); i++) {\n        const at = element.attributes[a];\n        const v = at && at.value;\n        // Skip bound attribute values (assume binding is done via {} and []).\n        // TODO(valdrin) consider exposing a library-implementable hook.\n        if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n          at.value = (a === 'style') ?\n            Path.resolveUrlsInCssText(v, base) :\n            Path.replaceAttrUrl(v, base);\n        }\n      }\n    },\n\n    fixUrlsInTemplates(element, base) {\n      const t$ = element.querySelectorAll('template');\n      for (let i = 0; i < t$.length; i++) {\n        Path.fixUrlsInTemplate(t$[i], base);\n      }\n    },\n\n    fixUrlsInTemplate(template, base) {\n      // If template is not supported, still resolve urls within it.\n      const content = template.content || template;\n      const n$ = content.querySelectorAll(\n        'style, form[action], [src], [href], [url], [style]');\n      for (let i = 0; i < n$.length; i++) {\n        const n = n$[i];\n        if (n.localName == 'style') {\n          Path.resolveUrlsInStyle(n, base);\n        } else {\n          Path.fixUrlAttributes(n, base);\n        }\n      }\n      Path.fixUrlsInTemplates(content, base);\n    },\n\n    resolveUrlsInStyle(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        this.dynamicImportsMO.observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n        this.processImportsIfLoadingDone();\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      Path.fixUrlsInTemplates(content, url);\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      }\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          // Override baseURI so that link.import.baseURI can be used seemlessly\n          // on native or polyfilled html-imports.\n          Object.defineProperty(n, 'baseURI', {\n            get: () => n.href,\n            configurable: true,\n            enumerable: true\n          });\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const elem = m.addedNodes[ii];\n          if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          if (isImportLink(elem)) {\n            this.loadImport( /** @type {!HTMLLinkElement} */ (elem));\n          } else {\n            this.loadImports( /** @type {!Element} */ (elem));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  }\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  'use strict';\n\n  if (customElements && customElements.polyfillWrapFlushCallback) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    let flushCallback;\n    function runAndClearCallback() {\n      if (flushCallback) {\n        let cb = flushCallback;\n        flushCallback = null;\n        cb();\n        return true;\n      }\n    }\n    let origWhenReady = HTMLImports.whenReady;\n    customElements.polyfillWrapFlushCallback(function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports.whenReady = function(cb) {\n      origWhenReady(function() {\n        // custom element code may add dynamic imports\n        // to match processing of native custom elements before\n        // domContentLoaded, we wait for these imports to resolve first.\n        if (runAndClearCallback()) {\n          HTMLImports.whenReady(cb);\n        } else {\n          cb();\n        }\n      });\n    }\n\n  }\n\n  HTMLImports.whenReady(function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})(window.WebComponents);\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function(scope) {\n\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})(window.WebComponents);\n"]}